[
["index.html", "Source Code collection : Deep-sea sponge microbiome project", " Source Code collection : Deep-sea sponge microbiome project Kathrin Busch 2020-09-03 Please cite the original article of Busch et al. 2020. Illustrated by Kathrin Busch body{ /* Normal */ font-size: 18px; color: Black; } td { /* Table */ font-size: 8px; } h1.title { font-size: 58px; color: #8195cc; } h1 { /* Header 1 */ font-size: 40px; color: #8195cc; } h2 { /* Header 2 */ font-size: 22px; color: #e5e5e5; } h3 { /* Header 3 */ font-size: 18px; font-family: \"Times New Roman\", Times, serif; color: #e5e5e5; } code.r{ /* Code block */ font-size: 12px; } pre { /* Code block - determines code spacing between lines */ font-size: 14px; } "],
["s-amplicon-core-analyses.html", " 16S Amplicon Core Analyses 0.1 Workflow diagram 0.2 Getting started 0.3 Remove heterogeneiety spacers and primers 0.4 Visualise sequence quality and determine truncation length 0.5 Trimming, truncation, chimera removal and denoising (DADA2 algorithm) 0.6 Taxonomic classification (using primer-specific Naïve Bayes classifier created on SILVA database) and taxonomy-based filtering 0.7 Set min-frequency and subsample based on sequence frequency 0.8 Visualise Filtering steps and Denoising stats 0.9 Create phylogenetic backbone tree and compute core-diversity metrics 0.10 Compute rarefaction curves 0.11 Export clustering dendrogram 0.12 Data crunching for format compatibility 0.13 Diversity indices", " 16S Amplicon Core Analyses 0.1 Workflow diagram This documentation includes the core bioinformatic SOP developed within the deep-sea sponge microbiome project. The very basic workflow looks like this: 0.2 Getting started Operated from Ubuntu 14.04.6 LTS (GNU/Linux 4.4.0-148-generic x86_64) command line. Program versions used: qiime2-2019.10 (via miniconda3 v4.4.10) R version 3.5.1 (unless other version is stated explicitely) SILVA_138 Input files and structure: Downloaded SILVA_138_SSURef_NR99_tax_silva.fasta.gz from https://www.arb-silva.de/no_cache/download/archive/release_138/Exports/ (accessed on the 19th of December 2019) Started the following script from the working directory (path_experiment) within a screen session Download input files PWDa=`cat path_experiment.txt` echo $PWDa PWDb=`cat path_taxonomy.txt` echo $PWDb cd $PWDa/manually_created/ # manually filter dataset, remove outlier samples [outlier = (i) samples with unclear taxonomy (ii) dead sponges (iii) other life stages than adult (iv) samples which look weird in pilot analysis and clustered strongly apart from the rest of the species samples (e.g.trawled samples which clustered with sediment &amp; epibiotic encrusting sponges with atypic microbiome)]. All samples were manually doublechecked based on negative controls. R data&lt;-read.table(file =&quot;metadataV34_complete.txt&quot;, header = T, sep=&quot;\\t&quot;) dat&lt;-read.table(file =&quot;filter_manually.txt&quot;, header = T, sep=&quot;\\t&quot;) mydata&lt;-merge(data, dat, by=&quot;SampleID&quot;, all=TRUE) mydata$remove&lt;-as.character(mydata$remove) mydata$remove[is.na(mydata$remove)] &lt;- &quot;keep&quot; my&lt;-mydata[!(mydata$remove==&quot;delete&quot;),] my$remove&lt;-NULL names(my)[1] &lt;- c(&#39;#SampleID&#39;) write.table(my, file = &quot;metadataV34.txt&quot;,sep=&quot;\\t&quot;,col.names= T, row.names=F) quit(&quot;no&quot;) sed &#39;s/&quot;//g&#39; metadataV34.txt &gt; $PWDa/metadataV34.txt cp $PWDa/manually_created/pre-33-manifestV34.csv $PWDa/pre-33-manifestV34.csv rm -r -f -- - metadataV34.txt source activate qiime2-2019.10 0.3 Remove heterogeneiety spacers and primers cd $PWDa/ mkdir trimmed cd $PWDa/reads/ for i in *_R1_001.fastq do cutadapt -g CCTACGGGAGGCAGCAG -o $PWDa/trimmed/$i $i done 0.4 Visualise sequence quality and determine truncation length cd $PWDa/ mkdir dada2 qiime tools import \\ --type &#39;SampleData[SequencesWithQuality]&#39; \\ --input-path $PWDa/pre-33-manifestV34.csv \\ --output-path $PWDa/dada2/single-end-demux.qza \\ --input-format SingleEndFastqManifestPhred33 qiime demux summarize \\ --i-data $PWDa/dada2/single-end-demux.qza \\ --o-visualization $PWDa/dada2/single-end-demux.qzv cd $PWDa/dada2 unzip single-end-demux.qzv cd &quot;$(\\ls -1dt ./*/ | head -n 1)/data&quot; sed &#39;s|,|\\t|g&#39; forward-seven-number-summaries.csv &gt; forward-seven-number-summaries.txt sed -i &#39;1s/^/sequence_base /&#39; forward-seven-number-summaries.txt cp forward-seven-number-summaries.txt $PWDa/dada2/forward-seven-number-summaries.txt R list.of.packages &lt;- c(&quot;tidyr&quot;, &quot;plyr&quot;, &quot;stringr&quot;, &quot;ggplot2&quot;) new.packages &lt;- list.of.packages[!(list.of.packages %in% installed.packages()[,&quot;Package&quot;])] if(length(new.packages)) install.packages(new.packages, repos=&#39;http://cran.us.r-project.org&#39;) library(tidyr) library(plyr) library(stringr) library(ggplot2) mydata = read.table(file =&quot;forward-seven-number-summaries.txt&quot;, header = T) mydata=as.data.frame(mydata) a&lt;-names(mydata)[1] b&lt;-names(mydata)[ncol(mydata)] data&lt;-gather(mydata,condition, measurement, names(mydata)[2:ncol(mydata)], factor_key=T) dat &lt;- subset(data, condition != &quot;sequence_base&quot;) names(dat)[names(dat) == &quot;condition&quot;] &lt;- &quot;base&quot; names(dat)[names(dat) == &quot;measurement&quot;] &lt;- &quot;quality&quot; dat&lt;-rename(dat, c(&quot;sequence_base&quot;=&quot;percentile&quot;)) dat&lt;-dat[!(dat$percentile==&quot;count&quot;),] dat&lt;-dat[!(dat$percentile==&quot;2%&quot;),] dat&lt;-dat[!(dat$percentile==&quot;98%&quot;),] dat$percentile&lt;-revalue(dat$percentile, c(&quot;9%&quot;=&quot;09%&quot;)) data_wide &lt;- spread(dat, percentile, quality) data_wide$base&lt;-str_remove_all(data_wide$base, &quot;[X]&quot;) data_wide$base&lt;-as.numeric(data_wide$base) write.table(data_wide , file = &quot;data_wide.txt&quot;,sep=&quot;\\t&quot;,col.names= T, row.names=F) data_wide = read.table(file =&quot;data_wide.txt&quot;, header = T) col &lt;- data.frame(name = c(&quot;91%&quot;,&quot;75%&quot;, &quot;50% (median)&quot;,&quot;25%&quot;,&quot;09%&quot;), start = c(11.5, 9.5, 8.25, 6,4), end = c(13, 11, 8.75, 7.5,5.5), percentile = c(&quot;91%&quot;,&quot;75%&quot;, &quot;50% (median)&quot;,&quot;25%&quot;,&quot;09%&quot;), stringsAsFactors = FALSE) pdf(file=&quot;sequence_quality.pdf&quot;, height= 10, width= 14) p&lt;-ggplot(data=data_wide, aes(x=base, y=X50.)) + geom_line(linetype=&quot;solid&quot;, size=1.2) + labs(x = &quot;Sequence Base&quot;, y=&quot;Quality score&quot;) + xlim(0, 305) + ylim(0, 40) + geom_vline(xintercept = 270, linetype=&quot;dotted&quot;, size=1.5)+ annotate(&quot;text&quot;, x = 260, y = 0, label = &#39;atop(bold(&quot;270&quot;))&#39;, size=7, parse=TRUE) + geom_ribbon(aes(ymin=X25., ymax=X50.), fill=&quot;darkblue&quot;,alpha=0.1) + geom_ribbon(aes(ymin=X09., ymax=X50.), fill=&quot;darkblue&quot;,alpha=0.1) + geom_ribbon(aes(ymin=X50., ymax=X75.), fill=&quot;#4682b4&quot;,alpha=0.3) + geom_ribbon(aes(ymin=X50., ymax=X91.), fill=&quot;#4682b4&quot;,alpha=0.3) + geom_rect(data=col, aes(NULL,NULL, ymin=start, ymax=end, fill=percentile), xmin=1, xmax=8, color=&quot;white&quot;, alpha=1) + scale_fill_manual(values=c(&quot;91%&quot; = &quot;#c7d9e8ff&quot;, &quot;75%&quot; = &quot;#9fbdd7ff&quot;, &quot;50% (median)&quot; = &quot;#000000ff&quot;, &quot;25%&quot; = &quot;#cecee8ff&quot;, &quot;09%&quot; = &quot;#e5e5f3ff&quot;)) + annotate(&quot;text&quot;, x = 13, y = 13, label = &#39;atop(bold(&quot;Percentile&quot;))&#39;, size=5, parse=TRUE) + annotate(&quot;text&quot;, x = 18, y = 12.25, label = &quot;91 %&quot;, size=4) + annotate(&quot;text&quot;, x = 18, y = 10.25, label = &quot;75 %&quot;, size=4) + annotate(&quot;text&quot;, x = 26.5, y = 7.75, label = &#39;atop(bold(&quot;50 % (median)&quot;))&#39;, size=4, parse=TRUE) + annotate(&quot;text&quot;, x = 18, y = 6.5, label = &quot;25 %&quot;, size=4) + annotate(&quot;text&quot;, x = 18, y = 4.5, label = &quot;9 %&quot;, size=4) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = &quot;grey&quot;, size = 1.5, linetype = &quot;solid&quot;), panel.background = element_rect(fill = &quot;#ffffff&quot;,colour = NA), plot.background = element_rect(fill = &#39;#ffffff&#39;), legend.position = &quot;none&quot;, axis.title.x = element_text(color=&quot;black&quot;, size=20, face=&quot;bold&quot;), axis.text.x = element_text(face=&quot;plain&quot;, color=&quot;black&quot;,size=18, angle=0), axis.title.y = element_text(color=&quot;black&quot;, size=20, face=&quot;bold&quot;), axis.text.y = element_text(face=&quot;plain&quot;, color=&quot;black&quot;,size=18, angle=0)) p dev.off() quit(&quot;no&quot;) cp sequence_quality.pdf $PWDa/dada2/sequence_quality.pdf cd $PWDa/dada2 rm -r -f -- - -d */ cd $PWDa/ 0.5 Trimming, truncation, chimera removal and denoising (DADA2 algorithm) qiime dada2 denoise-single \\ --i-demultiplexed-seqs $PWDa/dada2/single-end-demux.qza \\ --p-trim-left 0 \\ --p-trunc-len 270 \\ --p-chimera-method consensus \\ --p-n-threads 0 \\ --p-n-reads-learn 1000000 \\ --o-table $PWDa/dada2/dada2-table.qza \\ --o-representative-sequences $PWDa/dada2/dada2-rep-seqs.qza \\ --o-denoising-stats $PWDa/dada2/dada2-denoising-stats.qza qiime metadata tabulate \\ --m-input-file $PWDa/dada2/dada2-denoising-stats.qza \\ --o-visualization $PWDa/dada2/dada2-denoising-stats.qzv qiime feature-table summarize \\ --i-table $PWDa/dada2/dada2-table.qza \\ --o-visualization $PWDa/dada2/dada2-table.qzv \\ --m-sample-metadata-file $PWDa/metadataV34.txt 0.6 Taxonomic classification (using primer-specific Naïve Bayes classifier created on SILVA database) and taxonomy-based filtering cd $PWDb/ gunzip *.gz grep -e &quot;&gt;&quot; SILVA_138_SSURef_NR99_tax_silva.fasta &gt; taxonomy.txt sed -e &#39;s/\\s\\+/_/g&#39; taxonomy.txt &gt; modified_taxonomy.txt R list.of.packages &lt;- c(&quot;plyr&quot;, &quot;stringr&quot;) new.packages &lt;- list.of.packages[!(list.of.packages %in% installed.packages()[,&quot;Package&quot;])] if(length(new.packages)) install.packages(new.packages, repos=&#39;http://cran.us.r-project.org&#39;) library(stringr) library(plyr) data&lt;-read.table(&quot;modified_taxonomy.txt&quot;, header=FALSE) data[,2]&lt;-data[,1] datanew&lt;-str_split_fixed(data[,2], &quot;;&quot;, 7) datanew&lt;-as.data.frame(datanew) datanew[,8]&lt;-datanew[,1] datanew[] &lt;- lapply(datanew, gsub, pattern=&#39;&gt;&#39;, replacement=&#39;&#39;) datanew[,1] &lt;- lapply(datanew, sub, pattern=&#39;.*_&#39;, replacement=&#39;&#39;) datanew[,8] &lt;-as.character(datanew[,8]) datanew[,8] &lt;-gsub(&quot;\\\\_.*&quot;, &quot;&quot;, datanew[,8]) datanew[,9]&lt;-datanew[,1] datanew[,10]&lt;-datanew[,2] datanew[,11]&lt;-datanew[,3] datanew[,12]&lt;-datanew[,4] datanew[,13]&lt;-datanew[,5] datanew[,14]&lt;-datanew[,6] datanew[,15]&lt;-datanew[,7] datanew[,1]&lt;-NULL datanew[,1]&lt;-NULL datanew[,1]&lt;-NULL datanew[,1]&lt;-NULL datanew[,1]&lt;-NULL datanew[,1]&lt;-NULL datanew[,1]&lt;-NULL datanew[,2]&lt;- paste((rep(&quot;k__&quot;, length(datanew[,2]))),datanew[,2]) datanew[,3]&lt;- paste((rep(&quot;p__&quot;, length(datanew[,3]))),datanew[,3]) datanew[,4]&lt;- paste((rep(&quot;c__&quot;, length(datanew[,4]))),datanew[,4]) datanew[,5]&lt;- paste((rep(&quot;o__&quot;, length(datanew[,5]))),datanew[,5]) datanew[,6]&lt;- paste((rep(&quot;f__&quot;, length(datanew[,6]))),datanew[,6]) datanew[,7]&lt;- paste((rep(&quot;g__&quot;, length(datanew[,7]))),datanew[,7]) datanew[,8]&lt;- paste((rep(&quot;s__&quot;, length(datanew[,8]))),datanew[,8]) datanew[] &lt;- lapply(datanew, gsub, pattern=&#39; &#39;, replacement=&#39;&#39;) datanew[,9]&lt;- paste(datanew[,2],datanew[,3],datanew[,4],datanew[,5],datanew[,6],datanew[,7],datanew[,8], sep=&quot;; &quot;) datanew[,2]&lt;-NULL datanew[,2]&lt;-NULL datanew[,2]&lt;-NULL datanew[,2]&lt;-NULL datanew[,2]&lt;-NULL datanew[,2]&lt;-NULL datanew[,2]&lt;-NULL datanew[,3]&lt;- paste(datanew[,1],datanew[,2], sep=&quot; &quot;) datanew[,1]&lt;-NULL datanew[,1]&lt;-NULL write.table(datanew, file = &quot;taxonomy_7levels.txt&quot;,sep=&quot;\\t&quot;,col.names= F, row.names=F) quit(&quot;no&quot;) sed &#39;s/&quot;//&#39; taxonomy_7levels.txt &gt; taxonomy_7_levels.txt sed &#39;s/&quot;$//&#39; taxonomy_7_levels.txt &gt; taxonomy_7_levels_fin.txt rm -r -f -- -taxonomy_7_levels.txt rm -r -f -- -taxonomy_7levels.txt rm -r -f -- -modified_taxonomy.txt rm -r -f -- -taxonomy.txt sed &#39;s/ /&#39;$&#39;\\t&#39;&#39;/&#39; taxonomy_7_levels_fin.txt &gt;taxonomy_7_levels.txt rm -r -f -- -taxonomy_7_levels_fin.txt sed &#39;/&gt;/s/\\s.*// &#39; SILVA_138_SSURef_NR99_tax_silva.fasta&gt;silva_138_99_fin.fasta sed &#39;/^&gt;/! s/[U]/\\T/g&#39; silva_138_99_fin.fasta &gt; silva_138_99.fasta rm -r -f -- - silva_138_99_fin.fasta qiime tools import \\ --type &#39;FeatureData[Sequence]&#39; \\ --input-path silva_138_99.fasta \\ --output-path silva_138_99.qza qiime tools import \\ --type &#39;FeatureData[Taxonomy]&#39; \\ --input-format HeaderlessTSVTaxonomyFormat \\ --input-path taxonomy_7_levels.txt \\ --output-path silva138-ref-taxonomy.qza qiime feature-classifier extract-reads \\ --i-sequences silva_138_99.qza \\ --p-f-primer CCTACGGGAGGCAGCAG \\ --p-r-primer GGACTACHVGGGTWTCTAAT \\ --o-reads silva138V3V4-ref-seqs.qza qiime feature-classifier fit-classifier-naive-bayes \\ --i-reference-reads silva138V3V4-ref-seqs.qza \\ --i-reference-taxonomy silva138-ref-taxonomy.qza \\ --o-classifier Silva138V3V4-classifier.qza rm -r -f -- -silva138V3V4-ref-seqs.qza rm -r -f -- -silva138-ref-taxonomy.qza rm -r -f -- -silva_138_99.qza rm -r -f -- -silva_138_99.fasta rm -r -f -- -taxonomy_7_levels.txt rm -r -f -- -SILVA_138_SSURef_NR99_tax_silva.fasta cd $PWDa/ qiime feature-classifier classify-sklearn \\ --p-n-jobs 1 \\ --p-reads-per-batch 1000 \\ --i-classifier $PWDb/Silva138V3V4-classifier.qza \\ --i-reads $PWDa/dada2/dada2-rep-seqs.qza \\ --p-confidence 0.8 \\ --o-classification $PWDa/dada2/Silva138V3V4-taxonomy-dada2.qza qiime metadata tabulate \\ --m-input-file $PWDa/dada2/Silva138V3V4-taxonomy-dada2.qza \\ --o-visualization $PWDa/dada2/Silva138V3V4-taxonomy-dada2.qzv qiime feature-table filter-features \\ --i-table $PWDa/dada2/dada2-table.qza \\ --m-metadata-file $PWDa/dada2/Silva138V3V4-taxonomy-dada2.qza \\ --p-where &quot;Taxon NOT LIKE &#39;%Chloroplast%&#39;&quot; \\ --o-filtered-table $PWDa/dada2/dada2-tablenochloroplasts.qza qiime feature-table filter-features \\ --i-table $PWDa/dada2/dada2-tablenochloroplasts.qza \\ --m-metadata-file $PWDa/dada2/Silva138V3V4-taxonomy-dada2.qza \\ --p-where &quot;Taxon NOT LIKE &#39;%Mitochondria%&#39;&quot; \\ --o-filtered-table $PWDa/dada2/dada2-tablenochloroplastsmitochondria.qza qiime feature-table filter-features \\ --i-table $PWDa/dada2/dada2-tablenochloroplastsmitochondria.qza \\ --m-metadata-file $PWDa/dada2/Silva138V3V4-taxonomy-dada2.qza \\ --p-where &quot;Taxon NOT LIKE &#39;%Unassigned%&#39;&quot; \\ --o-filtered-table $PWDa/dada2/dada2-tablenochloroplastsmitochondriaUnassigned.qza qiime feature-table summarize \\ --i-table $PWDa/dada2/dada2-tablenochloroplastsmitochondriaUnassigned.qza \\ --o-visualization $PWDa/dada2/dada2-tablenochloroplastsmitochondriaUnassigned.qzv \\ --m-sample-metadata-file $PWDa/metadataV34.txt 0.7 Set min-frequency and subsample based on sequence frequency cd $PWDa/dada2 unzip dada2-tablenochloroplastsmitochondriaUnassigned.qzv cd &quot;$(\\ls -1dt ./*/ | head -n 1)/data&quot; sed &#39;s|,|\\t|g&#39; sample-frequency-detail.csv &gt; sample-frequency-detail.txt cp sample-frequency-detail.txt $PWDa/dada2/sample-frequency-detail.txt cd $PWDa/dada2 echo &quot;5000&quot; &gt;&gt; $PWDa/dada2/min-frequency.txt R list.of.packages &lt;- c(&quot;tidyr&quot;, &quot;plyr&quot;, &quot;stringr&quot;, &quot;ggplot2&quot;, &quot;gridExtra&quot;) new.packages &lt;- list.of.packages[!(list.of.packages %in% installed.packages()[,&quot;Package&quot;])] if(length(new.packages)) install.packages(new.packages, repos=&#39;http://cran.us.r-project.org&#39;) library(tidyr) library(plyr) library(stringr) library(ggplot2) library(gridExtra) mydata = read.table(file =&quot;sample-frequency-detail.txt&quot;, header = F) mydata&lt;-rename(mydata, c(&quot;V1&quot;=&quot;Lost_Samples&quot;,&quot;V2&quot;=&quot;Frequency&quot;)) pdf(file=&quot;sample_frequencies.pdf&quot;, height= 25, width= 30) vari = read.table(file =&quot;min-frequency.txt&quot;, header = F) names(vari)[1] &lt;- &quot;seqdepth&quot; p&lt;-ggplot(data=mydata, aes(mydata$Frequency)) + geom_histogram(breaks=seq(0, max(mydata$Frequency), by=1000), col=&quot;darkblue&quot;, fill=&quot;darkblue&quot;, alpha=0.2)+ labs(x = &quot;Frequency per sample&quot;, y=&quot;Number of samples&quot;) + xlim(0, max(mydata$Frequency)) + geom_vline(xintercept = vari[1,1], linetype=&quot;dotted&quot;, size=1.5)+ annotate(&quot;text&quot;, vari[1,1]+1000, Inf, label = vari[1,1], size=7, parse=TRUE, hjust = 0, vjust = 1) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = &quot;grey&quot;, size = 1.5, linetype = &quot;solid&quot;), panel.background = element_rect(fill = &quot;#ffffff&quot;,colour = NA), plot.background = element_rect(fill = &#39;#ffffff&#39;), legend.position = &quot;none&quot;, axis.title.x = element_text(color=&quot;black&quot;, size=20, face=&quot;bold&quot;), axis.text.x = element_text(face=&quot;plain&quot;, color=&quot;black&quot;,size=18, angle=0), axis.title.y = element_text(color=&quot;black&quot;, size=20, face=&quot;bold&quot;), axis.text.y = element_text(face=&quot;plain&quot;, color=&quot;black&quot;,size=18, angle=0)) mydata2&lt;-mydata[mydata$Frequency &lt; vari[1,1], ] write.table(mydata2, file = &quot;sample-frequency-lost_samples.txt&quot;,sep=&quot;\\t&quot;,col.names= T, row.names=F) rownames(mydata2) &lt;- NULL p2 &lt;- gridExtra::tableGrob(mydata2) grid.arrange(p, p2 ,nrow=1, widths = 2:1) dev.off() quit(&quot;no&quot;) rm -r -f -- - -d */ var=`cat min-frequency.txt` echo $var cd $PWDa/ qiime feature-table filter-samples \\ --i-table $PWDa/dada2/dada2-tablenochloroplastsmitochondriaUnassigned.qza \\ --p-min-frequency $var \\ --o-filtered-table $PWDa/dada2/dada2-tablenochloroplastsmitochondriaUnassigned$var.qza qiime feature-table summarize \\ --i-table $PWDa/dada2/dada2-tablenochloroplastsmitochondriaUnassigned$var.qza \\ --o-visualization $PWDa/dada2/dada2-tablenochloroplastsmitochondriaUnassigned$var.qzv \\ --m-sample-metadata-file $PWDa/metadataV34.txt 0.8 Visualise Filtering steps and Denoising stats cd $PWDa/dada2/ unzip dada2-denoising-stats.qza cd &quot;$(\\ls -1dt ./*/ | head -n 1)/data&quot; sed &#39;1 s/ /_/g&#39; stats.tsv &gt;stats2.tsv sed -e &#39;s/,/\\t/g&#39; stats2.tsv &gt; tmpfile; mv tmpfile stats.txt sed 2d stats.txt &gt; stats3.txt sed &#39;1 s/-/_/g&#39; stats3.txt &gt;stats4.txt R data&lt;- read.table(file=&quot;stats4.txt&quot;, header =T) data$percentage_of_input_passed_filter &lt;-NULL data$percentage_of_input_non_chimeric &lt;-NULL write.table(data, file = &quot;0stats.txt&quot;,sep=&quot;\\t&quot;,col.names= T, row.names=F) quit(&quot;no&quot;) sed &#39;s/&quot;//g&#39; 0stats.txt &gt; 1stats.txt cp -r &quot;1stats.txt&quot; $PWDa/dada2/ cd $PWDa/dada2/ qiime feature-table summarize \\ --i-table $PWDa/dada2/dada2-tablenochloroplasts.qza \\ --o-visualization $PWDa/dada2/dada2-tablenochloroplasts.qzv \\ --m-sample-metadata-file $PWDa/metadataV34.txt unzip dada2-tablenochloroplasts.qzv cd &quot;$(\\ls -1dt ./*/ | head -n 1)/data&quot; sed -e &#39;s/,/\\t/g&#39; sample-frequency-detail.csv &gt; tmpfile; mv tmpfile sample-frequency-detail.txt sed -i &#39;1i sample-id nochloroplasts&#39; sample-frequency-detail.txt mv sample-frequency-detail.txt 2stats.txt cp -r &quot;2stats.txt&quot; $PWDa/dada2/ cd $PWDa/dada2/ qiime feature-table summarize \\ --i-table $PWDa/dada2/dada2-tablenochloroplastsmitochondria.qza \\ --o-visualization $PWDa/dada2/dada2-tablenochloroplastsmitochondria.qzv \\ --m-sample-metadata-file $PWDa/metadataV34.txt unzip dada2-tablenochloroplastsmitochondria.qzv cd &quot;$(\\ls -1dt ./*/ | head -n 1)/data&quot; sed -e &#39;s/,/\\t/g&#39; sample-frequency-detail.csv &gt; tmpfile; mv tmpfile sample-frequency-detail.txt sed -i &#39;1i sample-id nomitochondria&#39; sample-frequency-detail.txt mv sample-frequency-detail.txt 3stats.txt cp -r &quot;3stats.txt&quot; $PWDa/dada2/ cd $PWDa/dada2/ unzip dada2-tablenochloroplastsmitochondriaUnassigned.qzv cd &quot;$(\\ls -1dt ./*/ | head -n 1)/data&quot; sed -e &#39;s/,/\\t/g&#39; sample-frequency-detail.csv &gt; tmpfile; mv tmpfile sample-frequency-detail.txt sed -i &#39;1i sample-id nounassigned&#39; sample-frequency-detail.txt mv sample-frequency-detail.txt 4stats.txt cp -r &quot;4stats.txt&quot; $PWDa/dada2/ cd $PWDa/dada2/ unzip dada2-tablenochloroplastsmitochondriaUnassigned$var.qzv cd &quot;$(\\ls -1dt ./*/ | head -n 1)/data&quot; sed -e &#39;s/,/\\t/g&#39; sample-frequency-detail.csv &gt; tmpfile; mv tmpfile sample-frequency-detail.txt sed -i &#39;1i sample-id samplingdepth&#39; sample-frequency-detail.txt R data&lt;- read.table(file=&quot;sample-frequency-detail.txt&quot;, header =T) min&lt;-min(data$samplingdepth) write.table(min, file = &quot;sample_read_count_min_at_seq_depth.txt&quot;,sep=&quot;\\t&quot;,col.names= F, row.names=F) quit(&quot;no&quot;) mv sample-frequency-detail.txt 5stats.txt cp -r &quot;5stats.txt&quot; $PWDa/dada2/ cp -r &quot;sample_read_count_min_at_seq_depth.txt&quot; $PWDa/dada2/ cd $PWDa/dada2/ wc -l 5stats.txt &gt; temp.txt cut -d&#39; &#39; -f1 temp.txt vari=$(cut -d&#39; &#39; -f1 temp.txt ) echo &quot;$(($vari-1))&quot; &gt; sample_number_end.txt wc -l 1stats.txt &gt; temp2.txt cut -d&#39; &#39; -f1 temp2.txt varis=$(cut -d&#39; &#39; -f1 temp2.txt ) echo &quot;$(($varis-1))&quot; &gt; sample_number_start.txt rm -r -f -- - 5stats.txt rm -r -f -- - temp.txt rm -r -f -- - temp2.txt sed &#39;1 s/\\-/_/g&#39; 1stats.txt &gt; 1stats2.txt sed &#39;1 s/\\-/_/g&#39; 2stats.txt &gt; 2stats2.txt sed &#39;1 s/\\-/_/g&#39; 3stats.txt &gt; 3stats2.txt sed &#39;1 s/\\-/_/g&#39; 4stats.txt &gt; 4stats2.txt R list.of.packages &lt;- c(&quot;plyr&quot;, &quot;stringr&quot;) new.packages &lt;- list.of.packages[!(list.of.packages %in% installed.packages()[,&quot;Package&quot;])] if(length(new.packages)) install.packages(new.packages, repos=&#39;http://cran.us.r-project.org&#39;) library(stringr) library(plyr) data1&lt;- read.table(file=&quot;1stats2.txt&quot;, header =T) data2&lt;- read.table(file=&quot;2stats2.txt&quot;, header =T) data3&lt;- read.table(file=&quot;3stats2.txt&quot;, header =T) data4&lt;- read.table(file=&quot;4stats2.txt&quot;, header =T) x&lt;-merge(data1,data2, by=&quot;sample_id&quot;) x2&lt;-merge(x,data3,by=&quot;sample_id&quot;) x3&lt;-merge(x2,data4, by=&quot;sample_id&quot;) x4&lt;-rename(x3, c(&quot;sample_id&quot;=&quot;SampleID&quot;,&quot;nochloroplasts&quot;=&quot;non_chloroplastic&quot;,&quot;nomitochondria&quot;=&quot;non_mitochondric&quot;,&quot;nounassigned&quot;=&quot;non_unassigned&quot;)) x4$input_percent&lt;-x4$input/x4$input*100 x4$filtered_percent&lt;-100/x4$input*x4$filtered x4$denoised_percent&lt;-100/x4$input*x4$denoised x4$non_chimeric_percent&lt;-100/x4$input*x4$non_chimeric x4$non_chloroplastic_percent&lt;-100/x4$input*x4$non_chloroplastic x4$non_mitochondric_percent&lt;-100/x4$input*x4$non_mitochondric x4$non_unassigned_percent&lt;-100/x4$input*x4$non_unassigned x4$filtered&lt;-NULL x4$filtered_percent&lt;-NULL myvars &lt;- c(&quot;SampleID&quot;,&quot;input&quot;, &quot;denoised&quot;, &quot;non_chimeric&quot;,&quot;non_chloroplastic&quot;,&quot;non_mitochondric&quot;,&quot;non_unassigned&quot;) absolute &lt;- x4[myvars] myvars &lt;- c(&quot;SampleID&quot;,&quot;input_percent&quot;, &quot;denoised_percent&quot;, &quot;non_chimeric_percent&quot;,&quot;non_chloroplastic_percent&quot;,&quot;non_mitochondric_percent&quot;,&quot;non_unassigned_percent&quot;) relative &lt;- x4[myvars] write.table(absolute, file = &quot;denoising_absolute.txt&quot;,sep=&quot;\\t&quot;,col.names= T, row.names=F) write.table(relative, file = &quot;denoising_relative.txt&quot;,sep=&quot;\\t&quot;,col.names= T, row.names=F) quit(&quot;no&quot;) sed &#39;s/&quot;//g&#39; denoising_absolute.txt &gt; sample_denoising_absolute.txt sed &#39;s/&quot;//g&#39; denoising_relative.txt &gt; sample_denoising_relative.txt rm -r -f -- - 1stats.txt rm -r -f -- - 1stats2.txt rm -r -f -- - 2stats.txt rm -r -f -- - 2stats2.txt rm -r -f -- - 3stats.txt rm -r -f -- - 3stats2.txt rm -r -f -- - 4stats.txt rm -r -f -- - 4stats2.txt rm -r -f -- - denoising_absolute.txt rm -r -f -- - denoising_relative.txt rm -r -f -- - -d */ unzip dada2-tablenochloroplastsmitochondriaUnassigned$var.qzv cd &quot;$(\\ls -1dt ./*/ | head -n 1)/data&quot; sed -e &#39;s/,/\\t/g&#39; feature-frequency-detail.csv &gt; tmpfile; mv tmpfile feature-frequency-detail.txt sed -i &#39;1i FeatureID frequency&#39; feature-frequency-detail.txt cp -r &quot;feature-frequency-detail.txt&quot; $PWDa/dada2/ cd $PWDa/dada2/ rm -r -f -- - -d */ R list.of.packages &lt;- c(&quot;tidyr&quot;, &quot;ggplot2&quot;,&quot;grid&quot;,&quot;gridExtra&quot;,&quot;scales&quot;) new.packages &lt;- list.of.packages[!(list.of.packages %in% installed.packages()[,&quot;Package&quot;])] if(length(new.packages)) install.packages(new.packages, repos=&#39;http://cran.us.r-project.org&#39;) library(tidyr) library(ggplot2) library(gridExtra) library(scales) mydata = read.table(file=&quot;sample_denoising_absolute.txt&quot;, header =T) mydata=as.data.frame(mydata) a&lt;-names(mydata)[1] b&lt;-names(mydata)[ncol(mydata)] dat&lt;-gather(mydata,condition, measurement, names(mydata)[2:ncol(mydata)], factor_key=T) names(dat)[names(dat) == &quot;condition&quot;] &lt;- &quot;filtering_step&quot; names(dat)[names(dat) == &quot;measurement&quot;] &lt;- &quot;read_count&quot; addline_format &lt;- function(x,...){gsub(&#39;_&#39;,&#39;-\\n&#39;,x)} multiplot &lt;- function(..., plotlist=NULL, file, cols=1, layout=NULL) { library(grid) plots &lt;- c(list(...), plotlist) numPlots = length(plots) if (is.null(layout)) { layout &lt;- matrix(seq(1, cols * ceiling(numPlots/cols)), ncol = cols, nrow = ceiling(numPlots/cols)) } if (numPlots==1) { print(plots[[1]]) } else { grid.newpage() pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout)))) for (i in 1:numPlots) { matchidx &lt;- as.data.frame(which(layout == i, arr.ind = TRUE)) print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row, layout.pos.col = matchidx$col)) } } } col &lt;- data.frame(name = c(&quot;Mean&quot;), start = c(0.00001,0.00002), end = c(0.00001,0.00002), percentile = c(&quot;Mean&quot;), stringsAsFactors = FALSE) pdf(file=&quot;see_denoising.pdf&quot;, height= 17, width= 25) W &lt;- subset(dat, filtering_step == &quot;input&quot;) p1&lt;-ggplot(data=dat, aes(x=filtering_step, y=read_count)) + stat_summary(aes(y = read_count,group=1), fun.y=sum, colour=&quot;black&quot;, geom=&quot;line&quot;,group=1,linetype=&quot;solid&quot;, size=2) + labs(x = &quot;Filtering steps&quot;, y=&quot;Total read count&quot;, fill=&quot;&quot;) + geom_rect(data=col, aes(NULL,NULL, ymin=start, ymax=end, fill=percentile), xmin=0.00001, xmax=0.00002, color=&quot;white&quot;, alpha=1) + scale_fill_manual(values=c(&quot;Mean&quot; = &quot;white&quot;)) + scale_x_discrete(breaks=unique(dat$filtering_step), labels=addline_format(c(&quot;input&quot;, &quot;denoised&quot;,&quot;non_chimeric&quot;,&quot;non_chloroplastic&quot;, &quot;non_mitochondric&quot;, &quot;non_unassigned&quot;)))+ ylim(0, sum(W$read_count)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = &quot;grey&quot;, size = 1.5, linetype = &quot;solid&quot;), panel.background = element_rect(fill = &quot;#ffffff&quot;,colour = NA), plot.background = element_rect(fill = &#39;#ffffff&#39;), legend.text = element_text(color = &quot;white&quot;, size = 18), legend.position = c(0.96, 0.1), axis.title.x = element_text(color=&quot;black&quot;, size=20, face=&quot;bold&quot;), axis.text.x = element_text(face=&quot;plain&quot;, color=&quot;black&quot;,size=18, angle=0), axis.title.y = element_text(color=&quot;black&quot;, size=20, face=&quot;bold&quot;), axis.text.y = element_text(face=&quot;plain&quot;, color=&quot;black&quot;,size=18, angle=0)) p2&lt;-ggplot(data=dat, aes(x=filtering_step, y=read_count)) + geom_point(colour=&quot;black&quot;, alpha=0.2) + stat_summary(aes(y = read_count,group=1), fun.y=mean, colour=&quot;#cecee8ff&quot;, geom=&quot;line&quot;,group=1,linetype=&quot;solid&quot;, size=2) + labs(x = &quot;Filtering steps&quot;, y=&quot;Read count per sample&quot;, fill=&quot;&quot;) + geom_rect(data=col, aes(NULL,NULL, ymin=start, ymax=end, fill=percentile), xmin=0.00001, xmax=0.00002, color=&quot;white&quot;, alpha=1) + scale_fill_manual(values=c(&quot;Mean&quot; = &quot;#cecee8ff&quot;)) + scale_x_discrete(breaks=unique(dat$filtering_step), labels=addline_format(c(&quot;input&quot;, &quot;denoised&quot;,&quot;non_chimeric&quot;,&quot;non_chloroplastic&quot;, &quot;non_mitochondric&quot;, &quot;non_unassigned&quot;)))+ theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = &quot;grey&quot;, size = 1.5, linetype = &quot;solid&quot;), panel.background = element_rect(fill = &quot;#ffffff&quot;,colour = NA), plot.background = element_rect(fill = &#39;#ffffff&#39;), legend.text = element_text(color = &quot;black&quot;, size = 18), legend.position = c(0.96, 0.1), axis.title.x = element_text(color=&quot;black&quot;, size=20, face=&quot;bold&quot;), axis.text.x = element_text(face=&quot;plain&quot;, color=&quot;black&quot;,size=18, angle=0), axis.title.y = element_text(color=&quot;black&quot;, size=20, face=&quot;bold&quot;), axis.text.y = element_text(face=&quot;plain&quot;, color=&quot;black&quot;,size=18, angle=0)) bar = read.table(file=&quot;sample_denoising_relative.txt&quot;, header =T) bar=as.data.frame(bar) a&lt;-names(bar)[1] b&lt;-names(bar)[ncol(bar)] bar2&lt;-gather(bar,condition, measurement, names(bar)[2:ncol(bar)], factor_key=T) names(bar2)[names(bar2) == &quot;condition&quot;] &lt;- &quot;filtering_step&quot; names(bar2)[names(bar2) == &quot;measurement&quot;] &lt;- &quot;read_count&quot; bar3&lt;-aggregate(bar2[, 3], list(bar2$filtering_step), mean) bar3$z&lt;-rep(1, nrow(bar3)) #bar3$a&lt;-(1: nrow(bar3)) names(bar3)[1] &lt;- &quot;filtering_step&quot; names(bar3)[2] &lt;- &quot;read_percent&quot; df1 &lt;- subset(bar3,bar3$filtering_step==&quot;non_unassigned_percent&quot;) df1$a&lt;-df1$read_percent-0 df2 &lt;- subset(bar3,bar3$filtering_step==&quot;non_mitochondric_percent&quot;) df2$a&lt;-df2$read_percent-df1$read_percent df3 &lt;- subset(bar3,bar3$filtering_step==&quot;non_chloroplastic_percent&quot;) df3$a&lt;-df3$read_percent-df2$read_percent df4 &lt;- subset(bar3,bar3$filtering_step==&quot;non_chimeric_percent&quot;) df4$a&lt;-df4$read_percent-df3$read_percent df5 &lt;- subset(bar3,bar3$filtering_step==&quot;denoised_percent&quot;) df5$a&lt;-df5$read_percent-df4$read_percent df6 &lt;- subset(bar3,bar3$filtering_step==&quot;input_percent&quot;) df6$a&lt;-df6$read_percent-df5$read_percent u&lt;- rbind(df6, df5, df4, df3, df2, df1) p3&lt;-ggplot(data=u, aes(x=z, y=a, fill=filtering_step)) + geom_bar(position=&quot;stack&quot;, stat=&quot;identity&quot;,width = 0.2) + scale_fill_manual(values=c(&quot;#cee1f0ff&quot;, &quot;#9db8d6ff&quot;, &quot;#667eb1ff&quot;,&quot;#354567ff&quot;, &quot;#657090ff&quot;, &quot;#e5e5f3ff&quot;), name = &quot;Filtering steps&quot;, labels = c(&quot;Denoising&quot;, &quot;Chimera removal&quot;, &quot;Chloroplast removal&quot;, &quot;Mitochondria removal&quot;, &quot;Unassigned removal&quot;, &quot;Remaining fraction&quot;)) + labs(x = &quot;&quot;, y=&quot;Mean fraction of input read count \\n [% per sample]&quot;) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = &quot;grey&quot;, size = 1.5, linetype = &quot;solid&quot;), panel.background = element_rect(fill = &quot;#ffffff&quot;,colour = NA), plot.background = element_rect(fill = &#39;#ffffff&#39;), legend.title= element_text(color = &quot;black&quot;, size = 18, face=&quot;bold&quot;), legend.text = element_text(color = &quot;black&quot;, size = 18), axis.title.x=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank(), axis.title.y = element_text(color=&quot;black&quot;, size=20, face=&quot;bold&quot;), axis.text.y = element_text(face=&quot;plain&quot;, color=&quot;black&quot;,size=18, angle=0)) dat3&lt;-aggregate(dat[, 3], list(dat$filtering_step), sum) dat3$z&lt;-rep(1, nrow(dat3)) names(dat3)[1] &lt;- &quot;filtering_step&quot; names(dat3)[2] &lt;- &quot;read_absolute&quot; df7 &lt;- subset(dat3,dat3$filtering_step==&quot;input&quot;) df7$read_percent&lt;-100/df7$read_absolute*df7$read_absolute df8 &lt;- subset(dat3,dat3$filtering_step==&quot;non_unassigned&quot;) df8$read_percent&lt;-100/df7$read_absolute*df8$read_absolute df9 &lt;- subset(dat3,dat3$filtering_step==&quot;non_mitochondric&quot;) df9$read_percent&lt;-100/df7$read_absolute*df9$read_absolute df10 &lt;- subset(dat3,dat3$filtering_step==&quot;non_chloroplastic&quot;) df10$read_percent&lt;-100/df7$read_absolute*df10$read_absolute df11 &lt;- subset(dat3,dat3$filtering_step==&quot;non_chimeric&quot;) df11$read_percent&lt;-100/df7$read_absolute*df11$read_absolute df12 &lt;- subset(dat3,dat3$filtering_step==&quot;denoised&quot;) df12$read_percent&lt;-100/df7$read_absolute*df12$read_absolute df13&lt;-df7 df8$a&lt;-df8$read_percent-0 df9$a&lt;-df9$read_percent-df8$read_percent df10$a&lt;-df10$read_percent-df9$read_percent df11$a&lt;-df11$read_percent-df10$read_percent df12$a&lt;-df12$read_percent-df11$read_percent df13$a&lt;-df13$read_percent-df12$read_percent u2&lt;- rbind(df13, df12, df11, df10, df9, df8) p4&lt;-ggplot(data=u2, aes(x=z, y=a, fill=filtering_step)) + geom_bar(position=&quot;stack&quot;, stat=&quot;identity&quot;,width = 0.2) + scale_fill_manual(values=c(&quot;#cee1f0ff&quot;, &quot;#9db8d6ff&quot;, &quot;#667eb1ff&quot;,&quot;#354567ff&quot;, &quot;#657090ff&quot;, &quot;#e5e5f3ff&quot;), name = &quot;Filtering steps&quot;, labels = c(&quot;Denoising&quot;, &quot;Chimera removal&quot;, &quot;Chloroplast removal&quot;, &quot;Mitochondria removal&quot;, &quot;Unassigned removal&quot;, &quot;Remaining fraction&quot;)) + labs(x = &quot;&quot;, y=&quot;Fraction of total input read count \\n [%]&quot;) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = &quot;grey&quot;, size = 1.5, linetype = &quot;solid&quot;), panel.background = element_rect(fill = &quot;#ffffff&quot;,colour = NA), plot.background = element_rect(fill = &#39;#ffffff&#39;), legend.title= element_text(color = &quot;black&quot;, size = 18, face=&quot;bold&quot;), legend.text = element_text(color = &quot;black&quot;, size = 18), legend.position = &quot;none&quot;, axis.title.x=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank(), axis.title.y = element_text(color=&quot;black&quot;, size=20, face=&quot;bold&quot;), axis.text.y = element_text(face=&quot;plain&quot;, color=&quot;black&quot;,size=18, angle=0)) u2$z&lt;-NULL u2$a&lt;-NULL u3 &lt;- subset(u2,filtering_step==&quot;input&quot;| filtering_step==&quot;non_unassigned&quot;) names(u3)[names(u3) == &quot;read_absolute&quot;] &lt;- &quot;Total_read_count&quot; names(u3)[names(u3) == &quot;read_percent&quot;] &lt;- &quot;Total_read_count_[%]&quot; u4 &lt;- subset(dat,filtering_step==&quot;input&quot;) u4$Sample_read_count_median&lt;-median(u4$read_count) u4$Sample_read_count_mean&lt;-mean(u4$read_count) u4$Sample_read_count_min&lt;-min(u4$read_count) u4$Sample_read_count_max&lt;-max(u4$read_count) u4$SampleID&lt;-NULL u4$read_count&lt;-NULL input&lt;-u4[1,] u5 &lt;- subset(dat,filtering_step==&quot;non_unassigned&quot;) u5$Sample_read_count_median&lt;-median(u5$read_count) u5$Sample_read_count_mean&lt;-mean(u5$read_count) u5$Sample_read_count_min&lt;-min(u5$read_count) u5$Sample_read_count_max&lt;-max(u5$read_count) u5$SampleID&lt;-NULL u5$read_count&lt;-NULL output&lt;-u5[1,] o&lt;-rbind(input,output) sum&lt;-merge(u3,o,by=&quot;filtering_step&quot;) noin = scan(&quot;sample_number_start.txt&quot;) nout = scan(&quot;sample_number_end.txt&quot;) noin2 &lt;- data.frame(matrix(unlist(noin), nrow=length(noin), byrow=T)) names(noin2)[1] &lt;- &quot;Sample_number&quot; noin2$filtering_step&lt;-rep(c(&quot;input&quot;), nrow(noin2)) nout2 &lt;- data.frame(matrix(unlist(nout), nrow=length(nout), byrow=T)) names(nout2)[1] &lt;- &quot;Sample_number&quot; nout2$filtering_step&lt;-rep(c(&quot;non_unassigned&quot;), nrow(nout2)) fin&lt;-rbind(noin2,nout2) sum2&lt;-merge(fin,sum,by=&quot;filtering_step&quot;) sum3&lt;-t(sum2) sum3&lt;-as.data.frame(sum3) names(sum3) &lt;- as.matrix(sum3[1, ]) sum3 &lt;- sum3[-1, ] names(sum3)[2] &lt;- &quot;output&quot; write.table(sum3, file = &quot;sum3.txt&quot;,sep=&quot;\\t&quot;,col.names= T, row.names=T) sum3 = read.table(file=&quot;sum3.txt&quot;, header =T) round_df &lt;- function(x, digits) { numeric_columns &lt;- sapply(x, mode) == &#39;numeric&#39; x[numeric_columns] &lt;- round(x[numeric_columns], digits) x } sum4&lt;-round_df(sum3, 0) feat = read.table(file=&quot;feature-frequency-detail.txt&quot;, header =T) feat$b&lt;-rep(1, nrow(feat)) p6&lt;-ggplot(feat, aes(x=b, y=frequency)) + geom_boxplot(fill=&quot;#cecee8ff&quot;, alpha=0.8) + scale_y_continuous(trans = &#39;log10&#39;) + annotation_logticks() + labs(x = &quot;&quot;, y=&quot;Total ASV frequency&quot;) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = &quot;grey&quot;, size = 1.5, linetype = &quot;solid&quot;), panel.background = element_rect(fill = &quot;#ffffff&quot;,colour = NA), plot.background = element_rect(fill = &#39;#ffffff&#39;), legend.title= element_text(color = &quot;black&quot;, size = 18, face=&quot;bold&quot;), legend.text = element_text(color = &quot;black&quot;, size = 18), legend.position = &quot;none&quot;, axis.title.x=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank(), axis.title.y = element_text(color=&quot;black&quot;, size=20, face=&quot;bold&quot;), axis.text.y = element_text(face=&quot;plain&quot;, color=&quot;black&quot;,size=18, angle=0)) l&lt;-c(&quot;NA&quot;,length(feat$FeatureID)) l &lt;- data.frame(matrix(unlist(l), nrow=length(l), byrow=T)) names(l)[1] &lt;- &quot;Total_hash_count&quot; l&lt;-t(l) l&lt;-as.data.frame(l) names(l)[1] &lt;- &quot;input&quot; names(l)[2] &lt;- &quot;output&quot; sum5&lt;-rbind(sum4,l) e = scan(file=&quot;sample_read_count_min_at_seq_depth.txt&quot;) e2 &lt;- data.frame(matrix(unlist(e), nrow=length(e), byrow=T)) names(e2)[1] &lt;- &quot;Sample_read_count_min&quot; sum5[6,2] &lt;-e2[1,1] mytheme &lt;- gridExtra::ttheme_minimal( core = list(fg_params=list(cex = 1.5),bg_params = list(fill = &quot;lightgrey&quot;, col=NA)), colhead = list(fg_params=list(cex = 1.5)), rowhead = list(fg_params=list(cex = 1.5))) p5 &lt;- gridExtra::tableGrob(sum5, theme = mytheme) grid.arrange(p1, arrangeGrob(p4, p3,nrow=1, widths = 1:2), p2, widths = 3:2, arrangeGrob(p5, p6,nrow=1, widths = 2:0.2)) dev.off() quit(&quot;no&quot;) rm -r -f -- - sum3.txt 0.9 Create phylogenetic backbone tree and compute core-diversity metrics qiime phylogeny align-to-tree-mafft-fasttree \\ --p-n-threads 0 \\ --i-sequences $PWDa/dada2/dada2-rep-seqs.qza \\ --o-alignment $PWDa/dada2/aligned-rep-seqs.qza \\ --o-masked-alignment $PWDa/dada2/masked-aligned-rep-seqs.qza \\ --o-tree $PWDa/dada2/unrooted-tree.qza \\ --o-rooted-tree $PWDa/dada2/rooted-tree.qza qiime diversity core-metrics-phylogenetic \\ --p-n-jobs 8 \\ --i-phylogeny $PWDa/dada2/rooted-tree.qza \\ --i-table $PWDa/dada2/dada2-tablenochloroplastsmitochondriaUnassigned$var.qza \\ --p-sampling-depth $var \\ --m-metadata-file $PWDa/metadataV34.txt \\ --output-dir $PWDa/dada2/core-metrics-results 0.10 Compute rarefaction curves qiime diversity alpha-rarefaction \\ --i-table $PWDa/dada2/dada2-tablenochloroplastsmitochondriaUnassigned$var.qza \\ --i-phylogeny $PWDa/dada2/rooted-tree.qza \\ --p-max-depth $var \\ --p-steps 100 \\ --p-iterations 10 \\ --m-metadata-file $PWDa/metadataV34.txt \\ --o-visualization $PWDa/dada2/core-metrics-results/alpha-rarefaction.qzv cd $PWDa/dada2/ awk &#39;BEGIN {max = 0} {if ($2&gt;max) max=$2} END {print max}&#39; sample-frequency-detail.txt &gt; max.txt int=`cat max.txt` variable=${int%.*} echo $variable qiime diversity alpha-rarefaction \\ --i-table $PWDa/dada2/dada2-tablenochloroplastsmitochondriaUnassigned.qza \\ --i-phylogeny $PWDa/dada2/rooted-tree.qza \\ --p-max-depth $variable \\ --p-steps 100 \\ --p-iterations 10 \\ --m-metadata-file $PWDa/metadataV34.txt \\ --o-visualization $PWDa/dada2/core-metrics-results/alpha-rarefaction_complete.qzv cd $PWDa/dada2/core-metrics-results/ unzip alpha-rarefaction.qzv cd &quot;$(\\ls -1dt ./*/ | head -n 1)/data&quot; sed &#39;1 s/-//g&#39; observed_otus.csv &gt; observed_otus2.csv sed -e &#39;s/,/\\t/g&#39; observed_otus2.csv &gt; tmpfile; mv tmpfile observed_otus2.txt cp -r &quot;observed_otus2.txt&quot; $PWDa/dada2/ cd $PWDa/dada2/ R list.of.packages &lt;- c(&quot;ggplot2&quot;, &quot;stringr&quot;) new.packages &lt;- list.of.packages[!(list.of.packages %in% installed.packages()[,&quot;Package&quot;])] if(length(new.packages)) install.packages(new.packages, repos=&#39;http://cran.us.r-project.org&#39;) library(stringr) library(ggplot2) data&lt;- read.table(file=&quot;observed_otus2.txt&quot;, header =T) dat &lt;- data[,-1] rownames(dat) &lt;- data[,1] depth1&lt;-dat[,1:10] depth2&lt;-dat[,11:20] depth3&lt;-dat[,21:30] depth4&lt;-dat[,31:40] depth5&lt;-dat[,41:50] depth6&lt;-dat[,51:60] depth7&lt;-dat[,61:70] depth8&lt;-dat[,71:80] depth9&lt;-dat[,81:90] depth10&lt;-dat[,91:100] depth11&lt;-dat[,101:110] depth12&lt;-dat[,111:120] depth13&lt;-dat[,121:130] depth14&lt;-dat[,131:140] depth15&lt;-dat[,141:150] depth16&lt;-dat[,151:160] depth17&lt;-dat[,161:170] depth18&lt;-dat[,171:180] depth19&lt;-dat[,181:190] depth20&lt;-dat[,191:200] depth21&lt;-dat[,201:210] depth22&lt;-dat[,211:220] depth23&lt;-dat[,221:230] depth24&lt;-dat[,231:240] depth25&lt;-dat[,241:250] depth26&lt;-dat[,251:260] depth27&lt;-dat[,261:270] depth28&lt;-dat[,271:280] depth29&lt;-dat[,281:290] depth30&lt;-dat[,291:300] depth31&lt;-dat[,301:310] depth32&lt;-dat[,311:320] depth33&lt;-dat[,321:330] depth34&lt;-dat[,331:340] depth35&lt;-dat[,341:350] depth36&lt;-dat[,351:360] depth37&lt;-dat[,361:370] depth38&lt;-dat[,371:380] depth39&lt;-dat[,381:390] depth40&lt;-dat[,391:400] depth41&lt;-dat[,401:410] depth42&lt;-dat[,411:420] depth43&lt;-dat[,421:430] depth44&lt;-dat[,431:440] depth45&lt;-dat[,441:450] depth46&lt;-dat[,451:460] depth47&lt;-dat[,461:470] depth48&lt;-dat[,471:480] depth49&lt;-dat[,481:490] depth50&lt;-dat[,491:500] depth51&lt;-dat[,501:510] depth52&lt;-dat[,511:520] depth53&lt;-dat[,521:530] depth54&lt;-dat[,531:540] depth55&lt;-dat[,541:550] depth56&lt;-dat[,551:560] depth57&lt;-dat[,561:570] depth58&lt;-dat[,571:580] depth59&lt;-dat[,581:590] depth60&lt;-dat[,591:600] depth61&lt;-dat[,601:610] depth62&lt;-dat[,611:620] depth63&lt;-dat[,621:630] depth64&lt;-dat[,631:640] depth65&lt;-dat[,641:650] depth66&lt;-dat[,651:660] depth67&lt;-dat[,661:670] depth68&lt;-dat[,671:680] depth69&lt;-dat[,681:690] depth70&lt;-dat[,691:700] depth71&lt;-dat[,701:710] depth72&lt;-dat[,711:720] depth73&lt;-dat[,721:730] depth74&lt;-dat[,731:740] depth75&lt;-dat[,741:750] depth76&lt;-dat[,751:760] depth77&lt;-dat[,761:770] depth78&lt;-dat[,771:780] depth79&lt;-dat[,781:790] depth80&lt;-dat[,791:800] depth81&lt;-dat[,801:810] depth82&lt;-dat[,811:820] depth83&lt;-dat[,821:830] depth84&lt;-dat[,831:840] depth85&lt;-dat[,841:850] depth86&lt;-dat[,851:860] depth87&lt;-dat[,861:870] depth88&lt;-dat[,871:880] depth89&lt;-dat[,881:890] depth90&lt;-dat[,891:900] depth91&lt;-dat[,901:910] depth92&lt;-dat[,911:920] depth93&lt;-dat[,921:930] depth94&lt;-dat[,931:940] depth95&lt;-dat[,941:950] depth96&lt;-dat[,951:960] depth97&lt;-dat[,961:970] depth98&lt;-dat[,971:980] depth99&lt;-dat[,981:990] depth100&lt;-dat[,991:1000] metadata&lt;-dat[,1001:ncol(dat)] depth1$mean&lt;-rowMeans(depth1) depth2$mean&lt;-rowMeans(depth2) depth3$mean&lt;-rowMeans(depth3) depth4$mean&lt;-rowMeans(depth4) depth5$mean&lt;-rowMeans(depth5) depth6$mean&lt;-rowMeans(depth6) depth7$mean&lt;-rowMeans(depth7) depth8$mean&lt;-rowMeans(depth8) depth9$mean&lt;-rowMeans(depth9) depth10$mean&lt;-rowMeans(depth10) depth11$mean&lt;-rowMeans(depth11) depth12$mean&lt;-rowMeans(depth12) depth13$mean&lt;-rowMeans(depth13) depth14$mean&lt;-rowMeans(depth14) depth15$mean&lt;-rowMeans(depth15) depth16$mean&lt;-rowMeans(depth16) depth17$mean&lt;-rowMeans(depth17) depth18$mean&lt;-rowMeans(depth18) depth19$mean&lt;-rowMeans(depth19) depth20$mean&lt;-rowMeans(depth20) depth21$mean&lt;-rowMeans(depth21) depth22$mean&lt;-rowMeans(depth22) depth23$mean&lt;-rowMeans(depth23) depth24$mean&lt;-rowMeans(depth24) depth25$mean&lt;-rowMeans(depth25) depth26$mean&lt;-rowMeans(depth26) depth27$mean&lt;-rowMeans(depth27) depth28$mean&lt;-rowMeans(depth28) depth29$mean&lt;-rowMeans(depth29) depth30$mean&lt;-rowMeans(depth30) depth31$mean&lt;-rowMeans(depth31) depth32$mean&lt;-rowMeans(depth32) depth33$mean&lt;-rowMeans(depth33) depth34$mean&lt;-rowMeans(depth34) depth35$mean&lt;-rowMeans(depth35) depth36$mean&lt;-rowMeans(depth36) depth37$mean&lt;-rowMeans(depth37) depth38$mean&lt;-rowMeans(depth38) depth39$mean&lt;-rowMeans(depth39) depth40$mean&lt;-rowMeans(depth40) depth41$mean&lt;-rowMeans(depth41) depth42$mean&lt;-rowMeans(depth42) depth43$mean&lt;-rowMeans(depth43) depth44$mean&lt;-rowMeans(depth44) depth45$mean&lt;-rowMeans(depth45) depth46$mean&lt;-rowMeans(depth46) depth47$mean&lt;-rowMeans(depth47) depth48$mean&lt;-rowMeans(depth48) depth49$mean&lt;-rowMeans(depth49) depth50$mean&lt;-rowMeans(depth50) depth51$mean&lt;-rowMeans(depth51) depth52$mean&lt;-rowMeans(depth52) depth53$mean&lt;-rowMeans(depth53) depth54$mean&lt;-rowMeans(depth54) depth55$mean&lt;-rowMeans(depth55) depth56$mean&lt;-rowMeans(depth56) depth57$mean&lt;-rowMeans(depth57) depth58$mean&lt;-rowMeans(depth58) depth59$mean&lt;-rowMeans(depth59) depth60$mean&lt;-rowMeans(depth60) depth61$mean&lt;-rowMeans(depth61) depth62$mean&lt;-rowMeans(depth62) depth63$mean&lt;-rowMeans(depth63) depth64$mean&lt;-rowMeans(depth64) depth65$mean&lt;-rowMeans(depth65) depth66$mean&lt;-rowMeans(depth66) depth67$mean&lt;-rowMeans(depth67) depth68$mean&lt;-rowMeans(depth68) depth69$mean&lt;-rowMeans(depth69) depth70$mean&lt;-rowMeans(depth70) depth71$mean&lt;-rowMeans(depth71) depth72$mean&lt;-rowMeans(depth72) depth73$mean&lt;-rowMeans(depth73) depth74$mean&lt;-rowMeans(depth74) depth75$mean&lt;-rowMeans(depth75) depth76$mean&lt;-rowMeans(depth76) depth77$mean&lt;-rowMeans(depth77) depth78$mean&lt;-rowMeans(depth78) depth79$mean&lt;-rowMeans(depth79) depth80$mean&lt;-rowMeans(depth80) depth81$mean&lt;-rowMeans(depth81) depth82$mean&lt;-rowMeans(depth82) depth83$mean&lt;-rowMeans(depth83) depth84$mean&lt;-rowMeans(depth84) depth85$mean&lt;-rowMeans(depth85) depth86$mean&lt;-rowMeans(depth86) depth87$mean&lt;-rowMeans(depth87) depth88$mean&lt;-rowMeans(depth88) depth89$mean&lt;-rowMeans(depth89) depth90$mean&lt;-rowMeans(depth90) depth91$mean&lt;-rowMeans(depth91) depth92$mean&lt;-rowMeans(depth92) depth93$mean&lt;-rowMeans(depth93) depth94$mean&lt;-rowMeans(depth94) depth95$mean&lt;-rowMeans(depth95) depth96$mean&lt;-rowMeans(depth96) depth97$mean&lt;-rowMeans(depth97) depth98$mean&lt;-rowMeans(depth98) depth99$mean&lt;-rowMeans(depth99) depth100$mean&lt;-rowMeans(depth100) names(depth1)&lt;-sapply(strsplit(names(depth1), &quot;_iter&quot;), `[[`, 1) colnames(depth1)[1] depth1$seqdepth&lt;-rep(colnames(depth1)[1], nrow(depth1)) depth1[,1:10]&lt;-NULL depth1$seqdepth&lt;-str_remove_all(depth1$seqdepth, &quot;[depth]&quot;) depth1&lt;-merge(depth1, metadata, by=&quot;row.names&quot;) names(depth2)&lt;-sapply(strsplit(names(depth2), &quot;_iter&quot;), `[[`, 1) colnames(depth2)[1] depth2$seqdepth&lt;-rep(colnames(depth2)[1], nrow(depth2)) depth2[,1:10]&lt;-NULL depth2$seqdepth&lt;-str_remove_all(depth2$seqdepth, &quot;[depth]&quot;) depth2&lt;-merge(depth2, metadata, by=&quot;row.names&quot;) names(depth3)&lt;-sapply(strsplit(names(depth3), &quot;_iter&quot;), `[[`, 1) colnames(depth3)[1] depth3$seqdepth&lt;-rep(colnames(depth3)[1], nrow(depth3)) depth3[,1:10]&lt;-NULL depth3$seqdepth&lt;-str_remove_all(depth3$seqdepth, &quot;[depth]&quot;) depth3&lt;-merge(depth3, metadata, by=&quot;row.names&quot;) names(depth4)&lt;-sapply(strsplit(names(depth4), &quot;_iter&quot;), `[[`, 1) colnames(depth4)[1] depth4$seqdepth&lt;-rep(colnames(depth4)[1], nrow(depth4)) depth4[,1:10]&lt;-NULL depth4$seqdepth&lt;-str_remove_all(depth4$seqdepth, &quot;[depth]&quot;) depth4&lt;-merge(depth4, metadata, by=&quot;row.names&quot;) names(depth5)&lt;-sapply(strsplit(names(depth5), &quot;_iter&quot;), `[[`, 1) colnames(depth5)[1] depth5$seqdepth&lt;-rep(colnames(depth5)[1], nrow(depth5)) depth5[,1:10]&lt;-NULL depth5$seqdepth&lt;-str_remove_all(depth5$seqdepth, &quot;[depth]&quot;) depth5&lt;-merge(depth5, metadata, by=&quot;row.names&quot;) names(depth6)&lt;-sapply(strsplit(names(depth6), &quot;_iter&quot;), `[[`, 1) colnames(depth6)[1] depth6$seqdepth&lt;-rep(colnames(depth6)[1], nrow(depth6)) depth6[,1:10]&lt;-NULL depth6$seqdepth&lt;-str_remove_all(depth6$seqdepth, &quot;[depth]&quot;) depth6&lt;-merge(depth6, metadata, by=&quot;row.names&quot;) names(depth7)&lt;-sapply(strsplit(names(depth7), &quot;_iter&quot;), `[[`, 1) colnames(depth7)[1] depth7$seqdepth&lt;-rep(colnames(depth7)[1], nrow(depth7)) depth7[,1:10]&lt;-NULL depth7$seqdepth&lt;-str_remove_all(depth7$seqdepth, &quot;[depth]&quot;) depth7&lt;-merge(depth7, metadata, by=&quot;row.names&quot;) names(depth8)&lt;-sapply(strsplit(names(depth8), &quot;_iter&quot;), `[[`, 1) colnames(depth8)[1] depth8$seqdepth&lt;-rep(colnames(depth8)[1], nrow(depth8)) depth8[,1:10]&lt;-NULL depth8$seqdepth&lt;-str_remove_all(depth8$seqdepth, &quot;[depth]&quot;) depth8&lt;-merge(depth8, metadata, by=&quot;row.names&quot;) names(depth9)&lt;-sapply(strsplit(names(depth9), &quot;_iter&quot;), `[[`, 1) colnames(depth9)[1] depth9$seqdepth&lt;-rep(colnames(depth9)[1], nrow(depth9)) depth9[,1:10]&lt;-NULL depth9$seqdepth&lt;-str_remove_all(depth9$seqdepth, &quot;[depth]&quot;) depth9&lt;-merge(depth9, metadata, by=&quot;row.names&quot;) names(depth10)&lt;-sapply(strsplit(names(depth10), &quot;_iter&quot;), `[[`, 1) colnames(depth10)[1] depth10$seqdepth&lt;-rep(colnames(depth10)[1], nrow(depth10)) depth10[,1:10]&lt;-NULL depth10$seqdepth&lt;-str_remove_all(depth10$seqdepth, &quot;[depth]&quot;) depth10&lt;-merge(depth10, metadata, by=&quot;row.names&quot;) names(depth11)&lt;-sapply(strsplit(names(depth11), &quot;_iter&quot;), `[[`, 1) colnames(depth11)[1] depth11$seqdepth&lt;-rep(colnames(depth11)[1], nrow(depth11)) depth11[,1:10]&lt;-NULL depth11$seqdepth&lt;-str_remove_all(depth11$seqdepth, &quot;[depth]&quot;) depth11&lt;-merge(depth11, metadata, by=&quot;row.names&quot;) names(depth12)&lt;-sapply(strsplit(names(depth12), &quot;_iter&quot;), `[[`, 1) colnames(depth12)[1] depth12$seqdepth&lt;-rep(colnames(depth12)[1], nrow(depth12)) depth12[,1:10]&lt;-NULL depth12$seqdepth&lt;-str_remove_all(depth12$seqdepth, &quot;[depth]&quot;) depth12&lt;-merge(depth12, metadata, by=&quot;row.names&quot;) names(depth13)&lt;-sapply(strsplit(names(depth13), &quot;_iter&quot;), `[[`, 1) colnames(depth13)[1] depth13$seqdepth&lt;-rep(colnames(depth13)[1], nrow(depth13)) depth13[,1:10]&lt;-NULL depth13$seqdepth&lt;-str_remove_all(depth13$seqdepth, &quot;[depth]&quot;) depth13&lt;-merge(depth13, metadata, by=&quot;row.names&quot;) names(depth14)&lt;-sapply(strsplit(names(depth14), &quot;_iter&quot;), `[[`, 1) colnames(depth14)[1] depth14$seqdepth&lt;-rep(colnames(depth14)[1], nrow(depth14)) depth14[,1:10]&lt;-NULL depth14$seqdepth&lt;-str_remove_all(depth14$seqdepth, &quot;[depth]&quot;) depth14&lt;-merge(depth14, metadata, by=&quot;row.names&quot;) names(depth15)&lt;-sapply(strsplit(names(depth15), &quot;_iter&quot;), `[[`, 1) colnames(depth15)[1] depth15$seqdepth&lt;-rep(colnames(depth15)[1], nrow(depth15)) depth15[,1:10]&lt;-NULL depth15$seqdepth&lt;-str_remove_all(depth15$seqdepth, &quot;[depth]&quot;) depth15&lt;-merge(depth15, metadata, by=&quot;row.names&quot;) names(depth16)&lt;-sapply(strsplit(names(depth16), &quot;_iter&quot;), `[[`, 1) colnames(depth16)[1] depth16$seqdepth&lt;-rep(colnames(depth16)[1], nrow(depth16)) depth16[,1:10]&lt;-NULL depth16$seqdepth&lt;-str_remove_all(depth16$seqdepth, &quot;[depth]&quot;) depth16&lt;-merge(depth16, metadata, by=&quot;row.names&quot;) names(depth17)&lt;-sapply(strsplit(names(depth17), &quot;_iter&quot;), `[[`, 1) colnames(depth17)[1] depth17$seqdepth&lt;-rep(colnames(depth17)[1], nrow(depth17)) depth17[,1:10]&lt;-NULL depth17$seqdepth&lt;-str_remove_all(depth17$seqdepth, &quot;[depth]&quot;) depth17&lt;-merge(depth17, metadata, by=&quot;row.names&quot;) names(depth18)&lt;-sapply(strsplit(names(depth18), &quot;_iter&quot;), `[[`, 1) colnames(depth18)[1] depth18$seqdepth&lt;-rep(colnames(depth18)[1], nrow(depth18)) depth18[,1:10]&lt;-NULL depth18$seqdepth&lt;-str_remove_all(depth18$seqdepth, &quot;[depth]&quot;) depth18&lt;-merge(depth18, metadata, by=&quot;row.names&quot;) names(depth19)&lt;-sapply(strsplit(names(depth19), &quot;_iter&quot;), `[[`, 1) colnames(depth19)[1] depth19$seqdepth&lt;-rep(colnames(depth19)[1], nrow(depth19)) depth19[,1:10]&lt;-NULL depth19$seqdepth&lt;-str_remove_all(depth19$seqdepth, &quot;[depth]&quot;) depth19&lt;-merge(depth19, metadata, by=&quot;row.names&quot;) names(depth20)&lt;-sapply(strsplit(names(depth20), &quot;_iter&quot;), `[[`, 1) colnames(depth20)[1] depth20$seqdepth&lt;-rep(colnames(depth20)[1], nrow(depth20)) depth20[,1:10]&lt;-NULL depth20$seqdepth&lt;-str_remove_all(depth20$seqdepth, &quot;[depth]&quot;) depth20&lt;-merge(depth20, metadata, by=&quot;row.names&quot;) names(depth21)&lt;-sapply(strsplit(names(depth21), &quot;_iter&quot;), `[[`, 1) colnames(depth21)[1] depth21$seqdepth&lt;-rep(colnames(depth21)[1], nrow(depth21)) depth21[,1:10]&lt;-NULL depth21$seqdepth&lt;-str_remove_all(depth21$seqdepth, &quot;[depth]&quot;) depth21&lt;-merge(depth21, metadata, by=&quot;row.names&quot;) names(depth22)&lt;-sapply(strsplit(names(depth22), &quot;_iter&quot;), `[[`, 1) colnames(depth22)[1] depth22$seqdepth&lt;-rep(colnames(depth22)[1], nrow(depth22)) depth22[,1:10]&lt;-NULL depth22$seqdepth&lt;-str_remove_all(depth22$seqdepth, &quot;[depth]&quot;) depth22&lt;-merge(depth22, metadata, by=&quot;row.names&quot;) names(depth23)&lt;-sapply(strsplit(names(depth23), &quot;_iter&quot;), `[[`, 1) colnames(depth23)[1] depth23$seqdepth&lt;-rep(colnames(depth23)[1], nrow(depth23)) depth23[,1:10]&lt;-NULL depth23$seqdepth&lt;-str_remove_all(depth23$seqdepth, &quot;[depth]&quot;) depth23&lt;-merge(depth23, metadata, by=&quot;row.names&quot;) names(depth24)&lt;-sapply(strsplit(names(depth24), &quot;_iter&quot;), `[[`, 1) colnames(depth24)[1] depth24$seqdepth&lt;-rep(colnames(depth24)[1], nrow(depth24)) depth24[,1:10]&lt;-NULL depth24$seqdepth&lt;-str_remove_all(depth24$seqdepth, &quot;[depth]&quot;) depth24&lt;-merge(depth24, metadata, by=&quot;row.names&quot;) names(depth25)&lt;-sapply(strsplit(names(depth25), &quot;_iter&quot;), `[[`, 1) colnames(depth25)[1] depth25$seqdepth&lt;-rep(colnames(depth25)[1], nrow(depth25)) depth25[,1:10]&lt;-NULL depth25$seqdepth&lt;-str_remove_all(depth25$seqdepth, &quot;[depth]&quot;) depth25&lt;-merge(depth25, metadata, by=&quot;row.names&quot;) names(depth26)&lt;-sapply(strsplit(names(depth26), &quot;_iter&quot;), `[[`, 1) colnames(depth26)[1] depth26$seqdepth&lt;-rep(colnames(depth26)[1], nrow(depth26)) depth26[,1:10]&lt;-NULL depth26$seqdepth&lt;-str_remove_all(depth26$seqdepth, &quot;[depth]&quot;) depth26&lt;-merge(depth26, metadata, by=&quot;row.names&quot;) names(depth27)&lt;-sapply(strsplit(names(depth27), &quot;_iter&quot;), `[[`, 1) colnames(depth27)[1] depth27$seqdepth&lt;-rep(colnames(depth27)[1], nrow(depth27)) depth27[,1:10]&lt;-NULL depth27$seqdepth&lt;-str_remove_all(depth27$seqdepth, &quot;[depth]&quot;) depth27&lt;-merge(depth27, metadata, by=&quot;row.names&quot;) names(depth28)&lt;-sapply(strsplit(names(depth28), &quot;_iter&quot;), `[[`, 1) colnames(depth28)[1] depth28$seqdepth&lt;-rep(colnames(depth28)[1], nrow(depth28)) depth28[,1:10]&lt;-NULL depth28$seqdepth&lt;-str_remove_all(depth28$seqdepth, &quot;[depth]&quot;) depth28&lt;-merge(depth28, metadata, by=&quot;row.names&quot;) names(depth29)&lt;-sapply(strsplit(names(depth29), &quot;_iter&quot;), `[[`, 1) colnames(depth29)[1] depth29$seqdepth&lt;-rep(colnames(depth29)[1], nrow(depth29)) depth29[,1:10]&lt;-NULL depth29$seqdepth&lt;-str_remove_all(depth29$seqdepth, &quot;[depth]&quot;) depth29&lt;-merge(depth29, metadata, by=&quot;row.names&quot;) names(depth30)&lt;-sapply(strsplit(names(depth30), &quot;_iter&quot;), `[[`, 1) colnames(depth30)[1] depth30$seqdepth&lt;-rep(colnames(depth30)[1], nrow(depth30)) depth30[,1:10]&lt;-NULL depth30$seqdepth&lt;-str_remove_all(depth30$seqdepth, &quot;[depth]&quot;) depth30&lt;-merge(depth30, metadata, by=&quot;row.names&quot;) names(depth31)&lt;-sapply(strsplit(names(depth31), &quot;_iter&quot;), `[[`, 1) colnames(depth31)[1] depth31$seqdepth&lt;-rep(colnames(depth31)[1], nrow(depth31)) depth31[,1:10]&lt;-NULL depth31$seqdepth&lt;-str_remove_all(depth31$seqdepth, &quot;[depth]&quot;) depth31&lt;-merge(depth31, metadata, by=&quot;row.names&quot;) names(depth32)&lt;-sapply(strsplit(names(depth32), &quot;_iter&quot;), `[[`, 1) colnames(depth32)[1] depth32$seqdepth&lt;-rep(colnames(depth32)[1], nrow(depth32)) depth32[,1:10]&lt;-NULL depth32$seqdepth&lt;-str_remove_all(depth32$seqdepth, &quot;[depth]&quot;) depth32&lt;-merge(depth32, metadata, by=&quot;row.names&quot;) names(depth33)&lt;-sapply(strsplit(names(depth33), &quot;_iter&quot;), `[[`, 1) colnames(depth33)[1] depth33$seqdepth&lt;-rep(colnames(depth33)[1], nrow(depth33)) depth33[,1:10]&lt;-NULL depth33$seqdepth&lt;-str_remove_all(depth33$seqdepth, &quot;[depth]&quot;) depth33&lt;-merge(depth33, metadata, by=&quot;row.names&quot;) names(depth34)&lt;-sapply(strsplit(names(depth34), &quot;_iter&quot;), `[[`, 1) colnames(depth34)[1] depth34$seqdepth&lt;-rep(colnames(depth34)[1], nrow(depth34)) depth34[,1:10]&lt;-NULL depth34$seqdepth&lt;-str_remove_all(depth34$seqdepth, &quot;[depth]&quot;) depth34&lt;-merge(depth34, metadata, by=&quot;row.names&quot;) names(depth35)&lt;-sapply(strsplit(names(depth35), &quot;_iter&quot;), `[[`, 1) colnames(depth35)[1] depth35$seqdepth&lt;-rep(colnames(depth35)[1], nrow(depth35)) depth35[,1:10]&lt;-NULL depth35$seqdepth&lt;-str_remove_all(depth35$seqdepth, &quot;[depth]&quot;) depth35&lt;-merge(depth35, metadata, by=&quot;row.names&quot;) names(depth36)&lt;-sapply(strsplit(names(depth36), &quot;_iter&quot;), `[[`, 1) colnames(depth36)[1] depth36$seqdepth&lt;-rep(colnames(depth36)[1], nrow(depth36)) depth36[,1:10]&lt;-NULL depth36$seqdepth&lt;-str_remove_all(depth36$seqdepth, &quot;[depth]&quot;) depth36&lt;-merge(depth36, metadata, by=&quot;row.names&quot;) names(depth37)&lt;-sapply(strsplit(names(depth37), &quot;_iter&quot;), `[[`, 1) colnames(depth37)[1] depth37$seqdepth&lt;-rep(colnames(depth37)[1], nrow(depth37)) depth37[,1:10]&lt;-NULL depth37$seqdepth&lt;-str_remove_all(depth37$seqdepth, &quot;[depth]&quot;) depth37&lt;-merge(depth37, metadata, by=&quot;row.names&quot;) names(depth38)&lt;-sapply(strsplit(names(depth38), &quot;_iter&quot;), `[[`, 1) colnames(depth38)[1] depth38$seqdepth&lt;-rep(colnames(depth38)[1], nrow(depth38)) depth38[,1:10]&lt;-NULL depth38$seqdepth&lt;-str_remove_all(depth38$seqdepth, &quot;[depth]&quot;) depth38&lt;-merge(depth38, metadata, by=&quot;row.names&quot;) names(depth39)&lt;-sapply(strsplit(names(depth39), &quot;_iter&quot;), `[[`, 1) colnames(depth39)[1] depth39$seqdepth&lt;-rep(colnames(depth39)[1], nrow(depth39)) depth39[,1:10]&lt;-NULL depth39$seqdepth&lt;-str_remove_all(depth39$seqdepth, &quot;[depth]&quot;) depth39&lt;-merge(depth39, metadata, by=&quot;row.names&quot;) names(depth40)&lt;-sapply(strsplit(names(depth40), &quot;_iter&quot;), `[[`, 1) colnames(depth40)[1] depth40$seqdepth&lt;-rep(colnames(depth40)[1], nrow(depth40)) depth40[,1:10]&lt;-NULL depth40$seqdepth&lt;-str_remove_all(depth40$seqdepth, &quot;[depth]&quot;) depth40&lt;-merge(depth40, metadata, by=&quot;row.names&quot;) names(depth41)&lt;-sapply(strsplit(names(depth41), &quot;_iter&quot;), `[[`, 1) colnames(depth41)[1] depth41$seqdepth&lt;-rep(colnames(depth41)[1], nrow(depth41)) depth41[,1:10]&lt;-NULL depth41$seqdepth&lt;-str_remove_all(depth41$seqdepth, &quot;[depth]&quot;) depth41&lt;-merge(depth41, metadata, by=&quot;row.names&quot;) names(depth42)&lt;-sapply(strsplit(names(depth42), &quot;_iter&quot;), `[[`, 1) colnames(depth42)[1] depth42$seqdepth&lt;-rep(colnames(depth42)[1], nrow(depth42)) depth42[,1:10]&lt;-NULL depth42$seqdepth&lt;-str_remove_all(depth42$seqdepth, &quot;[depth]&quot;) depth42&lt;-merge(depth42, metadata, by=&quot;row.names&quot;) names(depth43)&lt;-sapply(strsplit(names(depth43), &quot;_iter&quot;), `[[`, 1) colnames(depth43)[1] depth43$seqdepth&lt;-rep(colnames(depth43)[1], nrow(depth43)) depth43[,1:10]&lt;-NULL depth43$seqdepth&lt;-str_remove_all(depth43$seqdepth, &quot;[depth]&quot;) depth43&lt;-merge(depth43, metadata, by=&quot;row.names&quot;) names(depth44)&lt;-sapply(strsplit(names(depth44), &quot;_iter&quot;), `[[`, 1) colnames(depth44)[1] depth44$seqdepth&lt;-rep(colnames(depth44)[1], nrow(depth44)) depth44[,1:10]&lt;-NULL depth44$seqdepth&lt;-str_remove_all(depth44$seqdepth, &quot;[depth]&quot;) depth44&lt;-merge(depth44, metadata, by=&quot;row.names&quot;) names(depth45)&lt;-sapply(strsplit(names(depth45), &quot;_iter&quot;), `[[`, 1) colnames(depth45)[1] depth45$seqdepth&lt;-rep(colnames(depth45)[1], nrow(depth45)) depth45[,1:10]&lt;-NULL depth45$seqdepth&lt;-str_remove_all(depth45$seqdepth, &quot;[depth]&quot;) depth45&lt;-merge(depth45, metadata, by=&quot;row.names&quot;) names(depth46)&lt;-sapply(strsplit(names(depth46), &quot;_iter&quot;), `[[`, 1) colnames(depth46)[1] depth46$seqdepth&lt;-rep(colnames(depth46)[1], nrow(depth46)) depth46[,1:10]&lt;-NULL depth46$seqdepth&lt;-str_remove_all(depth46$seqdepth, &quot;[depth]&quot;) depth46&lt;-merge(depth46, metadata, by=&quot;row.names&quot;) names(depth47)&lt;-sapply(strsplit(names(depth47), &quot;_iter&quot;), `[[`, 1) colnames(depth47)[1] depth47$seqdepth&lt;-rep(colnames(depth47)[1], nrow(depth47)) depth47[,1:10]&lt;-NULL depth47$seqdepth&lt;-str_remove_all(depth47$seqdepth, &quot;[depth]&quot;) depth47&lt;-merge(depth47, metadata, by=&quot;row.names&quot;) names(depth48)&lt;-sapply(strsplit(names(depth48), &quot;_iter&quot;), `[[`, 1) colnames(depth48)[1] depth48$seqdepth&lt;-rep(colnames(depth48)[1], nrow(depth48)) depth48[,1:10]&lt;-NULL depth48$seqdepth&lt;-str_remove_all(depth48$seqdepth, &quot;[depth]&quot;) depth48&lt;-merge(depth48, metadata, by=&quot;row.names&quot;) names(depth49)&lt;-sapply(strsplit(names(depth49), &quot;_iter&quot;), `[[`, 1) colnames(depth49)[1] depth49$seqdepth&lt;-rep(colnames(depth49)[1], nrow(depth49)) depth49[,1:10]&lt;-NULL depth49$seqdepth&lt;-str_remove_all(depth49$seqdepth, &quot;[depth]&quot;) depth49&lt;-merge(depth49, metadata, by=&quot;row.names&quot;) names(depth50)&lt;-sapply(strsplit(names(depth50), &quot;_iter&quot;), `[[`, 1) colnames(depth50)[1] depth50$seqdepth&lt;-rep(colnames(depth50)[1], nrow(depth50)) depth50[,1:10]&lt;-NULL depth50$seqdepth&lt;-str_remove_all(depth50$seqdepth, &quot;[depth]&quot;) depth50&lt;-merge(depth50, metadata, by=&quot;row.names&quot;) names(depth51)&lt;-sapply(strsplit(names(depth51), &quot;_iter&quot;), `[[`, 1) colnames(depth51)[1] depth51$seqdepth&lt;-rep(colnames(depth51)[1], nrow(depth51)) depth51[,1:10]&lt;-NULL depth51$seqdepth&lt;-str_remove_all(depth51$seqdepth, &quot;[depth]&quot;) depth51&lt;-merge(depth51, metadata, by=&quot;row.names&quot;) names(depth52)&lt;-sapply(strsplit(names(depth52), &quot;_iter&quot;), `[[`, 1) colnames(depth52)[1] depth52$seqdepth&lt;-rep(colnames(depth52)[1], nrow(depth52)) depth52[,1:10]&lt;-NULL depth52$seqdepth&lt;-str_remove_all(depth52$seqdepth, &quot;[depth]&quot;) depth52&lt;-merge(depth52, metadata, by=&quot;row.names&quot;) names(depth53)&lt;-sapply(strsplit(names(depth53), &quot;_iter&quot;), `[[`, 1) colnames(depth53)[1] depth53$seqdepth&lt;-rep(colnames(depth53)[1], nrow(depth53)) depth53[,1:10]&lt;-NULL depth53$seqdepth&lt;-str_remove_all(depth53$seqdepth, &quot;[depth]&quot;) depth53&lt;-merge(depth53, metadata, by=&quot;row.names&quot;) names(depth54)&lt;-sapply(strsplit(names(depth54), &quot;_iter&quot;), `[[`, 1) colnames(depth54)[1] depth54$seqdepth&lt;-rep(colnames(depth54)[1], nrow(depth54)) depth54[,1:10]&lt;-NULL depth54$seqdepth&lt;-str_remove_all(depth54$seqdepth, &quot;[depth]&quot;) depth54&lt;-merge(depth54, metadata, by=&quot;row.names&quot;) names(depth55)&lt;-sapply(strsplit(names(depth55), &quot;_iter&quot;), `[[`, 1) colnames(depth55)[1] depth55$seqdepth&lt;-rep(colnames(depth55)[1], nrow(depth55)) depth55[,1:10]&lt;-NULL depth55$seqdepth&lt;-str_remove_all(depth55$seqdepth, &quot;[depth]&quot;) depth55&lt;-merge(depth55, metadata, by=&quot;row.names&quot;) names(depth56)&lt;-sapply(strsplit(names(depth56), &quot;_iter&quot;), `[[`, 1) colnames(depth56)[1] depth56$seqdepth&lt;-rep(colnames(depth56)[1], nrow(depth56)) depth56[,1:10]&lt;-NULL depth56$seqdepth&lt;-str_remove_all(depth56$seqdepth, &quot;[depth]&quot;) depth56&lt;-merge(depth56, metadata, by=&quot;row.names&quot;) names(depth57)&lt;-sapply(strsplit(names(depth57), &quot;_iter&quot;), `[[`, 1) colnames(depth57)[1] depth57$seqdepth&lt;-rep(colnames(depth57)[1], nrow(depth57)) depth57[,1:10]&lt;-NULL depth57$seqdepth&lt;-str_remove_all(depth57$seqdepth, &quot;[depth]&quot;) depth57&lt;-merge(depth57, metadata, by=&quot;row.names&quot;) names(depth58)&lt;-sapply(strsplit(names(depth58), &quot;_iter&quot;), `[[`, 1) colnames(depth58)[1] depth58$seqdepth&lt;-rep(colnames(depth58)[1], nrow(depth58)) depth58[,1:10]&lt;-NULL depth58$seqdepth&lt;-str_remove_all(depth58$seqdepth, &quot;[depth]&quot;) depth58&lt;-merge(depth58, metadata, by=&quot;row.names&quot;) names(depth59)&lt;-sapply(strsplit(names(depth59), &quot;_iter&quot;), `[[`, 1) colnames(depth59)[1] depth59$seqdepth&lt;-rep(colnames(depth59)[1], nrow(depth59)) depth59[,1:10]&lt;-NULL depth59$seqdepth&lt;-str_remove_all(depth59$seqdepth, &quot;[depth]&quot;) depth59&lt;-merge(depth59, metadata, by=&quot;row.names&quot;) names(depth60)&lt;-sapply(strsplit(names(depth60), &quot;_iter&quot;), `[[`, 1) colnames(depth60)[1] depth60$seqdepth&lt;-rep(colnames(depth60)[1], nrow(depth60)) depth60[,1:10]&lt;-NULL depth60$seqdepth&lt;-str_remove_all(depth60$seqdepth, &quot;[depth]&quot;) depth60&lt;-merge(depth60, metadata, by=&quot;row.names&quot;) names(depth61)&lt;-sapply(strsplit(names(depth61), &quot;_iter&quot;), `[[`, 1) colnames(depth61)[1] depth61$seqdepth&lt;-rep(colnames(depth61)[1], nrow(depth61)) depth61[,1:10]&lt;-NULL depth61$seqdepth&lt;-str_remove_all(depth61$seqdepth, &quot;[depth]&quot;) depth61&lt;-merge(depth61, metadata, by=&quot;row.names&quot;) names(depth62)&lt;-sapply(strsplit(names(depth62), &quot;_iter&quot;), `[[`, 1) colnames(depth62)[1] depth62$seqdepth&lt;-rep(colnames(depth62)[1], nrow(depth62)) depth62[,1:10]&lt;-NULL depth62$seqdepth&lt;-str_remove_all(depth62$seqdepth, &quot;[depth]&quot;) depth62&lt;-merge(depth62, metadata, by=&quot;row.names&quot;) names(depth63)&lt;-sapply(strsplit(names(depth63), &quot;_iter&quot;), `[[`, 1) colnames(depth63)[1] depth63$seqdepth&lt;-rep(colnames(depth63)[1], nrow(depth63)) depth63[,1:10]&lt;-NULL depth63$seqdepth&lt;-str_remove_all(depth63$seqdepth, &quot;[depth]&quot;) depth63&lt;-merge(depth63, metadata, by=&quot;row.names&quot;) names(depth64)&lt;-sapply(strsplit(names(depth64), &quot;_iter&quot;), `[[`, 1) colnames(depth64)[1] depth64$seqdepth&lt;-rep(colnames(depth64)[1], nrow(depth64)) depth64[,1:10]&lt;-NULL depth64$seqdepth&lt;-str_remove_all(depth64$seqdepth, &quot;[depth]&quot;) depth64&lt;-merge(depth64, metadata, by=&quot;row.names&quot;) names(depth65)&lt;-sapply(strsplit(names(depth65), &quot;_iter&quot;), `[[`, 1) colnames(depth65)[1] depth65$seqdepth&lt;-rep(colnames(depth65)[1], nrow(depth65)) depth65[,1:10]&lt;-NULL depth65$seqdepth&lt;-str_remove_all(depth65$seqdepth, &quot;[depth]&quot;) depth65&lt;-merge(depth65, metadata, by=&quot;row.names&quot;) names(depth66)&lt;-sapply(strsplit(names(depth66), &quot;_iter&quot;), `[[`, 1) colnames(depth66)[1] depth66$seqdepth&lt;-rep(colnames(depth66)[1], nrow(depth66)) depth66[,1:10]&lt;-NULL depth66$seqdepth&lt;-str_remove_all(depth66$seqdepth, &quot;[depth]&quot;) depth66&lt;-merge(depth66, metadata, by=&quot;row.names&quot;) names(depth67)&lt;-sapply(strsplit(names(depth67), &quot;_iter&quot;), `[[`, 1) colnames(depth67)[1] depth67$seqdepth&lt;-rep(colnames(depth67)[1], nrow(depth67)) depth67[,1:10]&lt;-NULL depth67$seqdepth&lt;-str_remove_all(depth67$seqdepth, &quot;[depth]&quot;) depth67&lt;-merge(depth67, metadata, by=&quot;row.names&quot;) names(depth68)&lt;-sapply(strsplit(names(depth68), &quot;_iter&quot;), `[[`, 1) colnames(depth68)[1] depth68$seqdepth&lt;-rep(colnames(depth68)[1], nrow(depth68)) depth68[,1:10]&lt;-NULL depth68$seqdepth&lt;-str_remove_all(depth68$seqdepth, &quot;[depth]&quot;) depth68&lt;-merge(depth68, metadata, by=&quot;row.names&quot;) names(depth69)&lt;-sapply(strsplit(names(depth69), &quot;_iter&quot;), `[[`, 1) colnames(depth69)[1] depth69$seqdepth&lt;-rep(colnames(depth69)[1], nrow(depth69)) depth69[,1:10]&lt;-NULL depth69$seqdepth&lt;-str_remove_all(depth69$seqdepth, &quot;[depth]&quot;) depth69&lt;-merge(depth69, metadata, by=&quot;row.names&quot;) names(depth70)&lt;-sapply(strsplit(names(depth70), &quot;_iter&quot;), `[[`, 1) colnames(depth70)[1] depth70$seqdepth&lt;-rep(colnames(depth70)[1], nrow(depth70)) depth70[,1:10]&lt;-NULL depth70$seqdepth&lt;-str_remove_all(depth70$seqdepth, &quot;[depth]&quot;) depth70&lt;-merge(depth70, metadata, by=&quot;row.names&quot;) names(depth71)&lt;-sapply(strsplit(names(depth71), &quot;_iter&quot;), `[[`, 1) colnames(depth71)[1] depth71$seqdepth&lt;-rep(colnames(depth71)[1], nrow(depth71)) depth71[,1:10]&lt;-NULL depth71$seqdepth&lt;-str_remove_all(depth71$seqdepth, &quot;[depth]&quot;) depth71&lt;-merge(depth71, metadata, by=&quot;row.names&quot;) names(depth72)&lt;-sapply(strsplit(names(depth72), &quot;_iter&quot;), `[[`, 1) colnames(depth72)[1] depth72$seqdepth&lt;-rep(colnames(depth72)[1], nrow(depth72)) depth72[,1:10]&lt;-NULL depth72$seqdepth&lt;-str_remove_all(depth72$seqdepth, &quot;[depth]&quot;) depth72&lt;-merge(depth72, metadata, by=&quot;row.names&quot;) names(depth73)&lt;-sapply(strsplit(names(depth73), &quot;_iter&quot;), `[[`, 1) colnames(depth73)[1] depth73$seqdepth&lt;-rep(colnames(depth73)[1], nrow(depth73)) depth73[,1:10]&lt;-NULL depth73$seqdepth&lt;-str_remove_all(depth73$seqdepth, &quot;[depth]&quot;) depth73&lt;-merge(depth73, metadata, by=&quot;row.names&quot;) names(depth74)&lt;-sapply(strsplit(names(depth74), &quot;_iter&quot;), `[[`, 1) colnames(depth74)[1] depth74$seqdepth&lt;-rep(colnames(depth74)[1], nrow(depth74)) depth74[,1:10]&lt;-NULL depth74$seqdepth&lt;-str_remove_all(depth74$seqdepth, &quot;[depth]&quot;) depth74&lt;-merge(depth74, metadata, by=&quot;row.names&quot;) names(depth75)&lt;-sapply(strsplit(names(depth75), &quot;_iter&quot;), `[[`, 1) colnames(depth75)[1] depth75$seqdepth&lt;-rep(colnames(depth75)[1], nrow(depth75)) depth75[,1:10]&lt;-NULL depth75$seqdepth&lt;-str_remove_all(depth75$seqdepth, &quot;[depth]&quot;) depth75&lt;-merge(depth75, metadata, by=&quot;row.names&quot;) names(depth76)&lt;-sapply(strsplit(names(depth76), &quot;_iter&quot;), `[[`, 1) colnames(depth76)[1] depth76$seqdepth&lt;-rep(colnames(depth76)[1], nrow(depth76)) depth76[,1:10]&lt;-NULL depth76$seqdepth&lt;-str_remove_all(depth76$seqdepth, &quot;[depth]&quot;) depth76&lt;-merge(depth76, metadata, by=&quot;row.names&quot;) names(depth77)&lt;-sapply(strsplit(names(depth77), &quot;_iter&quot;), `[[`, 1) colnames(depth77)[1] depth77$seqdepth&lt;-rep(colnames(depth77)[1], nrow(depth77)) depth77[,1:10]&lt;-NULL depth77$seqdepth&lt;-str_remove_all(depth77$seqdepth, &quot;[depth]&quot;) depth77&lt;-merge(depth77, metadata, by=&quot;row.names&quot;) names(depth78)&lt;-sapply(strsplit(names(depth78), &quot;_iter&quot;), `[[`, 1) colnames(depth78)[1] depth78$seqdepth&lt;-rep(colnames(depth78)[1], nrow(depth78)) depth78[,1:10]&lt;-NULL depth78$seqdepth&lt;-str_remove_all(depth78$seqdepth, &quot;[depth]&quot;) depth78&lt;-merge(depth78, metadata, by=&quot;row.names&quot;) names(depth79)&lt;-sapply(strsplit(names(depth79), &quot;_iter&quot;), `[[`, 1) colnames(depth79)[1] depth79$seqdepth&lt;-rep(colnames(depth79)[1], nrow(depth79)) depth79[,1:10]&lt;-NULL depth79$seqdepth&lt;-str_remove_all(depth79$seqdepth, &quot;[depth]&quot;) depth79&lt;-merge(depth79, metadata, by=&quot;row.names&quot;) names(depth80)&lt;-sapply(strsplit(names(depth80), &quot;_iter&quot;), `[[`, 1) colnames(depth80)[1] depth80$seqdepth&lt;-rep(colnames(depth80)[1], nrow(depth80)) depth80[,1:10]&lt;-NULL depth80$seqdepth&lt;-str_remove_all(depth80$seqdepth, &quot;[depth]&quot;) depth80&lt;-merge(depth80, metadata, by=&quot;row.names&quot;) names(depth81)&lt;-sapply(strsplit(names(depth81), &quot;_iter&quot;), `[[`, 1) colnames(depth81)[1] depth81$seqdepth&lt;-rep(colnames(depth81)[1], nrow(depth81)) depth81[,1:10]&lt;-NULL depth81$seqdepth&lt;-str_remove_all(depth81$seqdepth, &quot;[depth]&quot;) depth81&lt;-merge(depth81, metadata, by=&quot;row.names&quot;) names(depth82)&lt;-sapply(strsplit(names(depth82), &quot;_iter&quot;), `[[`, 1) colnames(depth82)[1] depth82$seqdepth&lt;-rep(colnames(depth82)[1], nrow(depth82)) depth82[,1:10]&lt;-NULL depth82$seqdepth&lt;-str_remove_all(depth82$seqdepth, &quot;[depth]&quot;) depth82&lt;-merge(depth82, metadata, by=&quot;row.names&quot;) names(depth83)&lt;-sapply(strsplit(names(depth83), &quot;_iter&quot;), `[[`, 1) colnames(depth83)[1] depth83$seqdepth&lt;-rep(colnames(depth83)[1], nrow(depth83)) depth83[,1:10]&lt;-NULL depth83$seqdepth&lt;-str_remove_all(depth83$seqdepth, &quot;[depth]&quot;) depth83&lt;-merge(depth83, metadata, by=&quot;row.names&quot;) names(depth84)&lt;-sapply(strsplit(names(depth84), &quot;_iter&quot;), `[[`, 1) colnames(depth84)[1] depth84$seqdepth&lt;-rep(colnames(depth84)[1], nrow(depth84)) depth84[,1:10]&lt;-NULL depth84$seqdepth&lt;-str_remove_all(depth84$seqdepth, &quot;[depth]&quot;) depth84&lt;-merge(depth84, metadata, by=&quot;row.names&quot;) names(depth85)&lt;-sapply(strsplit(names(depth85), &quot;_iter&quot;), `[[`, 1) colnames(depth85)[1] depth85$seqdepth&lt;-rep(colnames(depth85)[1], nrow(depth85)) depth85[,1:10]&lt;-NULL depth85$seqdepth&lt;-str_remove_all(depth85$seqdepth, &quot;[depth]&quot;) depth85&lt;-merge(depth85, metadata, by=&quot;row.names&quot;) names(depth86)&lt;-sapply(strsplit(names(depth86), &quot;_iter&quot;), `[[`, 1) colnames(depth86)[1] depth86$seqdepth&lt;-rep(colnames(depth86)[1], nrow(depth86)) depth86[,1:10]&lt;-NULL depth86$seqdepth&lt;-str_remove_all(depth86$seqdepth, &quot;[depth]&quot;) depth86&lt;-merge(depth86, metadata, by=&quot;row.names&quot;) names(depth87)&lt;-sapply(strsplit(names(depth87), &quot;_iter&quot;), `[[`, 1) colnames(depth87)[1] depth87$seqdepth&lt;-rep(colnames(depth87)[1], nrow(depth87)) depth87[,1:10]&lt;-NULL depth87$seqdepth&lt;-str_remove_all(depth87$seqdepth, &quot;[depth]&quot;) depth87&lt;-merge(depth87, metadata, by=&quot;row.names&quot;) names(depth88)&lt;-sapply(strsplit(names(depth88), &quot;_iter&quot;), `[[`, 1) colnames(depth88)[1] depth88$seqdepth&lt;-rep(colnames(depth88)[1], nrow(depth88)) depth88[,1:10]&lt;-NULL depth88$seqdepth&lt;-str_remove_all(depth88$seqdepth, &quot;[depth]&quot;) depth88&lt;-merge(depth88, metadata, by=&quot;row.names&quot;) names(depth89)&lt;-sapply(strsplit(names(depth89), &quot;_iter&quot;), `[[`, 1) colnames(depth89)[1] depth89$seqdepth&lt;-rep(colnames(depth89)[1], nrow(depth89)) depth89[,1:10]&lt;-NULL depth89$seqdepth&lt;-str_remove_all(depth89$seqdepth, &quot;[depth]&quot;) depth89&lt;-merge(depth89, metadata, by=&quot;row.names&quot;) names(depth90)&lt;-sapply(strsplit(names(depth90), &quot;_iter&quot;), `[[`, 1) colnames(depth90)[1] depth90$seqdepth&lt;-rep(colnames(depth90)[1], nrow(depth90)) depth90[,1:10]&lt;-NULL depth90$seqdepth&lt;-str_remove_all(depth90$seqdepth, &quot;[depth]&quot;) depth90&lt;-merge(depth90, metadata, by=&quot;row.names&quot;) names(depth91)&lt;-sapply(strsplit(names(depth91), &quot;_iter&quot;), `[[`, 1) colnames(depth91)[1] depth91$seqdepth&lt;-rep(colnames(depth91)[1], nrow(depth91)) depth91[,1:10]&lt;-NULL depth91$seqdepth&lt;-str_remove_all(depth91$seqdepth, &quot;[depth]&quot;) depth91&lt;-merge(depth91, metadata, by=&quot;row.names&quot;) names(depth92)&lt;-sapply(strsplit(names(depth92), &quot;_iter&quot;), `[[`, 1) colnames(depth92)[1] depth92$seqdepth&lt;-rep(colnames(depth92)[1], nrow(depth92)) depth92[,1:10]&lt;-NULL depth92$seqdepth&lt;-str_remove_all(depth92$seqdepth, &quot;[depth]&quot;) depth92&lt;-merge(depth92, metadata, by=&quot;row.names&quot;) names(depth93)&lt;-sapply(strsplit(names(depth93), &quot;_iter&quot;), `[[`, 1) colnames(depth93)[1] depth93$seqdepth&lt;-rep(colnames(depth93)[1], nrow(depth93)) depth93[,1:10]&lt;-NULL depth93$seqdepth&lt;-str_remove_all(depth93$seqdepth, &quot;[depth]&quot;) depth93&lt;-merge(depth93, metadata, by=&quot;row.names&quot;) names(depth94)&lt;-sapply(strsplit(names(depth94), &quot;_iter&quot;), `[[`, 1) colnames(depth94)[1] depth94$seqdepth&lt;-rep(colnames(depth94)[1], nrow(depth94)) depth94[,1:10]&lt;-NULL depth94$seqdepth&lt;-str_remove_all(depth94$seqdepth, &quot;[depth]&quot;) depth94&lt;-merge(depth94, metadata, by=&quot;row.names&quot;) names(depth95)&lt;-sapply(strsplit(names(depth95), &quot;_iter&quot;), `[[`, 1) colnames(depth95)[1] depth95$seqdepth&lt;-rep(colnames(depth95)[1], nrow(depth95)) depth95[,1:10]&lt;-NULL depth95$seqdepth&lt;-str_remove_all(depth95$seqdepth, &quot;[depth]&quot;) depth95&lt;-merge(depth95, metadata, by=&quot;row.names&quot;) names(depth96)&lt;-sapply(strsplit(names(depth96), &quot;_iter&quot;), `[[`, 1) colnames(depth96)[1] depth96$seqdepth&lt;-rep(colnames(depth96)[1], nrow(depth96)) depth96[,1:10]&lt;-NULL depth96$seqdepth&lt;-str_remove_all(depth96$seqdepth, &quot;[depth]&quot;) depth96&lt;-merge(depth96, metadata, by=&quot;row.names&quot;) names(depth97)&lt;-sapply(strsplit(names(depth97), &quot;_iter&quot;), `[[`, 1) colnames(depth97)[1] depth97$seqdepth&lt;-rep(colnames(depth97)[1], nrow(depth97)) depth97[,1:10]&lt;-NULL depth97$seqdepth&lt;-str_remove_all(depth97$seqdepth, &quot;[depth]&quot;) depth97&lt;-merge(depth97, metadata, by=&quot;row.names&quot;) names(depth98)&lt;-sapply(strsplit(names(depth98), &quot;_iter&quot;), `[[`, 1) colnames(depth98)[1] depth98$seqdepth&lt;-rep(colnames(depth98)[1], nrow(depth98)) depth98[,1:10]&lt;-NULL depth98$seqdepth&lt;-str_remove_all(depth98$seqdepth, &quot;[depth]&quot;) depth98&lt;-merge(depth98, metadata, by=&quot;row.names&quot;) names(depth99)&lt;-sapply(strsplit(names(depth99), &quot;_iter&quot;), `[[`, 1) colnames(depth99)[1] depth99$seqdepth&lt;-rep(colnames(depth99)[1], nrow(depth99)) depth99[,1:10]&lt;-NULL depth99$seqdepth&lt;-str_remove_all(depth99$seqdepth, &quot;[depth]&quot;) depth99&lt;-merge(depth99, metadata, by=&quot;row.names&quot;) names(depth100)&lt;-sapply(strsplit(names(depth100), &quot;_iter&quot;), `[[`, 1) colnames(depth100)[1] depth100$seqdepth&lt;-rep(colnames(depth100)[1], nrow(depth100)) depth100[,1:10]&lt;-NULL depth100$seqdepth&lt;-str_remove_all(depth100$seqdepth, &quot;[depth]&quot;) depth100&lt;-merge(depth100, metadata, by=&quot;row.names&quot;) d1&lt;-rbind(depth1,depth2) d2&lt;-rbind(d1,depth3) d3&lt;-rbind(d2,depth4) d4&lt;-rbind(d3,depth5) d5&lt;-rbind(d4,depth6) d6&lt;-rbind(d5,depth7) d7&lt;-rbind(d6,depth8) d8&lt;-rbind(d7,depth9) d9&lt;-rbind(d8,depth10) d10&lt;-rbind(d9,depth11) d11&lt;-rbind(d10,depth12) d12&lt;-rbind(d11,depth13) d13&lt;-rbind(d12,depth14) d14&lt;-rbind(d13,depth15) d15&lt;-rbind(d14,depth16) d16&lt;-rbind(d15,depth17) d17&lt;-rbind(d16,depth18) d18&lt;-rbind(d17,depth19) d19&lt;-rbind(d18,depth20) d20&lt;-rbind(d19,depth21) d21&lt;-rbind(d20,depth22) d22&lt;-rbind(d21,depth23) d23&lt;-rbind(d22,depth24) d24&lt;-rbind(d23,depth25) d25&lt;-rbind(d24,depth26) d26&lt;-rbind(d25,depth27) d27&lt;-rbind(d26,depth28) d28&lt;-rbind(d27,depth29) d29&lt;-rbind(d28,depth30) d30&lt;-rbind(d29,depth31) d31&lt;-rbind(d30,depth32) d32&lt;-rbind(d31,depth33) d33&lt;-rbind(d32,depth34) d34&lt;-rbind(d33,depth35) d35&lt;-rbind(d34,depth36) d36&lt;-rbind(d35,depth37) d37&lt;-rbind(d36,depth38) d38&lt;-rbind(d37,depth39) d39&lt;-rbind(d38,depth40) d40&lt;-rbind(d39,depth41) d41&lt;-rbind(d40,depth42) d42&lt;-rbind(d41,depth43) d43&lt;-rbind(d42,depth44) d44&lt;-rbind(d43,depth45) d45&lt;-rbind(d44,depth46) d46&lt;-rbind(d45,depth47) d47&lt;-rbind(d46,depth48) d48&lt;-rbind(d47,depth49) d49&lt;-rbind(d48,depth50) d50&lt;-rbind(d49,depth51) d51&lt;-rbind(d50,depth52) d52&lt;-rbind(d51,depth53) d53&lt;-rbind(d52,depth54) d54&lt;-rbind(d53,depth55) d55&lt;-rbind(d54,depth56) d56&lt;-rbind(d55,depth57) d57&lt;-rbind(d56,depth58) d58&lt;-rbind(d57,depth59) d59&lt;-rbind(d58,depth60) d60&lt;-rbind(d59,depth61) d61&lt;-rbind(d60,depth62) d62&lt;-rbind(d61,depth63) d63&lt;-rbind(d62,depth64) d64&lt;-rbind(d63,depth65) d65&lt;-rbind(d64,depth66) d66&lt;-rbind(d65,depth67) d67&lt;-rbind(d66,depth68) d68&lt;-rbind(d67,depth69) d69&lt;-rbind(d68,depth70) d70&lt;-rbind(d69,depth71) d71&lt;-rbind(d70,depth72) d72&lt;-rbind(d71,depth73) d73&lt;-rbind(d72,depth74) d74&lt;-rbind(d73,depth75) d75&lt;-rbind(d74,depth76) d76&lt;-rbind(d75,depth77) d77&lt;-rbind(d76,depth78) d78&lt;-rbind(d77,depth79) d79&lt;-rbind(d78,depth80) d80&lt;-rbind(d79,depth81) d81&lt;-rbind(d80,depth82) d82&lt;-rbind(d81,depth83) d83&lt;-rbind(d82,depth84) d84&lt;-rbind(d83,depth85) d85&lt;-rbind(d84,depth86) d86&lt;-rbind(d85,depth87) d87&lt;-rbind(d86,depth88) d88&lt;-rbind(d87,depth89) d89&lt;-rbind(d88,depth90) d90&lt;-rbind(d89,depth91) d91&lt;-rbind(d90,depth92) d92&lt;-rbind(d91,depth93) d93&lt;-rbind(d92,depth94) d94&lt;-rbind(d93,depth95) d95&lt;-rbind(d94,depth96) d96&lt;-rbind(d95,depth97) d97&lt;-rbind(d96,depth98) d98&lt;-rbind(d97,depth99) d99&lt;-rbind(d98,depth100) names(d99)[1] &lt;- &quot;SampleID&quot; names(d99)[names(d99) == &quot;mean&quot;] &lt;- &quot;observedASVs&quot; d99$seqdepth&lt;-as.numeric(d99$seqdepth) write.table(d99, file = &quot;raref_sub.txt&quot;,sep=&quot;\\t&quot;,col.names= T, row.names=F) quit(&quot;no&quot;) sed &#39;s/&quot;//g&#39; raref_sub.txt &gt; raref_sub2.txt cd $PWDa/dada2/core-metrics-results/ unzip alpha-rarefaction_complete.qzv cd &quot;$(\\ls -1dt ./*/ | head -n 1)/data&quot; sed &#39;1 s/-//g&#39; observed_otus.csv &gt; observed_otus2.csv sed -e &#39;s/,/\\t/g&#39; observed_otus2.csv &gt; tmpfile; mv tmpfile observed_otus.txt cp -r &quot;observed_otus.txt&quot; $PWDa/dada2/ cd $PWDa/dada2/ awk &#39;BEGIN { FS = OFS = &quot;\\t&quot; } { for(i=1; i&lt;=NF; i++) if($i ~ /^ *$/) $i = 0 }; 1&#39; observed_otus.txt &gt; observed_otusN.txt R list.of.packages &lt;- c(&quot;ggplot2&quot;, &quot;stringr&quot;) new.packages &lt;- list.of.packages[!(list.of.packages %in% installed.packages()[,&quot;Package&quot;])] if(length(new.packages)) install.packages(new.packages, repos=&#39;http://cran.us.r-project.org&#39;) library(stringr) library(ggplot2) data&lt;- read.table(file=&quot;observed_otusN.txt&quot;, header =T) data[data == 0] &lt;- NA dat &lt;- data[,-1] rownames(dat) &lt;- data[,1] depth1&lt;-dat[,1:10] depth2&lt;-dat[,11:20] depth3&lt;-dat[,21:30] depth4&lt;-dat[,31:40] depth5&lt;-dat[,41:50] depth6&lt;-dat[,51:60] depth7&lt;-dat[,61:70] depth8&lt;-dat[,71:80] depth9&lt;-dat[,81:90] depth10&lt;-dat[,91:100] depth11&lt;-dat[,101:110] depth12&lt;-dat[,111:120] depth13&lt;-dat[,121:130] depth14&lt;-dat[,131:140] depth15&lt;-dat[,141:150] depth16&lt;-dat[,151:160] depth17&lt;-dat[,161:170] depth18&lt;-dat[,171:180] depth19&lt;-dat[,181:190] depth20&lt;-dat[,191:200] depth21&lt;-dat[,201:210] depth22&lt;-dat[,211:220] depth23&lt;-dat[,221:230] depth24&lt;-dat[,231:240] depth25&lt;-dat[,241:250] depth26&lt;-dat[,251:260] depth27&lt;-dat[,261:270] depth28&lt;-dat[,271:280] depth29&lt;-dat[,281:290] depth30&lt;-dat[,291:300] depth31&lt;-dat[,301:310] depth32&lt;-dat[,311:320] depth33&lt;-dat[,321:330] depth34&lt;-dat[,331:340] depth35&lt;-dat[,341:350] depth36&lt;-dat[,351:360] depth37&lt;-dat[,361:370] depth38&lt;-dat[,371:380] depth39&lt;-dat[,381:390] depth40&lt;-dat[,391:400] depth41&lt;-dat[,401:410] depth42&lt;-dat[,411:420] depth43&lt;-dat[,421:430] depth44&lt;-dat[,431:440] depth45&lt;-dat[,441:450] depth46&lt;-dat[,451:460] depth47&lt;-dat[,461:470] depth48&lt;-dat[,471:480] depth49&lt;-dat[,481:490] depth50&lt;-dat[,491:500] depth51&lt;-dat[,501:510] depth52&lt;-dat[,511:520] depth53&lt;-dat[,521:530] depth54&lt;-dat[,531:540] depth55&lt;-dat[,541:550] depth56&lt;-dat[,551:560] depth57&lt;-dat[,561:570] depth58&lt;-dat[,571:580] depth59&lt;-dat[,581:590] depth60&lt;-dat[,591:600] depth61&lt;-dat[,601:610] depth62&lt;-dat[,611:620] depth63&lt;-dat[,621:630] depth64&lt;-dat[,631:640] depth65&lt;-dat[,641:650] depth66&lt;-dat[,651:660] depth67&lt;-dat[,661:670] depth68&lt;-dat[,671:680] depth69&lt;-dat[,681:690] depth70&lt;-dat[,691:700] depth71&lt;-dat[,701:710] depth72&lt;-dat[,711:720] depth73&lt;-dat[,721:730] depth74&lt;-dat[,731:740] depth75&lt;-dat[,741:750] depth76&lt;-dat[,751:760] depth77&lt;-dat[,761:770] depth78&lt;-dat[,771:780] depth79&lt;-dat[,781:790] depth80&lt;-dat[,791:800] depth81&lt;-dat[,801:810] depth82&lt;-dat[,811:820] depth83&lt;-dat[,821:830] depth84&lt;-dat[,831:840] depth85&lt;-dat[,841:850] depth86&lt;-dat[,851:860] depth87&lt;-dat[,861:870] depth88&lt;-dat[,871:880] depth89&lt;-dat[,881:890] depth90&lt;-dat[,891:900] depth91&lt;-dat[,901:910] depth92&lt;-dat[,911:920] depth93&lt;-dat[,921:930] depth94&lt;-dat[,931:940] depth95&lt;-dat[,941:950] depth96&lt;-dat[,951:960] depth97&lt;-dat[,961:970] depth98&lt;-dat[,971:980] depth99&lt;-dat[,981:990] depth100&lt;-dat[,991:1000] metadata&lt;-dat[,1001:ncol(dat)] depth1$mean&lt;-rowMeans(depth1) depth2$mean&lt;-rowMeans(depth2) depth3$mean&lt;-rowMeans(depth3) depth4$mean&lt;-rowMeans(depth4) depth5$mean&lt;-rowMeans(depth5) depth6$mean&lt;-rowMeans(depth6) depth7$mean&lt;-rowMeans(depth7) depth8$mean&lt;-rowMeans(depth8) depth9$mean&lt;-rowMeans(depth9) depth10$mean&lt;-rowMeans(depth10) depth11$mean&lt;-rowMeans(depth11) depth12$mean&lt;-rowMeans(depth12) depth13$mean&lt;-rowMeans(depth13) depth14$mean&lt;-rowMeans(depth14) depth15$mean&lt;-rowMeans(depth15) depth16$mean&lt;-rowMeans(depth16) depth17$mean&lt;-rowMeans(depth17) depth18$mean&lt;-rowMeans(depth18) depth19$mean&lt;-rowMeans(depth19) depth20$mean&lt;-rowMeans(depth20) depth21$mean&lt;-rowMeans(depth21) depth22$mean&lt;-rowMeans(depth22) depth23$mean&lt;-rowMeans(depth23) depth24$mean&lt;-rowMeans(depth24) depth25$mean&lt;-rowMeans(depth25) depth26$mean&lt;-rowMeans(depth26) depth27$mean&lt;-rowMeans(depth27) depth28$mean&lt;-rowMeans(depth28) depth29$mean&lt;-rowMeans(depth29) depth30$mean&lt;-rowMeans(depth30) depth31$mean&lt;-rowMeans(depth31) depth32$mean&lt;-rowMeans(depth32) depth33$mean&lt;-rowMeans(depth33) depth34$mean&lt;-rowMeans(depth34) depth35$mean&lt;-rowMeans(depth35) depth36$mean&lt;-rowMeans(depth36) depth37$mean&lt;-rowMeans(depth37) depth38$mean&lt;-rowMeans(depth38) depth39$mean&lt;-rowMeans(depth39) depth40$mean&lt;-rowMeans(depth40) depth41$mean&lt;-rowMeans(depth41) depth42$mean&lt;-rowMeans(depth42) depth43$mean&lt;-rowMeans(depth43) depth44$mean&lt;-rowMeans(depth44) depth45$mean&lt;-rowMeans(depth45) depth46$mean&lt;-rowMeans(depth46) depth47$mean&lt;-rowMeans(depth47) depth48$mean&lt;-rowMeans(depth48) depth49$mean&lt;-rowMeans(depth49) depth50$mean&lt;-rowMeans(depth50) depth51$mean&lt;-rowMeans(depth51) depth52$mean&lt;-rowMeans(depth52) depth53$mean&lt;-rowMeans(depth53) depth54$mean&lt;-rowMeans(depth54) depth55$mean&lt;-rowMeans(depth55) depth56$mean&lt;-rowMeans(depth56) depth57$mean&lt;-rowMeans(depth57) depth58$mean&lt;-rowMeans(depth58) depth59$mean&lt;-rowMeans(depth59) depth60$mean&lt;-rowMeans(depth60) depth61$mean&lt;-rowMeans(depth61) depth62$mean&lt;-rowMeans(depth62) depth63$mean&lt;-rowMeans(depth63) depth64$mean&lt;-rowMeans(depth64) depth65$mean&lt;-rowMeans(depth65) depth66$mean&lt;-rowMeans(depth66) depth67$mean&lt;-rowMeans(depth67) depth68$mean&lt;-rowMeans(depth68) depth69$mean&lt;-rowMeans(depth69) depth70$mean&lt;-rowMeans(depth70) depth71$mean&lt;-rowMeans(depth71) depth72$mean&lt;-rowMeans(depth72) depth73$mean&lt;-rowMeans(depth73) depth74$mean&lt;-rowMeans(depth74) depth75$mean&lt;-rowMeans(depth75) depth76$mean&lt;-rowMeans(depth76) depth77$mean&lt;-rowMeans(depth77) depth78$mean&lt;-rowMeans(depth78) depth79$mean&lt;-rowMeans(depth79) depth80$mean&lt;-rowMeans(depth80) depth81$mean&lt;-rowMeans(depth81) depth82$mean&lt;-rowMeans(depth82) depth83$mean&lt;-rowMeans(depth83) depth84$mean&lt;-rowMeans(depth84) depth85$mean&lt;-rowMeans(depth85) depth86$mean&lt;-rowMeans(depth86) depth87$mean&lt;-rowMeans(depth87) depth88$mean&lt;-rowMeans(depth88) depth89$mean&lt;-rowMeans(depth89) depth90$mean&lt;-rowMeans(depth90) depth91$mean&lt;-rowMeans(depth91) depth92$mean&lt;-rowMeans(depth92) depth93$mean&lt;-rowMeans(depth93) depth94$mean&lt;-rowMeans(depth94) depth95$mean&lt;-rowMeans(depth95) depth96$mean&lt;-rowMeans(depth96) depth97$mean&lt;-rowMeans(depth97) depth98$mean&lt;-rowMeans(depth98) depth99$mean&lt;-rowMeans(depth99) depth100$mean&lt;-rowMeans(depth100) names(depth1)&lt;-sapply(strsplit(names(depth1), &quot;_iter&quot;), `[[`, 1) colnames(depth1)[1] depth1$seqdepth&lt;-rep(colnames(depth1)[1], nrow(depth1)) depth1[,1:10]&lt;-NULL depth1$seqdepth&lt;-str_remove_all(depth1$seqdepth, &quot;[depth]&quot;) depth1&lt;-merge(depth1, metadata, by=&quot;row.names&quot;) names(depth2)&lt;-sapply(strsplit(names(depth2), &quot;_iter&quot;), `[[`, 1) colnames(depth2)[1] depth2$seqdepth&lt;-rep(colnames(depth2)[1], nrow(depth2)) depth2[,1:10]&lt;-NULL depth2$seqdepth&lt;-str_remove_all(depth2$seqdepth, &quot;[depth]&quot;) depth2&lt;-merge(depth2, metadata, by=&quot;row.names&quot;) names(depth3)&lt;-sapply(strsplit(names(depth3), &quot;_iter&quot;), `[[`, 1) colnames(depth3)[1] depth3$seqdepth&lt;-rep(colnames(depth3)[1], nrow(depth3)) depth3[,1:10]&lt;-NULL depth3$seqdepth&lt;-str_remove_all(depth3$seqdepth, &quot;[depth]&quot;) depth3&lt;-merge(depth3, metadata, by=&quot;row.names&quot;) names(depth4)&lt;-sapply(strsplit(names(depth4), &quot;_iter&quot;), `[[`, 1) colnames(depth4)[1] depth4$seqdepth&lt;-rep(colnames(depth4)[1], nrow(depth4)) depth4[,1:10]&lt;-NULL depth4$seqdepth&lt;-str_remove_all(depth4$seqdepth, &quot;[depth]&quot;) depth4&lt;-merge(depth4, metadata, by=&quot;row.names&quot;) names(depth5)&lt;-sapply(strsplit(names(depth5), &quot;_iter&quot;), `[[`, 1) colnames(depth5)[1] depth5$seqdepth&lt;-rep(colnames(depth5)[1], nrow(depth5)) depth5[,1:10]&lt;-NULL depth5$seqdepth&lt;-str_remove_all(depth5$seqdepth, &quot;[depth]&quot;) depth5&lt;-merge(depth5, metadata, by=&quot;row.names&quot;) names(depth6)&lt;-sapply(strsplit(names(depth6), &quot;_iter&quot;), `[[`, 1) colnames(depth6)[1] depth6$seqdepth&lt;-rep(colnames(depth6)[1], nrow(depth6)) depth6[,1:10]&lt;-NULL depth6$seqdepth&lt;-str_remove_all(depth6$seqdepth, &quot;[depth]&quot;) depth6&lt;-merge(depth6, metadata, by=&quot;row.names&quot;) names(depth7)&lt;-sapply(strsplit(names(depth7), &quot;_iter&quot;), `[[`, 1) colnames(depth7)[1] depth7$seqdepth&lt;-rep(colnames(depth7)[1], nrow(depth7)) depth7[,1:10]&lt;-NULL depth7$seqdepth&lt;-str_remove_all(depth7$seqdepth, &quot;[depth]&quot;) depth7&lt;-merge(depth7, metadata, by=&quot;row.names&quot;) names(depth8)&lt;-sapply(strsplit(names(depth8), &quot;_iter&quot;), `[[`, 1) colnames(depth8)[1] depth8$seqdepth&lt;-rep(colnames(depth8)[1], nrow(depth8)) depth8[,1:10]&lt;-NULL depth8$seqdepth&lt;-str_remove_all(depth8$seqdepth, &quot;[depth]&quot;) depth8&lt;-merge(depth8, metadata, by=&quot;row.names&quot;) names(depth9)&lt;-sapply(strsplit(names(depth9), &quot;_iter&quot;), `[[`, 1) colnames(depth9)[1] depth9$seqdepth&lt;-rep(colnames(depth9)[1], nrow(depth9)) depth9[,1:10]&lt;-NULL depth9$seqdepth&lt;-str_remove_all(depth9$seqdepth, &quot;[depth]&quot;) depth9&lt;-merge(depth9, metadata, by=&quot;row.names&quot;) names(depth10)&lt;-sapply(strsplit(names(depth10), &quot;_iter&quot;), `[[`, 1) colnames(depth10)[1] depth10$seqdepth&lt;-rep(colnames(depth10)[1], nrow(depth10)) depth10[,1:10]&lt;-NULL depth10$seqdepth&lt;-str_remove_all(depth10$seqdepth, &quot;[depth]&quot;) depth10&lt;-merge(depth10, metadata, by=&quot;row.names&quot;) names(depth11)&lt;-sapply(strsplit(names(depth11), &quot;_iter&quot;), `[[`, 1) colnames(depth11)[1] depth11$seqdepth&lt;-rep(colnames(depth11)[1], nrow(depth11)) depth11[,1:10]&lt;-NULL depth11$seqdepth&lt;-str_remove_all(depth11$seqdepth, &quot;[depth]&quot;) depth11&lt;-merge(depth11, metadata, by=&quot;row.names&quot;) names(depth12)&lt;-sapply(strsplit(names(depth12), &quot;_iter&quot;), `[[`, 1) colnames(depth12)[1] depth12$seqdepth&lt;-rep(colnames(depth12)[1], nrow(depth12)) depth12[,1:10]&lt;-NULL depth12$seqdepth&lt;-str_remove_all(depth12$seqdepth, &quot;[depth]&quot;) depth12&lt;-merge(depth12, metadata, by=&quot;row.names&quot;) names(depth13)&lt;-sapply(strsplit(names(depth13), &quot;_iter&quot;), `[[`, 1) colnames(depth13)[1] depth13$seqdepth&lt;-rep(colnames(depth13)[1], nrow(depth13)) depth13[,1:10]&lt;-NULL depth13$seqdepth&lt;-str_remove_all(depth13$seqdepth, &quot;[depth]&quot;) depth13&lt;-merge(depth13, metadata, by=&quot;row.names&quot;) names(depth14)&lt;-sapply(strsplit(names(depth14), &quot;_iter&quot;), `[[`, 1) colnames(depth14)[1] depth14$seqdepth&lt;-rep(colnames(depth14)[1], nrow(depth14)) depth14[,1:10]&lt;-NULL depth14$seqdepth&lt;-str_remove_all(depth14$seqdepth, &quot;[depth]&quot;) depth14&lt;-merge(depth14, metadata, by=&quot;row.names&quot;) names(depth15)&lt;-sapply(strsplit(names(depth15), &quot;_iter&quot;), `[[`, 1) colnames(depth15)[1] depth15$seqdepth&lt;-rep(colnames(depth15)[1], nrow(depth15)) depth15[,1:10]&lt;-NULL depth15$seqdepth&lt;-str_remove_all(depth15$seqdepth, &quot;[depth]&quot;) depth15&lt;-merge(depth15, metadata, by=&quot;row.names&quot;) names(depth16)&lt;-sapply(strsplit(names(depth16), &quot;_iter&quot;), `[[`, 1) colnames(depth16)[1] depth16$seqdepth&lt;-rep(colnames(depth16)[1], nrow(depth16)) depth16[,1:10]&lt;-NULL depth16$seqdepth&lt;-str_remove_all(depth16$seqdepth, &quot;[depth]&quot;) depth16&lt;-merge(depth16, metadata, by=&quot;row.names&quot;) names(depth17)&lt;-sapply(strsplit(names(depth17), &quot;_iter&quot;), `[[`, 1) colnames(depth17)[1] depth17$seqdepth&lt;-rep(colnames(depth17)[1], nrow(depth17)) depth17[,1:10]&lt;-NULL depth17$seqdepth&lt;-str_remove_all(depth17$seqdepth, &quot;[depth]&quot;) depth17&lt;-merge(depth17, metadata, by=&quot;row.names&quot;) names(depth18)&lt;-sapply(strsplit(names(depth18), &quot;_iter&quot;), `[[`, 1) colnames(depth18)[1] depth18$seqdepth&lt;-rep(colnames(depth18)[1], nrow(depth18)) depth18[,1:10]&lt;-NULL depth18$seqdepth&lt;-str_remove_all(depth18$seqdepth, &quot;[depth]&quot;) depth18&lt;-merge(depth18, metadata, by=&quot;row.names&quot;) names(depth19)&lt;-sapply(strsplit(names(depth19), &quot;_iter&quot;), `[[`, 1) colnames(depth19)[1] depth19$seqdepth&lt;-rep(colnames(depth19)[1], nrow(depth19)) depth19[,1:10]&lt;-NULL depth19$seqdepth&lt;-str_remove_all(depth19$seqdepth, &quot;[depth]&quot;) depth19&lt;-merge(depth19, metadata, by=&quot;row.names&quot;) names(depth20)&lt;-sapply(strsplit(names(depth20), &quot;_iter&quot;), `[[`, 1) colnames(depth20)[1] depth20$seqdepth&lt;-rep(colnames(depth20)[1], nrow(depth20)) depth20[,1:10]&lt;-NULL depth20$seqdepth&lt;-str_remove_all(depth20$seqdepth, &quot;[depth]&quot;) depth20&lt;-merge(depth20, metadata, by=&quot;row.names&quot;) names(depth21)&lt;-sapply(strsplit(names(depth21), &quot;_iter&quot;), `[[`, 1) colnames(depth21)[1] depth21$seqdepth&lt;-rep(colnames(depth21)[1], nrow(depth21)) depth21[,1:10]&lt;-NULL depth21$seqdepth&lt;-str_remove_all(depth21$seqdepth, &quot;[depth]&quot;) depth21&lt;-merge(depth21, metadata, by=&quot;row.names&quot;) names(depth22)&lt;-sapply(strsplit(names(depth22), &quot;_iter&quot;), `[[`, 1) colnames(depth22)[1] depth22$seqdepth&lt;-rep(colnames(depth22)[1], nrow(depth22)) depth22[,1:10]&lt;-NULL depth22$seqdepth&lt;-str_remove_all(depth22$seqdepth, &quot;[depth]&quot;) depth22&lt;-merge(depth22, metadata, by=&quot;row.names&quot;) names(depth23)&lt;-sapply(strsplit(names(depth23), &quot;_iter&quot;), `[[`, 1) colnames(depth23)[1] depth23$seqdepth&lt;-rep(colnames(depth23)[1], nrow(depth23)) depth23[,1:10]&lt;-NULL depth23$seqdepth&lt;-str_remove_all(depth23$seqdepth, &quot;[depth]&quot;) depth23&lt;-merge(depth23, metadata, by=&quot;row.names&quot;) names(depth24)&lt;-sapply(strsplit(names(depth24), &quot;_iter&quot;), `[[`, 1) colnames(depth24)[1] depth24$seqdepth&lt;-rep(colnames(depth24)[1], nrow(depth24)) depth24[,1:10]&lt;-NULL depth24$seqdepth&lt;-str_remove_all(depth24$seqdepth, &quot;[depth]&quot;) depth24&lt;-merge(depth24, metadata, by=&quot;row.names&quot;) names(depth25)&lt;-sapply(strsplit(names(depth25), &quot;_iter&quot;), `[[`, 1) colnames(depth25)[1] depth25$seqdepth&lt;-rep(colnames(depth25)[1], nrow(depth25)) depth25[,1:10]&lt;-NULL depth25$seqdepth&lt;-str_remove_all(depth25$seqdepth, &quot;[depth]&quot;) depth25&lt;-merge(depth25, metadata, by=&quot;row.names&quot;) names(depth26)&lt;-sapply(strsplit(names(depth26), &quot;_iter&quot;), `[[`, 1) colnames(depth26)[1] depth26$seqdepth&lt;-rep(colnames(depth26)[1], nrow(depth26)) depth26[,1:10]&lt;-NULL depth26$seqdepth&lt;-str_remove_all(depth26$seqdepth, &quot;[depth]&quot;) depth26&lt;-merge(depth26, metadata, by=&quot;row.names&quot;) names(depth27)&lt;-sapply(strsplit(names(depth27), &quot;_iter&quot;), `[[`, 1) colnames(depth27)[1] depth27$seqdepth&lt;-rep(colnames(depth27)[1], nrow(depth27)) depth27[,1:10]&lt;-NULL depth27$seqdepth&lt;-str_remove_all(depth27$seqdepth, &quot;[depth]&quot;) depth27&lt;-merge(depth27, metadata, by=&quot;row.names&quot;) names(depth28)&lt;-sapply(strsplit(names(depth28), &quot;_iter&quot;), `[[`, 1) colnames(depth28)[1] depth28$seqdepth&lt;-rep(colnames(depth28)[1], nrow(depth28)) depth28[,1:10]&lt;-NULL depth28$seqdepth&lt;-str_remove_all(depth28$seqdepth, &quot;[depth]&quot;) depth28&lt;-merge(depth28, metadata, by=&quot;row.names&quot;) names(depth29)&lt;-sapply(strsplit(names(depth29), &quot;_iter&quot;), `[[`, 1) colnames(depth29)[1] depth29$seqdepth&lt;-rep(colnames(depth29)[1], nrow(depth29)) depth29[,1:10]&lt;-NULL depth29$seqdepth&lt;-str_remove_all(depth29$seqdepth, &quot;[depth]&quot;) depth29&lt;-merge(depth29, metadata, by=&quot;row.names&quot;) names(depth30)&lt;-sapply(strsplit(names(depth30), &quot;_iter&quot;), `[[`, 1) colnames(depth30)[1] depth30$seqdepth&lt;-rep(colnames(depth30)[1], nrow(depth30)) depth30[,1:10]&lt;-NULL depth30$seqdepth&lt;-str_remove_all(depth30$seqdepth, &quot;[depth]&quot;) depth30&lt;-merge(depth30, metadata, by=&quot;row.names&quot;) names(depth31)&lt;-sapply(strsplit(names(depth31), &quot;_iter&quot;), `[[`, 1) colnames(depth31)[1] depth31$seqdepth&lt;-rep(colnames(depth31)[1], nrow(depth31)) depth31[,1:10]&lt;-NULL depth31$seqdepth&lt;-str_remove_all(depth31$seqdepth, &quot;[depth]&quot;) depth31&lt;-merge(depth31, metadata, by=&quot;row.names&quot;) names(depth32)&lt;-sapply(strsplit(names(depth32), &quot;_iter&quot;), `[[`, 1) colnames(depth32)[1] depth32$seqdepth&lt;-rep(colnames(depth32)[1], nrow(depth32)) depth32[,1:10]&lt;-NULL depth32$seqdepth&lt;-str_remove_all(depth32$seqdepth, &quot;[depth]&quot;) depth32&lt;-merge(depth32, metadata, by=&quot;row.names&quot;) names(depth33)&lt;-sapply(strsplit(names(depth33), &quot;_iter&quot;), `[[`, 1) colnames(depth33)[1] depth33$seqdepth&lt;-rep(colnames(depth33)[1], nrow(depth33)) depth33[,1:10]&lt;-NULL depth33$seqdepth&lt;-str_remove_all(depth33$seqdepth, &quot;[depth]&quot;) depth33&lt;-merge(depth33, metadata, by=&quot;row.names&quot;) names(depth34)&lt;-sapply(strsplit(names(depth34), &quot;_iter&quot;), `[[`, 1) colnames(depth34)[1] depth34$seqdepth&lt;-rep(colnames(depth34)[1], nrow(depth34)) depth34[,1:10]&lt;-NULL depth34$seqdepth&lt;-str_remove_all(depth34$seqdepth, &quot;[depth]&quot;) depth34&lt;-merge(depth34, metadata, by=&quot;row.names&quot;) names(depth35)&lt;-sapply(strsplit(names(depth35), &quot;_iter&quot;), `[[`, 1) colnames(depth35)[1] depth35$seqdepth&lt;-rep(colnames(depth35)[1], nrow(depth35)) depth35[,1:10]&lt;-NULL depth35$seqdepth&lt;-str_remove_all(depth35$seqdepth, &quot;[depth]&quot;) depth35&lt;-merge(depth35, metadata, by=&quot;row.names&quot;) names(depth36)&lt;-sapply(strsplit(names(depth36), &quot;_iter&quot;), `[[`, 1) colnames(depth36)[1] depth36$seqdepth&lt;-rep(colnames(depth36)[1], nrow(depth36)) depth36[,1:10]&lt;-NULL depth36$seqdepth&lt;-str_remove_all(depth36$seqdepth, &quot;[depth]&quot;) depth36&lt;-merge(depth36, metadata, by=&quot;row.names&quot;) names(depth37)&lt;-sapply(strsplit(names(depth37), &quot;_iter&quot;), `[[`, 1) colnames(depth37)[1] depth37$seqdepth&lt;-rep(colnames(depth37)[1], nrow(depth37)) depth37[,1:10]&lt;-NULL depth37$seqdepth&lt;-str_remove_all(depth37$seqdepth, &quot;[depth]&quot;) depth37&lt;-merge(depth37, metadata, by=&quot;row.names&quot;) names(depth38)&lt;-sapply(strsplit(names(depth38), &quot;_iter&quot;), `[[`, 1) colnames(depth38)[1] depth38$seqdepth&lt;-rep(colnames(depth38)[1], nrow(depth38)) depth38[,1:10]&lt;-NULL depth38$seqdepth&lt;-str_remove_all(depth38$seqdepth, &quot;[depth]&quot;) depth38&lt;-merge(depth38, metadata, by=&quot;row.names&quot;) names(depth39)&lt;-sapply(strsplit(names(depth39), &quot;_iter&quot;), `[[`, 1) colnames(depth39)[1] depth39$seqdepth&lt;-rep(colnames(depth39)[1], nrow(depth39)) depth39[,1:10]&lt;-NULL depth39$seqdepth&lt;-str_remove_all(depth39$seqdepth, &quot;[depth]&quot;) depth39&lt;-merge(depth39, metadata, by=&quot;row.names&quot;) names(depth40)&lt;-sapply(strsplit(names(depth40), &quot;_iter&quot;), `[[`, 1) colnames(depth40)[1] depth40$seqdepth&lt;-rep(colnames(depth40)[1], nrow(depth40)) depth40[,1:10]&lt;-NULL depth40$seqdepth&lt;-str_remove_all(depth40$seqdepth, &quot;[depth]&quot;) depth40&lt;-merge(depth40, metadata, by=&quot;row.names&quot;) names(depth41)&lt;-sapply(strsplit(names(depth41), &quot;_iter&quot;), `[[`, 1) colnames(depth41)[1] depth41$seqdepth&lt;-rep(colnames(depth41)[1], nrow(depth41)) depth41[,1:10]&lt;-NULL depth41$seqdepth&lt;-str_remove_all(depth41$seqdepth, &quot;[depth]&quot;) depth41&lt;-merge(depth41, metadata, by=&quot;row.names&quot;) names(depth42)&lt;-sapply(strsplit(names(depth42), &quot;_iter&quot;), `[[`, 1) colnames(depth42)[1] depth42$seqdepth&lt;-rep(colnames(depth42)[1], nrow(depth42)) depth42[,1:10]&lt;-NULL depth42$seqdepth&lt;-str_remove_all(depth42$seqdepth, &quot;[depth]&quot;) depth42&lt;-merge(depth42, metadata, by=&quot;row.names&quot;) names(depth43)&lt;-sapply(strsplit(names(depth43), &quot;_iter&quot;), `[[`, 1) colnames(depth43)[1] depth43$seqdepth&lt;-rep(colnames(depth43)[1], nrow(depth43)) depth43[,1:10]&lt;-NULL depth43$seqdepth&lt;-str_remove_all(depth43$seqdepth, &quot;[depth]&quot;) depth43&lt;-merge(depth43, metadata, by=&quot;row.names&quot;) names(depth44)&lt;-sapply(strsplit(names(depth44), &quot;_iter&quot;), `[[`, 1) colnames(depth44)[1] depth44$seqdepth&lt;-rep(colnames(depth44)[1], nrow(depth44)) depth44[,1:10]&lt;-NULL depth44$seqdepth&lt;-str_remove_all(depth44$seqdepth, &quot;[depth]&quot;) depth44&lt;-merge(depth44, metadata, by=&quot;row.names&quot;) names(depth45)&lt;-sapply(strsplit(names(depth45), &quot;_iter&quot;), `[[`, 1) colnames(depth45)[1] depth45$seqdepth&lt;-rep(colnames(depth45)[1], nrow(depth45)) depth45[,1:10]&lt;-NULL depth45$seqdepth&lt;-str_remove_all(depth45$seqdepth, &quot;[depth]&quot;) depth45&lt;-merge(depth45, metadata, by=&quot;row.names&quot;) names(depth46)&lt;-sapply(strsplit(names(depth46), &quot;_iter&quot;), `[[`, 1) colnames(depth46)[1] depth46$seqdepth&lt;-rep(colnames(depth46)[1], nrow(depth46)) depth46[,1:10]&lt;-NULL depth46$seqdepth&lt;-str_remove_all(depth46$seqdepth, &quot;[depth]&quot;) depth46&lt;-merge(depth46, metadata, by=&quot;row.names&quot;) names(depth47)&lt;-sapply(strsplit(names(depth47), &quot;_iter&quot;), `[[`, 1) colnames(depth47)[1] depth47$seqdepth&lt;-rep(colnames(depth47)[1], nrow(depth47)) depth47[,1:10]&lt;-NULL depth47$seqdepth&lt;-str_remove_all(depth47$seqdepth, &quot;[depth]&quot;) depth47&lt;-merge(depth47, metadata, by=&quot;row.names&quot;) names(depth48)&lt;-sapply(strsplit(names(depth48), &quot;_iter&quot;), `[[`, 1) colnames(depth48)[1] depth48$seqdepth&lt;-rep(colnames(depth48)[1], nrow(depth48)) depth48[,1:10]&lt;-NULL depth48$seqdepth&lt;-str_remove_all(depth48$seqdepth, &quot;[depth]&quot;) depth48&lt;-merge(depth48, metadata, by=&quot;row.names&quot;) names(depth49)&lt;-sapply(strsplit(names(depth49), &quot;_iter&quot;), `[[`, 1) colnames(depth49)[1] depth49$seqdepth&lt;-rep(colnames(depth49)[1], nrow(depth49)) depth49[,1:10]&lt;-NULL depth49$seqdepth&lt;-str_remove_all(depth49$seqdepth, &quot;[depth]&quot;) depth49&lt;-merge(depth49, metadata, by=&quot;row.names&quot;) names(depth50)&lt;-sapply(strsplit(names(depth50), &quot;_iter&quot;), `[[`, 1) colnames(depth50)[1] depth50$seqdepth&lt;-rep(colnames(depth50)[1], nrow(depth50)) depth50[,1:10]&lt;-NULL depth50$seqdepth&lt;-str_remove_all(depth50$seqdepth, &quot;[depth]&quot;) depth50&lt;-merge(depth50, metadata, by=&quot;row.names&quot;) names(depth51)&lt;-sapply(strsplit(names(depth51), &quot;_iter&quot;), `[[`, 1) colnames(depth51)[1] depth51$seqdepth&lt;-rep(colnames(depth51)[1], nrow(depth51)) depth51[,1:10]&lt;-NULL depth51$seqdepth&lt;-str_remove_all(depth51$seqdepth, &quot;[depth]&quot;) depth51&lt;-merge(depth51, metadata, by=&quot;row.names&quot;) names(depth52)&lt;-sapply(strsplit(names(depth52), &quot;_iter&quot;), `[[`, 1) colnames(depth52)[1] depth52$seqdepth&lt;-rep(colnames(depth52)[1], nrow(depth52)) depth52[,1:10]&lt;-NULL depth52$seqdepth&lt;-str_remove_all(depth52$seqdepth, &quot;[depth]&quot;) depth52&lt;-merge(depth52, metadata, by=&quot;row.names&quot;) names(depth53)&lt;-sapply(strsplit(names(depth53), &quot;_iter&quot;), `[[`, 1) colnames(depth53)[1] depth53$seqdepth&lt;-rep(colnames(depth53)[1], nrow(depth53)) depth53[,1:10]&lt;-NULL depth53$seqdepth&lt;-str_remove_all(depth53$seqdepth, &quot;[depth]&quot;) depth53&lt;-merge(depth53, metadata, by=&quot;row.names&quot;) names(depth54)&lt;-sapply(strsplit(names(depth54), &quot;_iter&quot;), `[[`, 1) colnames(depth54)[1] depth54$seqdepth&lt;-rep(colnames(depth54)[1], nrow(depth54)) depth54[,1:10]&lt;-NULL depth54$seqdepth&lt;-str_remove_all(depth54$seqdepth, &quot;[depth]&quot;) depth54&lt;-merge(depth54, metadata, by=&quot;row.names&quot;) names(depth55)&lt;-sapply(strsplit(names(depth55), &quot;_iter&quot;), `[[`, 1) colnames(depth55)[1] depth55$seqdepth&lt;-rep(colnames(depth55)[1], nrow(depth55)) depth55[,1:10]&lt;-NULL depth55$seqdepth&lt;-str_remove_all(depth55$seqdepth, &quot;[depth]&quot;) depth55&lt;-merge(depth55, metadata, by=&quot;row.names&quot;) names(depth56)&lt;-sapply(strsplit(names(depth56), &quot;_iter&quot;), `[[`, 1) colnames(depth56)[1] depth56$seqdepth&lt;-rep(colnames(depth56)[1], nrow(depth56)) depth56[,1:10]&lt;-NULL depth56$seqdepth&lt;-str_remove_all(depth56$seqdepth, &quot;[depth]&quot;) depth56&lt;-merge(depth56, metadata, by=&quot;row.names&quot;) names(depth57)&lt;-sapply(strsplit(names(depth57), &quot;_iter&quot;), `[[`, 1) colnames(depth57)[1] depth57$seqdepth&lt;-rep(colnames(depth57)[1], nrow(depth57)) depth57[,1:10]&lt;-NULL depth57$seqdepth&lt;-str_remove_all(depth57$seqdepth, &quot;[depth]&quot;) depth57&lt;-merge(depth57, metadata, by=&quot;row.names&quot;) names(depth58)&lt;-sapply(strsplit(names(depth58), &quot;_iter&quot;), `[[`, 1) colnames(depth58)[1] depth58$seqdepth&lt;-rep(colnames(depth58)[1], nrow(depth58)) depth58[,1:10]&lt;-NULL depth58$seqdepth&lt;-str_remove_all(depth58$seqdepth, &quot;[depth]&quot;) depth58&lt;-merge(depth58, metadata, by=&quot;row.names&quot;) names(depth59)&lt;-sapply(strsplit(names(depth59), &quot;_iter&quot;), `[[`, 1) colnames(depth59)[1] depth59$seqdepth&lt;-rep(colnames(depth59)[1], nrow(depth59)) depth59[,1:10]&lt;-NULL depth59$seqdepth&lt;-str_remove_all(depth59$seqdepth, &quot;[depth]&quot;) depth59&lt;-merge(depth59, metadata, by=&quot;row.names&quot;) names(depth60)&lt;-sapply(strsplit(names(depth60), &quot;_iter&quot;), `[[`, 1) colnames(depth60)[1] depth60$seqdepth&lt;-rep(colnames(depth60)[1], nrow(depth60)) depth60[,1:10]&lt;-NULL depth60$seqdepth&lt;-str_remove_all(depth60$seqdepth, &quot;[depth]&quot;) depth60&lt;-merge(depth60, metadata, by=&quot;row.names&quot;) names(depth61)&lt;-sapply(strsplit(names(depth61), &quot;_iter&quot;), `[[`, 1) colnames(depth61)[1] depth61$seqdepth&lt;-rep(colnames(depth61)[1], nrow(depth61)) depth61[,1:10]&lt;-NULL depth61$seqdepth&lt;-str_remove_all(depth61$seqdepth, &quot;[depth]&quot;) depth61&lt;-merge(depth61, metadata, by=&quot;row.names&quot;) names(depth62)&lt;-sapply(strsplit(names(depth62), &quot;_iter&quot;), `[[`, 1) colnames(depth62)[1] depth62$seqdepth&lt;-rep(colnames(depth62)[1], nrow(depth62)) depth62[,1:10]&lt;-NULL depth62$seqdepth&lt;-str_remove_all(depth62$seqdepth, &quot;[depth]&quot;) depth62&lt;-merge(depth62, metadata, by=&quot;row.names&quot;) names(depth63)&lt;-sapply(strsplit(names(depth63), &quot;_iter&quot;), `[[`, 1) colnames(depth63)[1] depth63$seqdepth&lt;-rep(colnames(depth63)[1], nrow(depth63)) depth63[,1:10]&lt;-NULL depth63$seqdepth&lt;-str_remove_all(depth63$seqdepth, &quot;[depth]&quot;) depth63&lt;-merge(depth63, metadata, by=&quot;row.names&quot;) names(depth64)&lt;-sapply(strsplit(names(depth64), &quot;_iter&quot;), `[[`, 1) colnames(depth64)[1] depth64$seqdepth&lt;-rep(colnames(depth64)[1], nrow(depth64)) depth64[,1:10]&lt;-NULL depth64$seqdepth&lt;-str_remove_all(depth64$seqdepth, &quot;[depth]&quot;) depth64&lt;-merge(depth64, metadata, by=&quot;row.names&quot;) names(depth65)&lt;-sapply(strsplit(names(depth65), &quot;_iter&quot;), `[[`, 1) colnames(depth65)[1] depth65$seqdepth&lt;-rep(colnames(depth65)[1], nrow(depth65)) depth65[,1:10]&lt;-NULL depth65$seqdepth&lt;-str_remove_all(depth65$seqdepth, &quot;[depth]&quot;) depth65&lt;-merge(depth65, metadata, by=&quot;row.names&quot;) names(depth66)&lt;-sapply(strsplit(names(depth66), &quot;_iter&quot;), `[[`, 1) colnames(depth66)[1] depth66$seqdepth&lt;-rep(colnames(depth66)[1], nrow(depth66)) depth66[,1:10]&lt;-NULL depth66$seqdepth&lt;-str_remove_all(depth66$seqdepth, &quot;[depth]&quot;) depth66&lt;-merge(depth66, metadata, by=&quot;row.names&quot;) names(depth67)&lt;-sapply(strsplit(names(depth67), &quot;_iter&quot;), `[[`, 1) colnames(depth67)[1] depth67$seqdepth&lt;-rep(colnames(depth67)[1], nrow(depth67)) depth67[,1:10]&lt;-NULL depth67$seqdepth&lt;-str_remove_all(depth67$seqdepth, &quot;[depth]&quot;) depth67&lt;-merge(depth67, metadata, by=&quot;row.names&quot;) names(depth68)&lt;-sapply(strsplit(names(depth68), &quot;_iter&quot;), `[[`, 1) colnames(depth68)[1] depth68$seqdepth&lt;-rep(colnames(depth68)[1], nrow(depth68)) depth68[,1:10]&lt;-NULL depth68$seqdepth&lt;-str_remove_all(depth68$seqdepth, &quot;[depth]&quot;) depth68&lt;-merge(depth68, metadata, by=&quot;row.names&quot;) names(depth69)&lt;-sapply(strsplit(names(depth69), &quot;_iter&quot;), `[[`, 1) colnames(depth69)[1] depth69$seqdepth&lt;-rep(colnames(depth69)[1], nrow(depth69)) depth69[,1:10]&lt;-NULL depth69$seqdepth&lt;-str_remove_all(depth69$seqdepth, &quot;[depth]&quot;) depth69&lt;-merge(depth69, metadata, by=&quot;row.names&quot;) names(depth70)&lt;-sapply(strsplit(names(depth70), &quot;_iter&quot;), `[[`, 1) colnames(depth70)[1] depth70$seqdepth&lt;-rep(colnames(depth70)[1], nrow(depth70)) depth70[,1:10]&lt;-NULL depth70$seqdepth&lt;-str_remove_all(depth70$seqdepth, &quot;[depth]&quot;) depth70&lt;-merge(depth70, metadata, by=&quot;row.names&quot;) names(depth71)&lt;-sapply(strsplit(names(depth71), &quot;_iter&quot;), `[[`, 1) colnames(depth71)[1] depth71$seqdepth&lt;-rep(colnames(depth71)[1], nrow(depth71)) depth71[,1:10]&lt;-NULL depth71$seqdepth&lt;-str_remove_all(depth71$seqdepth, &quot;[depth]&quot;) depth71&lt;-merge(depth71, metadata, by=&quot;row.names&quot;) names(depth72)&lt;-sapply(strsplit(names(depth72), &quot;_iter&quot;), `[[`, 1) colnames(depth72)[1] depth72$seqdepth&lt;-rep(colnames(depth72)[1], nrow(depth72)) depth72[,1:10]&lt;-NULL depth72$seqdepth&lt;-str_remove_all(depth72$seqdepth, &quot;[depth]&quot;) depth72&lt;-merge(depth72, metadata, by=&quot;row.names&quot;) names(depth73)&lt;-sapply(strsplit(names(depth73), &quot;_iter&quot;), `[[`, 1) colnames(depth73)[1] depth73$seqdepth&lt;-rep(colnames(depth73)[1], nrow(depth73)) depth73[,1:10]&lt;-NULL depth73$seqdepth&lt;-str_remove_all(depth73$seqdepth, &quot;[depth]&quot;) depth73&lt;-merge(depth73, metadata, by=&quot;row.names&quot;) names(depth74)&lt;-sapply(strsplit(names(depth74), &quot;_iter&quot;), `[[`, 1) colnames(depth74)[1] depth74$seqdepth&lt;-rep(colnames(depth74)[1], nrow(depth74)) depth74[,1:10]&lt;-NULL depth74$seqdepth&lt;-str_remove_all(depth74$seqdepth, &quot;[depth]&quot;) depth74&lt;-merge(depth74, metadata, by=&quot;row.names&quot;) names(depth75)&lt;-sapply(strsplit(names(depth75), &quot;_iter&quot;), `[[`, 1) colnames(depth75)[1] depth75$seqdepth&lt;-rep(colnames(depth75)[1], nrow(depth75)) depth75[,1:10]&lt;-NULL depth75$seqdepth&lt;-str_remove_all(depth75$seqdepth, &quot;[depth]&quot;) depth75&lt;-merge(depth75, metadata, by=&quot;row.names&quot;) names(depth76)&lt;-sapply(strsplit(names(depth76), &quot;_iter&quot;), `[[`, 1) colnames(depth76)[1] depth76$seqdepth&lt;-rep(colnames(depth76)[1], nrow(depth76)) depth76[,1:10]&lt;-NULL depth76$seqdepth&lt;-str_remove_all(depth76$seqdepth, &quot;[depth]&quot;) depth76&lt;-merge(depth76, metadata, by=&quot;row.names&quot;) names(depth77)&lt;-sapply(strsplit(names(depth77), &quot;_iter&quot;), `[[`, 1) colnames(depth77)[1] depth77$seqdepth&lt;-rep(colnames(depth77)[1], nrow(depth77)) depth77[,1:10]&lt;-NULL depth77$seqdepth&lt;-str_remove_all(depth77$seqdepth, &quot;[depth]&quot;) depth77&lt;-merge(depth77, metadata, by=&quot;row.names&quot;) names(depth78)&lt;-sapply(strsplit(names(depth78), &quot;_iter&quot;), `[[`, 1) colnames(depth78)[1] depth78$seqdepth&lt;-rep(colnames(depth78)[1], nrow(depth78)) depth78[,1:10]&lt;-NULL depth78$seqdepth&lt;-str_remove_all(depth78$seqdepth, &quot;[depth]&quot;) depth78&lt;-merge(depth78, metadata, by=&quot;row.names&quot;) names(depth79)&lt;-sapply(strsplit(names(depth79), &quot;_iter&quot;), `[[`, 1) colnames(depth79)[1] depth79$seqdepth&lt;-rep(colnames(depth79)[1], nrow(depth79)) depth79[,1:10]&lt;-NULL depth79$seqdepth&lt;-str_remove_all(depth79$seqdepth, &quot;[depth]&quot;) depth79&lt;-merge(depth79, metadata, by=&quot;row.names&quot;) names(depth80)&lt;-sapply(strsplit(names(depth80), &quot;_iter&quot;), `[[`, 1) colnames(depth80)[1] depth80$seqdepth&lt;-rep(colnames(depth80)[1], nrow(depth80)) depth80[,1:10]&lt;-NULL depth80$seqdepth&lt;-str_remove_all(depth80$seqdepth, &quot;[depth]&quot;) depth80&lt;-merge(depth80, metadata, by=&quot;row.names&quot;) names(depth81)&lt;-sapply(strsplit(names(depth81), &quot;_iter&quot;), `[[`, 1) colnames(depth81)[1] depth81$seqdepth&lt;-rep(colnames(depth81)[1], nrow(depth81)) depth81[,1:10]&lt;-NULL depth81$seqdepth&lt;-str_remove_all(depth81$seqdepth, &quot;[depth]&quot;) depth81&lt;-merge(depth81, metadata, by=&quot;row.names&quot;) names(depth82)&lt;-sapply(strsplit(names(depth82), &quot;_iter&quot;), `[[`, 1) colnames(depth82)[1] depth82$seqdepth&lt;-rep(colnames(depth82)[1], nrow(depth82)) depth82[,1:10]&lt;-NULL depth82$seqdepth&lt;-str_remove_all(depth82$seqdepth, &quot;[depth]&quot;) depth82&lt;-merge(depth82, metadata, by=&quot;row.names&quot;) names(depth83)&lt;-sapply(strsplit(names(depth83), &quot;_iter&quot;), `[[`, 1) colnames(depth83)[1] depth83$seqdepth&lt;-rep(colnames(depth83)[1], nrow(depth83)) depth83[,1:10]&lt;-NULL depth83$seqdepth&lt;-str_remove_all(depth83$seqdepth, &quot;[depth]&quot;) depth83&lt;-merge(depth83, metadata, by=&quot;row.names&quot;) names(depth84)&lt;-sapply(strsplit(names(depth84), &quot;_iter&quot;), `[[`, 1) colnames(depth84)[1] depth84$seqdepth&lt;-rep(colnames(depth84)[1], nrow(depth84)) depth84[,1:10]&lt;-NULL depth84$seqdepth&lt;-str_remove_all(depth84$seqdepth, &quot;[depth]&quot;) depth84&lt;-merge(depth84, metadata, by=&quot;row.names&quot;) names(depth85)&lt;-sapply(strsplit(names(depth85), &quot;_iter&quot;), `[[`, 1) colnames(depth85)[1] depth85$seqdepth&lt;-rep(colnames(depth85)[1], nrow(depth85)) depth85[,1:10]&lt;-NULL depth85$seqdepth&lt;-str_remove_all(depth85$seqdepth, &quot;[depth]&quot;) depth85&lt;-merge(depth85, metadata, by=&quot;row.names&quot;) names(depth86)&lt;-sapply(strsplit(names(depth86), &quot;_iter&quot;), `[[`, 1) colnames(depth86)[1] depth86$seqdepth&lt;-rep(colnames(depth86)[1], nrow(depth86)) depth86[,1:10]&lt;-NULL depth86$seqdepth&lt;-str_remove_all(depth86$seqdepth, &quot;[depth]&quot;) depth86&lt;-merge(depth86, metadata, by=&quot;row.names&quot;) names(depth87)&lt;-sapply(strsplit(names(depth87), &quot;_iter&quot;), `[[`, 1) colnames(depth87)[1] depth87$seqdepth&lt;-rep(colnames(depth87)[1], nrow(depth87)) depth87[,1:10]&lt;-NULL depth87$seqdepth&lt;-str_remove_all(depth87$seqdepth, &quot;[depth]&quot;) depth87&lt;-merge(depth87, metadata, by=&quot;row.names&quot;) names(depth88)&lt;-sapply(strsplit(names(depth88), &quot;_iter&quot;), `[[`, 1) colnames(depth88)[1] depth88$seqdepth&lt;-rep(colnames(depth88)[1], nrow(depth88)) depth88[,1:10]&lt;-NULL depth88$seqdepth&lt;-str_remove_all(depth88$seqdepth, &quot;[depth]&quot;) depth88&lt;-merge(depth88, metadata, by=&quot;row.names&quot;) names(depth89)&lt;-sapply(strsplit(names(depth89), &quot;_iter&quot;), `[[`, 1) colnames(depth89)[1] depth89$seqdepth&lt;-rep(colnames(depth89)[1], nrow(depth89)) depth89[,1:10]&lt;-NULL depth89$seqdepth&lt;-str_remove_all(depth89$seqdepth, &quot;[depth]&quot;) depth89&lt;-merge(depth89, metadata, by=&quot;row.names&quot;) names(depth90)&lt;-sapply(strsplit(names(depth90), &quot;_iter&quot;), `[[`, 1) colnames(depth90)[1] depth90$seqdepth&lt;-rep(colnames(depth90)[1], nrow(depth90)) depth90[,1:10]&lt;-NULL depth90$seqdepth&lt;-str_remove_all(depth90$seqdepth, &quot;[depth]&quot;) depth90&lt;-merge(depth90, metadata, by=&quot;row.names&quot;) names(depth91)&lt;-sapply(strsplit(names(depth91), &quot;_iter&quot;), `[[`, 1) colnames(depth91)[1] depth91$seqdepth&lt;-rep(colnames(depth91)[1], nrow(depth91)) depth91[,1:10]&lt;-NULL depth91$seqdepth&lt;-str_remove_all(depth91$seqdepth, &quot;[depth]&quot;) depth91&lt;-merge(depth91, metadata, by=&quot;row.names&quot;) names(depth92)&lt;-sapply(strsplit(names(depth92), &quot;_iter&quot;), `[[`, 1) colnames(depth92)[1] depth92$seqdepth&lt;-rep(colnames(depth92)[1], nrow(depth92)) depth92[,1:10]&lt;-NULL depth92$seqdepth&lt;-str_remove_all(depth92$seqdepth, &quot;[depth]&quot;) depth92&lt;-merge(depth92, metadata, by=&quot;row.names&quot;) names(depth93)&lt;-sapply(strsplit(names(depth93), &quot;_iter&quot;), `[[`, 1) colnames(depth93)[1] depth93$seqdepth&lt;-rep(colnames(depth93)[1], nrow(depth93)) depth93[,1:10]&lt;-NULL depth93$seqdepth&lt;-str_remove_all(depth93$seqdepth, &quot;[depth]&quot;) depth93&lt;-merge(depth93, metadata, by=&quot;row.names&quot;) names(depth94)&lt;-sapply(strsplit(names(depth94), &quot;_iter&quot;), `[[`, 1) colnames(depth94)[1] depth94$seqdepth&lt;-rep(colnames(depth94)[1], nrow(depth94)) depth94[,1:10]&lt;-NULL depth94$seqdepth&lt;-str_remove_all(depth94$seqdepth, &quot;[depth]&quot;) depth94&lt;-merge(depth94, metadata, by=&quot;row.names&quot;) names(depth95)&lt;-sapply(strsplit(names(depth95), &quot;_iter&quot;), `[[`, 1) colnames(depth95)[1] depth95$seqdepth&lt;-rep(colnames(depth95)[1], nrow(depth95)) depth95[,1:10]&lt;-NULL depth95$seqdepth&lt;-str_remove_all(depth95$seqdepth, &quot;[depth]&quot;) depth95&lt;-merge(depth95, metadata, by=&quot;row.names&quot;) names(depth96)&lt;-sapply(strsplit(names(depth96), &quot;_iter&quot;), `[[`, 1) colnames(depth96)[1] depth96$seqdepth&lt;-rep(colnames(depth96)[1], nrow(depth96)) depth96[,1:10]&lt;-NULL depth96$seqdepth&lt;-str_remove_all(depth96$seqdepth, &quot;[depth]&quot;) depth96&lt;-merge(depth96, metadata, by=&quot;row.names&quot;) names(depth97)&lt;-sapply(strsplit(names(depth97), &quot;_iter&quot;), `[[`, 1) colnames(depth97)[1] depth97$seqdepth&lt;-rep(colnames(depth97)[1], nrow(depth97)) depth97[,1:10]&lt;-NULL depth97$seqdepth&lt;-str_remove_all(depth97$seqdepth, &quot;[depth]&quot;) depth97&lt;-merge(depth97, metadata, by=&quot;row.names&quot;) names(depth98)&lt;-sapply(strsplit(names(depth98), &quot;_iter&quot;), `[[`, 1) colnames(depth98)[1] depth98$seqdepth&lt;-rep(colnames(depth98)[1], nrow(depth98)) depth98[,1:10]&lt;-NULL depth98$seqdepth&lt;-str_remove_all(depth98$seqdepth, &quot;[depth]&quot;) depth98&lt;-merge(depth98, metadata, by=&quot;row.names&quot;) names(depth99)&lt;-sapply(strsplit(names(depth99), &quot;_iter&quot;), `[[`, 1) colnames(depth99)[1] depth99$seqdepth&lt;-rep(colnames(depth99)[1], nrow(depth99)) depth99[,1:10]&lt;-NULL depth99$seqdepth&lt;-str_remove_all(depth99$seqdepth, &quot;[depth]&quot;) depth99&lt;-merge(depth99, metadata, by=&quot;row.names&quot;) names(depth100)&lt;-sapply(strsplit(names(depth100), &quot;_iter&quot;), `[[`, 1) colnames(depth100)[1] depth100$seqdepth&lt;-rep(colnames(depth100)[1], nrow(depth100)) depth100[,1:10]&lt;-NULL depth100$seqdepth&lt;-str_remove_all(depth100$seqdepth, &quot;[depth]&quot;) depth100&lt;-merge(depth100, metadata, by=&quot;row.names&quot;) d1&lt;-rbind(depth1,depth2) d2&lt;-rbind(d1,depth3) d3&lt;-rbind(d2,depth4) d4&lt;-rbind(d3,depth5) d5&lt;-rbind(d4,depth6) d6&lt;-rbind(d5,depth7) d7&lt;-rbind(d6,depth8) d8&lt;-rbind(d7,depth9) d9&lt;-rbind(d8,depth10) d10&lt;-rbind(d9,depth11) d11&lt;-rbind(d10,depth12) d12&lt;-rbind(d11,depth13) d13&lt;-rbind(d12,depth14) d14&lt;-rbind(d13,depth15) d15&lt;-rbind(d14,depth16) d16&lt;-rbind(d15,depth17) d17&lt;-rbind(d16,depth18) d18&lt;-rbind(d17,depth19) d19&lt;-rbind(d18,depth20) d20&lt;-rbind(d19,depth21) d21&lt;-rbind(d20,depth22) d22&lt;-rbind(d21,depth23) d23&lt;-rbind(d22,depth24) d24&lt;-rbind(d23,depth25) d25&lt;-rbind(d24,depth26) d26&lt;-rbind(d25,depth27) d27&lt;-rbind(d26,depth28) d28&lt;-rbind(d27,depth29) d29&lt;-rbind(d28,depth30) d30&lt;-rbind(d29,depth31) d31&lt;-rbind(d30,depth32) d32&lt;-rbind(d31,depth33) d33&lt;-rbind(d32,depth34) d34&lt;-rbind(d33,depth35) d35&lt;-rbind(d34,depth36) d36&lt;-rbind(d35,depth37) d37&lt;-rbind(d36,depth38) d38&lt;-rbind(d37,depth39) d39&lt;-rbind(d38,depth40) d40&lt;-rbind(d39,depth41) d41&lt;-rbind(d40,depth42) d42&lt;-rbind(d41,depth43) d43&lt;-rbind(d42,depth44) d44&lt;-rbind(d43,depth45) d45&lt;-rbind(d44,depth46) d46&lt;-rbind(d45,depth47) d47&lt;-rbind(d46,depth48) d48&lt;-rbind(d47,depth49) d49&lt;-rbind(d48,depth50) d50&lt;-rbind(d49,depth51) d51&lt;-rbind(d50,depth52) d52&lt;-rbind(d51,depth53) d53&lt;-rbind(d52,depth54) d54&lt;-rbind(d53,depth55) d55&lt;-rbind(d54,depth56) d56&lt;-rbind(d55,depth57) d57&lt;-rbind(d56,depth58) d58&lt;-rbind(d57,depth59) d59&lt;-rbind(d58,depth60) d60&lt;-rbind(d59,depth61) d61&lt;-rbind(d60,depth62) d62&lt;-rbind(d61,depth63) d63&lt;-rbind(d62,depth64) d64&lt;-rbind(d63,depth65) d65&lt;-rbind(d64,depth66) d66&lt;-rbind(d65,depth67) d67&lt;-rbind(d66,depth68) d68&lt;-rbind(d67,depth69) d69&lt;-rbind(d68,depth70) d70&lt;-rbind(d69,depth71) d71&lt;-rbind(d70,depth72) d72&lt;-rbind(d71,depth73) d73&lt;-rbind(d72,depth74) d74&lt;-rbind(d73,depth75) d75&lt;-rbind(d74,depth76) d76&lt;-rbind(d75,depth77) d77&lt;-rbind(d76,depth78) d78&lt;-rbind(d77,depth79) d79&lt;-rbind(d78,depth80) d80&lt;-rbind(d79,depth81) d81&lt;-rbind(d80,depth82) d82&lt;-rbind(d81,depth83) d83&lt;-rbind(d82,depth84) d84&lt;-rbind(d83,depth85) d85&lt;-rbind(d84,depth86) d86&lt;-rbind(d85,depth87) d87&lt;-rbind(d86,depth88) d88&lt;-rbind(d87,depth89) d89&lt;-rbind(d88,depth90) d90&lt;-rbind(d89,depth91) d91&lt;-rbind(d90,depth92) d92&lt;-rbind(d91,depth93) d93&lt;-rbind(d92,depth94) d94&lt;-rbind(d93,depth95) d95&lt;-rbind(d94,depth96) d96&lt;-rbind(d95,depth97) d97&lt;-rbind(d96,depth98) d98&lt;-rbind(d97,depth99) d99&lt;-rbind(d98,depth100) names(d99)[1] &lt;- &quot;SampleID&quot; names(d99)[names(d99) == &quot;mean&quot;] &lt;- &quot;observedASVs&quot; d99$seqdepth&lt;-as.numeric(d99$seqdepth) write.table(d99, file = &quot;raref.txt&quot;,sep=&quot;\\t&quot;,col.names= T, row.names=F) quit(&quot;no&quot;) sed &#39;s/&quot;//g&#39; raref.txt &gt; raref2.txt R list.of.packages &lt;- c(&quot;ggplot2&quot;,&quot;gridExtra&quot;) new.packages &lt;- list.of.packages[!(list.of.packages %in% installed.packages()[,&quot;Package&quot;])] if(length(new.packages)) install.packages(new.packages, repos=&#39;http://cran.us.r-project.org&#39;) library(ggplot2) library(gridExtra) sub&lt;- read.table(file=&quot;raref2.txt&quot;, header =T) comp&lt;- read.table(file=&quot;raref_sub2.txt&quot;, header =T) pdf(file=&quot;rarefaction.pdf&quot;, height= 14, width= 14) p1&lt;-ggplot(data=comp, aes(x=seqdepth, y=observedASVs, group=SampleID, color=sampletype)) + geom_line(alpha=0.3) + labs(x = &quot;Sequencing Depth&quot;, y=&quot;Observed ASVs (average per sample)&quot;) + scale_color_manual(values=c(&#39;#a0bed8ff&#39;,&#39;#E69F00&#39;,&#39;#607281&#39;))+ geom_vline(xintercept = max(comp$seqdepth), linetype=&quot;dotted&quot;, size=1.5)+ theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = &quot;grey&quot;, size = 1.5, linetype = &quot;solid&quot;), panel.background = element_rect(fill = &quot;#ffffff&quot;,colour = NA), plot.background = element_rect(fill = &#39;#ffffff&#39;), legend.title= element_blank(), legend.text = element_text(color = &quot;black&quot;, size = 18), axis.title.x = element_text(color=&quot;black&quot;, size=20, face=&quot;bold&quot;), axis.text.x = element_text(face=&quot;plain&quot;, color=&quot;black&quot;,size=18, angle=0), axis.title.y = element_text(color=&quot;black&quot;, size=20, face=&quot;bold&quot;), axis.text.y = element_text(face=&quot;plain&quot;, color=&quot;black&quot;,size=18, angle=0), legend.key=element_rect(fill=&#39;white&#39;), legend.key.size = unit(3,&quot;line&quot;)) p2&lt;-ggplot(data=sub, aes(x=seqdepth, y=observedASVs, group=SampleID, color=sampletype)) + geom_line(alpha=0.3) + labs(x = &quot;Number of sequences&quot;, y=&quot;Observed ASVs (average per sample)&quot;) + scale_color_manual(values=c(&#39;#a0bed8ff&#39;,&#39;#E69F00&#39;,&#39;#607281&#39;))+ theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = &quot;grey&quot;, size = 1.5, linetype = &quot;solid&quot;), panel.background = element_rect(fill = &quot;#ffffff&quot;,colour = NA), plot.background = element_rect(fill = &#39;#ffffff&#39;), legend.title= element_blank(), legend.text = element_text(color = &quot;black&quot;, size = 18), axis.title.x = element_text(color=&quot;black&quot;, size=20, face=&quot;bold&quot;), axis.text.x = element_text(face=&quot;plain&quot;, color=&quot;black&quot;,size=18, angle=0), axis.title.y = element_text(color=&quot;black&quot;, size=20, face=&quot;bold&quot;), axis.text.y = element_text(face=&quot;plain&quot;, color=&quot;black&quot;,size=18, angle=0), legend.key=element_rect(fill=&#39;white&#39;), legend.key.size = unit(3,&quot;line&quot;)) grid.arrange(p2, p1, nrow=2) dev.off() quit(&quot;no&quot;) rm -r -f -- - max.txt rm -r -f -- - observed_otus.txt rm -r -f -- - observed_otus2.txt rm -r -f -- - raref2.txt rm -r -f -- - raref.txt rm -r -f -- - observed_otusN.txt rm -r -f -- - raref_sub2.txt rm -r -f -- - raref_sub.txt cd $PWDa/dada2/core-metrics-results/ rm -r -f -- - -d */ 0.11 Export clustering dendrogram qiime diversity beta-rarefaction \\ --i-table $PWDa/dada2/dada2-tablenochloroplastsmitochondriaUnassigned$var.qza \\ --i-phylogeny $PWDa/dada2/rooted-tree.qza \\ --p-sampling-depth $var \\ --p-metric weighted_unifrac \\ --p-clustering-method upgma \\ --m-metadata-file $PWDa/metadataV34.txt \\ --o-visualization $PWDa/dada2/core-metrics-results/beta-rarefaction-upgma.qzv cd $PWDa/ mkdir R cd $PWDa/dada2/core-metrics-results unzip beta-rarefaction-upgma.qzv cd &quot;$(\\ls -1dt ./*/ | head -n 1)/data&quot; cp sample-clustering-upgma.tre $PWDa/R/sample-clustering-upgma.tre cd $PWDa/dada2/core-metrics-results rm -r -f -- - -d */ 0.12 Data crunching for format compatibility 0.12.1 Export ASV Table cd $PWDa/dada2/ cp -r &quot;dada2-tablenochloroplastsmitochondriaUnassigned$var.qza&quot; $PWDa/R/ cd $PWDa/R/ unzip dada2-tablenochloroplastsmitochondriaUnassigned$var.qza cd &quot;$(\\ls -1dt ./*/ | head -n 1)/data&quot; biom convert -i feature-table.biom -o table.tsv --to-tsv sed &#39;1d&#39; table.tsv &gt; tmpfile; mv tmpfile table.txt sed -e &#39;1s/#OTU ID/Feature ID/&#39; table.txt &gt; tmpfile; mv tmpfile tableforR.txt cp -r &quot;tableforR.txt&quot; $PWDa/R/ cd $PWDa/R/ echo &quot;Feature ID&quot; | awk &#39;{ gsub (&quot; &quot;, &quot;&quot;, $0); print}&#39; tableforR.txt &gt; tableforR2.txt rm -r -f -- - tableforR.txt mv tableforR2.txt tableforR.txt 0.12.2 Export Taxonomy Table qiime tools export \\ --input-path $PWDa/dada2/Silva138V3V4-taxonomy-dada2.qza \\ --output-path $PWDa/R/taxonomy cd $PWDa/R/taxonomy/ awk -F, -v OFS=&quot;,&quot; &#39;{gsub(/ /,&quot;&quot;,$Taxon)}1&#39; taxonomy.tsv &gt; tmpfile; mv tmpfile taxonomy.txt R list.of.packages &lt;- c(&quot;stringr&quot;, &quot;plyr&quot;) new.packages &lt;- list.of.packages[!(list.of.packages %in% installed.packages()[,&quot;Package&quot;])] if(length(new.packages)) install.packages(new.packages, repos=&#39;http://cran.us.r-project.org&#39;) library(stringr) library(plyr) taxonomy&lt;-read.table(file =&quot;taxonomy.txt&quot;, header = T, sep=&quot;\\t&quot;) datnew&lt;-str_split_fixed(taxonomy$Taxon, &quot;;&quot;, 7) d=as.data.frame(datnew) d$V1 &lt;- sub(&quot;^$&quot;, &quot;__&quot;, d$V1) d$V2 &lt;- sub(&quot;^$&quot;, &quot;__&quot;, d$V2) d$V3 &lt;- sub(&quot;^$&quot;, &quot;__&quot;, d$V3) d$V4 &lt;- sub(&quot;^$&quot;, &quot;__&quot;, d$V4) d$V5 &lt;- sub(&quot;^$&quot;, &quot;__&quot;, d$V5) d$V6 &lt;- sub(&quot;^$&quot;, &quot;__&quot;, d$V6) d$V7 &lt;- sub(&quot;^$&quot;, &quot;__&quot;, d$V7) a&lt;- paste(d$V1,d$V2,d$V3,d$V4,d$V5,d$V6,d$V7,sep=&quot;;&quot;) b&lt;- cbind(taxonomy,a) b&lt;- cbind(b,d$V1,d$V2,d$V3,d$V4,d$V5,d$V6,d$V7) b$Taxon&lt;-NULL b&lt;-rename(b, c(&quot;a&quot;=&quot;Taxon&quot;)) b&lt;-b[!grepl(&quot;*Chloroplast*&quot;, b$Taxon),] b&lt;-b[!grepl(&quot;*Mitochondria*&quot;, b$Taxon),] b&lt;-b[!grepl(&quot;*Unassigned*&quot;, b$Taxon),] b&lt;-rename(b, c(&quot;d$V1&quot;=&quot;kingdom&quot;,&quot;d$V2&quot;=&quot;phylum&quot;,&quot;d$V3&quot;=&quot;class&quot;,&quot;d$V4&quot;=&quot;order&quot;,&quot;d$V5&quot;=&quot;family&quot;,&quot;d$V6&quot;=&quot;genus&quot;,&quot;d$V7&quot;=&quot;species&quot;)) write.table(b, file = &quot;taxonomyforR.txt&quot;,sep=&quot;\\t&quot;,col.names= T, row.names=F) quit(&quot;no&quot;) cp -r &quot;taxonomyforR.txt&quot; $PWDa/R/ cd $PWDa/R/ 0.12.3 Export Metadata file qiime taxa collapse \\ --i-table $PWDa/dada2/dada2-tablenochloroplastsmitochondriaUnassigned$var.qza \\ --i-taxonomy $PWDa/dada2/Silva138V3V4-taxonomy-dada2.qza \\ --p-level 7 \\ --output-dir taxtable qiime tools export \\ --input-path $PWDa/R/taxtable/collapsed_table.qza \\ --output-path $PWDa/R/taxtable/collapsed_table cd $PWDa/R/taxtable/collapsed_table/ biom convert -i feature-table.biom -o table.tsv --to-tsv sed &#39;1d&#39; table.tsv &gt; tmpfile; mv tmpfile table.txt cut -d$&#39;\\t&#39; -f2- table.txt &gt; table2.txt R data&lt;-read.table(file =&quot;table2.txt&quot;, header = F) select&lt;-data[1,] turn&lt;-t(select) write.table(turn, file = &quot;list_of_remaining_samples.txt&quot;,sep=&quot;\\t&quot;,col.names= T, row.names=F) quit(&quot;no&quot;) cp -r &quot;list_of_remaining_samples.txt&quot; $PWDa/R/ cd $PWDa/ cp -r &quot;metadataV34.txt&quot; $PWDa/R/ cd $PWDa/R/ awk -F, -v OFS=&quot;,&quot; &#39;{gsub(/ /,&quot;&quot;)}1&#39; metadataV34.txt &gt; tmpfile; mv tmpfile metadataV34.txt awk -F, -v OFS=&quot;,&quot; &#39;{gsub(/#/,&quot;&quot;)}1&#39; metadataV34.txt &gt; tmpfile; mv tmpfile metadataV34.txt R list.of.packages &lt;- c(&quot;stringr&quot;, &quot;plyr&quot;) new.packages &lt;- list.of.packages[!(list.of.packages %in% installed.packages()[,&quot;Package&quot;])] if(length(new.packages)) install.packages(new.packages, repos=&#39;http://cran.us.r-project.org&#39;) library(stringr) library(plyr) metadata&lt;-read.table(file =&quot;list_of_remaining_samples.txt&quot;, header = T, sep=&quot;\\t&quot;) metadata2&lt;-read.table(file =&quot;metadataV34.txt&quot;, header = T, sep=&quot;\\t&quot;) names(metadata)[1] &lt;- &quot;SampleID&quot; data&lt;-merge(metadata, metadata2, by=&quot;SampleID&quot;) write.table(data, file = &quot;metadataforR.txt&quot;,sep=&quot;\\t&quot;,col.names= T, row.names=F) quit(&quot;no&quot;) 0.12.4 Export UniFrac Matrix cd $PWDa/dada2/core-metrics-results/ cp -r &quot;weighted_unifrac_distance_matrix.qza&quot; $PWDa/R/ cd $PWDa/R/ unzip weighted_unifrac_distance_matrix.qza cd &quot;$(\\ls -1dt ./*/ | head -n 1)/data&quot; sed -e &#39;s/,/\\t/g&#39; distance-matrix.tsv &gt; tmpfile; mv tmpfile weighted_unifrac_distance_matrix.txt cp -r &quot;weighted_unifrac_distance_matrix.txt&quot; $PWDa/R/ 0.12.5 Create local blastable database of representative sequences cd $PWDa/dada2/ cp -r &quot;dada2-rep-seqs.qza&quot; $PWDa/R/ cd $PWDa/R/ unzip dada2-rep-seqs.qza cd &quot;$(\\ls -1dt ./*/ | head -n 1)/data&quot; cp -r &quot;dna-sequences.fasta&quot; $PWDa/R/ cd $PWDa/R/ makeblastdb -in dna-sequences.fasta -dbtype nucl -out RepresentativeSequencesDatabase #blastn -db $PWDa/R/RepresentativeSequencesDatabase -query $PWDa/R/QUERYNAME.fasta -outfmt 6 -num_alignments 1 -num_descriptions 1 -out $PWDa/R/blast_result.txt -dust no -num_threads 22 0.12.6 Export table with relative abundances on phylum levels cd $PWDa/R/ R mydata =read.table(file =&quot;tableforR.txt&quot;, header = T) my = read.table(file =&quot;taxonomyforR.txt&quot;, header = T) x&lt;-merge(my, mydata, by=&quot;FeatureID&quot;) x$FeatureID&lt;-NULL x$Confidence&lt;-NULL x$Taxon&lt;-NULL x$kingdom&lt;-NULL x$class&lt;-NULL x$order&lt;-NULL x$family&lt;-NULL x$genus&lt;-NULL x$species&lt;-NULL fin&lt;-aggregate(. ~ phylum, data = x, sum) rownames(fin) &lt;- fin[,1] fin[,1] &lt;- NULL fin &lt;- droplevels(fin[rowSums(fin) != 0,]) fin &lt;- droplevels(fin[,colSums(fin) != 0]) write.table(fin, file = &quot;fin.txt&quot;,sep=&quot;\\t&quot;,col.names= T, row.names=T) quit(&quot;no&quot;) sed -i -e &#39;s/p__//g&#39; fin.txt echo &quot;__&quot; | awk &#39;{ gsub (&quot;__&quot;, &quot;Unclassified&quot;, $0); print}&#39; fin.txt &gt; fin2.txt sed &quot;s/([^)]*)/()/g&quot; fin2.txt &gt; fin3.txt cat fin3.txt | tr -d &#39;()&#39; &gt; fin4.txt R fin = read.table(file =&quot;fin4.txt&quot;, header = T, row.names=1) phylum &lt;- rownames(fin) rela&lt;-sapply(fin, function(x) x/sum(x),USE.NAMES = TRUE) rela2&lt;-cbind(phylum, rela) write.table(rela2, file = &quot;phylum_relabund.txt&quot;,sep=&quot;\\t&quot;,col.names= T, row.names=F) quit(&quot;no&quot;) R list.of.packages &lt;- c(&quot;tidyr&quot;) new.packages &lt;- list.of.packages[!(list.of.packages %in% installed.packages()[,&quot;Package&quot;])] if(length(new.packages)) install.packages(new.packages, repos=&#39;http://cran.us.r-project.org&#39;) library(tidyr) mydata = read.table(file =&quot;phylum_relabund.txt&quot;, header = T) mydata=as.data.frame(mydata) a&lt;-names(mydata)[1] b&lt;-names(mydata)[ncol(mydata)] data&lt;-gather(mydata,condition, measurement, names(mydata)[2:ncol(mydata)], factor_key=T) dat &lt;- subset(data, condition != &quot;phylum&quot;) names(dat)[names(dat) == &quot;condition&quot;] &lt;- &quot;SampleID&quot; names(dat)[names(dat) == &quot;measurement&quot;] &lt;- &quot;relabund&quot; write.table(dat, file = &quot;phylum_tidlyformat.txt&quot;,sep=&quot;\\t&quot;,col.names= T, row.names=F) quit(&quot;no&quot;) 0.12.7 Export data for SVAmpEx &amp; Clean-up cd $PWDa/R/ rm -- - dada2-tablenochloroplastsmitochondriaUnassigned$var.qza rm -- - weighted_unifrac_distance_matrix.qza rm -r -f -- - taxtable rm -r -f -- - taxonomy rm -- - metadataV34.txt rm -- - list_of_remaining_samples.txt rm -- - dada2-rep-seqs.qza rm -r -f -- - fin.txt rm -r -f -- - fin2.txt rm -r -f -- - fin3.txt rm -r -f -- - fin4.txt rm -r -f -- - -d */ cd $PWDa/ mkdir svampex cd $PWDa/svampex mkdir taxonomy cd $PWDa/R cp -r &quot;phylum_relabund.txt&quot; $PWDa/svampex/taxonomy cd $PWDa/svampex/taxonomy R phy = read.table(file =&quot;phylum_relabund.txt&quot;, header = F, row.names=1) names(phy) = phy[1,] [phy[1,] !=&quot;phylum&quot;] for(i in 1:ncol(phy)){ write.table(phy[,i],row.names = row.names(phy), col.names =F,file=paste0(names(phy)[i],&quot;.txt&quot;)) } quit(&quot;no&quot;) rm -r -f -- - phylum_relabund.txt cd $PWDa/svampex mkdir amplitudes cd $PWDa/R cp -r &quot;phylum_tidlyformat.txt&quot; $PWDa/svampex/amplitudes cp -r &quot;metadataforR.txt&quot; $PWDa/svampex/amplitudes cd $PWDa/svampex/amplitudes R dat=read.table(file =&quot;phylum_tidlyformat.txt&quot;, header = T) meta = read.table(file =&quot;metadataforR.txt&quot;, header = T) fin&lt;-merge(dat, meta, by=&quot;SampleID&quot;) write.table(fin, file = &quot;amplitudes.txt&quot;,sep=&quot;\\t&quot;,col.names= T, row.names=F) quit(&quot;no&quot;) rm -r -f -- - phylum_tidlyformat.txt rm -r -f -- - metadataforR.txt cd $PWDa/ mv $PWDa/trimmed $PWDa/dada2/trimmed 0.13 Diversity indices cd $PWDa/dada2/core-metrics-results/ unzip evenness_vector.qza cd &quot;$(\\ls -1dt ./*/ | head -n 1)/data&quot; sed &#39;s|,|\\t|g&#39; alpha-diversity.tsv &gt; eveness.txt sed -i &#39;1s/^/SampleID /&#39; eveness.txt cp eveness.txt $PWDa/dada2/eveness.txt cd $PWDa/dada2/core-metrics-results/ rm -r -f -- - -d */ unzip faith_pd_vector.qza cd &quot;$(\\ls -1dt ./*/ | head -n 1)/data&quot; sed &#39;s|,|\\t|g&#39; alpha-diversity.tsv &gt; faith_pd_vector.txt sed -i &#39;1s/^/SampleID /&#39; faith_pd_vector.txt cp faith_pd_vector.txt $PWDa/dada2/faith_pd_vector.txt cd $PWDa/dada2/core-metrics-results/ rm -r -f -- - -d */ unzip observed_otus_vector.qza cd &quot;$(\\ls -1dt ./*/ | head -n 1)/data&quot; sed &#39;s|,|\\t|g&#39; alpha-diversity.tsv &gt; observed_otus_vector.txt sed -i &#39;1s/^/SampleID /&#39; observed_otus_vector.txt cp observed_otus_vector.txt $PWDa/dada2/observed_otus_vector.txt cd $PWDa/dada2/core-metrics-results/ rm -r -f -- - -d */ unzip shannon_vector.qza cd &quot;$(\\ls -1dt ./*/ | head -n 1)/data&quot; sed &#39;s|,|\\t|g&#39; alpha-diversity.tsv &gt; shannon_vector.txt sed -i &#39;1s/^/SampleID /&#39; shannon_vector.txt cp shannon_vector.txt $PWDa/dada2/shannon_vector.txt cd $PWDa/dada2/core-metrics-results/ rm -r -f -- - -d */ cd $PWDa/dada2/ R data1&lt;- read.table(file=&quot;eveness.txt&quot;, header =T) data2&lt;- read.table(file=&quot;faith_pd_vector.txt&quot;, header =T) data3&lt;- read.table(file=&quot;observed_otus_vector.txt&quot;, header =T) data4&lt;- read.table(file=&quot;shannon_vector.txt&quot;, header =T) d&lt;-merge(data1,data2, by=&quot;SampleID&quot;) d1&lt;-merge(d,data3, by=&quot;SampleID&quot;) d2&lt;-merge(d1,data4, by=&quot;SampleID&quot;) names(d2)[names(d2) == &quot;observed_otus&quot;] &lt;- &quot;observed_asvs&quot; write.table(d2, file = &quot;alpha_diversity.txt&quot;,sep=&quot;\\t&quot;,col.names= T, row.names=F) quit(&quot;no&quot;) sed &#39;s/&quot;//g&#39; alpha_diversity.txt &gt; alpha_diversity_indices.txt cp alpha_diversity_indices.txt $PWDa/R/alpha_diversity_indices.txt rm -r -f -- - eveness.txt rm -r -f -- - faith_pd_vector.txt rm -r -f -- - observed_otus_vector.txt rm -r -f -- - shannon_vector.txt rm -r -f -- - alpha_diversity.txt rm -r -f -- - alpha_diversity_indices.txt cd $PWDa/R/ R list.of.packages &lt;- c(&quot;gridExtra&quot;, &quot;ggplot2&quot;) new.packages &lt;- list.of.packages[!(list.of.packages %in% installed.packages()[,&quot;Package&quot;])] if(length(new.packages)) install.packages(new.packages, repos=&#39;http://cran.us.r-project.org&#39;) library(ggplot2) library(gridExtra) dat&lt;-read.table(&quot;alpha_diversity_indices.txt&quot;, header=TRUE) metadata&lt;-read.table(&quot;metadataforR.txt&quot;, header=TRUE) data&lt;-merge(dat, metadata, by=&quot;SampleID&quot;) data_summary &lt;- function(x) { m &lt;- mean(x) ymin &lt;- m-sd(x) ymax &lt;- m+sd(x) return(c(y=m,ymin=ymin,ymax=ymax)) } p1 &lt;- ggplot(data, aes(x=sampletype, y=faith_pd, fill=sampletype)) + geom_violin(trim=FALSE) + stat_summary(fun.data=data_summary) + labs(x = &quot;nMDS1&quot;, y=&quot;Faith&#39;s PD&quot;, title=&quot;Faith&#39;s Phylogenetic Diversity&quot;) + scale_fill_manual(values=c(&#39;#a0bed8ff&#39;, &#39;#E69F00&#39;,&#39;#607281&#39;))+ theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = &quot;grey&quot;, size = 1.5, linetype = &quot;solid&quot;), panel.background = element_rect(fill = &quot;#ffffff&quot;,colour = NA), plot.background = element_rect(fill = &#39;#ffffff&#39;), plot.title = element_text(color=&quot;black&quot;, size=20, face=&quot;bold&quot;), legend.position=&quot;none&quot;, legend.title= element_blank(), legend.text=element_text(size=20), legend.background = element_rect(linetype = &#39;dotted&#39;, size = 1, colour = 1), axis.title.x = element_blank(), axis.text.x = element_text(color=&quot;black&quot;, size=20, face=&quot;bold&quot;), axis.title.y = element_text(color=&quot;black&quot;, size=20, face=&quot;bold&quot;), axis.text.y = element_text(face=&quot;plain&quot;, color=&quot;black&quot;,size=18, angle=0)) p2 &lt;- ggplot(data, aes(x=sampletype, y=pielou_e, fill=sampletype)) + geom_violin(trim=FALSE) + stat_summary(fun.data=data_summary) + labs(x = &quot;nMDS1&quot;, y=&quot;Pielou&#39;s evenness&quot;, title=&quot;Pielou&#39;s evenness&quot;) + scale_fill_manual(values=c(&#39;#a0bed8ff&#39;, &#39;#E69F00&#39;,&#39;#607281&#39;))+ theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = &quot;grey&quot;, size = 1.5, linetype = &quot;solid&quot;), panel.background = element_rect(fill = &quot;#ffffff&quot;,colour = NA), plot.background = element_rect(fill = &#39;#ffffff&#39;), plot.title = element_text(color=&quot;black&quot;, size=20, face=&quot;bold&quot;), legend.position=&quot;none&quot;, legend.title= element_blank(), legend.text=element_text(size=20), legend.background = element_rect(linetype = &#39;dotted&#39;, size = 1, colour = 1), axis.title.x = element_blank(), axis.text.x = element_text(color=&quot;black&quot;, size=20, face=&quot;bold&quot;), axis.title.y = element_text(color=&quot;black&quot;, size=20, face=&quot;bold&quot;), axis.text.y = element_text(face=&quot;plain&quot;, color=&quot;black&quot;,size=18, angle=0)) p3 &lt;- ggplot(data, aes(x=sampletype, y=observed_asvs, fill=sampletype)) + geom_violin(trim=FALSE) + stat_summary(fun.data=data_summary) + labs(x = &quot;nMDS1&quot;, y=&quot;Number of observed ASVs&quot;, title=&quot;Number of observed ASVs&quot;) + scale_fill_manual(values=c(&#39;#a0bed8ff&#39;, &#39;#E69F00&#39;,&#39;#607281&#39;))+ theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = &quot;grey&quot;, size = 1.5, linetype = &quot;solid&quot;), panel.background = element_rect(fill = &quot;#ffffff&quot;,colour = NA), plot.background = element_rect(fill = &#39;#ffffff&#39;), plot.title = element_text(color=&quot;black&quot;, size=20, face=&quot;bold&quot;), legend.position=&quot;none&quot;, legend.title= element_blank(), legend.text=element_text(size=20), legend.background = element_rect(linetype = &#39;dotted&#39;, size = 1, colour = 1), axis.title.x = element_blank(), axis.text.x = element_text(color=&quot;black&quot;, size=20, face=&quot;bold&quot;), axis.title.y = element_text(color=&quot;black&quot;, size=20, face=&quot;bold&quot;), axis.text.y = element_text(face=&quot;plain&quot;, color=&quot;black&quot;,size=18, angle=0)) p4 &lt;- ggplot(data, aes(x=sampletype, y=shannon, fill=sampletype)) + geom_violin(trim=FALSE) + stat_summary(fun.data=data_summary) + labs(x = &quot;nMDS1&quot;, y=&quot;Shannon Index&quot;, title=&quot;Shannon Index&quot;) + scale_fill_manual(values=c(&#39;#a0bed8ff&#39;, &#39;#E69F00&#39;,&#39;#607281&#39;))+ theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = &quot;grey&quot;, size = 1.5, linetype = &quot;solid&quot;), panel.background = element_rect(fill = &quot;#ffffff&quot;,colour = NA), plot.background = element_rect(fill = &#39;#ffffff&#39;), plot.title = element_text(color=&quot;black&quot;, size=20, face=&quot;bold&quot;), legend.position=&quot;none&quot;, legend.title= element_blank(), legend.text=element_text(size=20), legend.background = element_rect(linetype = &#39;dotted&#39;, size = 1, colour = 1), axis.title.x = element_blank(), axis.text.x = element_text(color=&quot;black&quot;, size=20, face=&quot;bold&quot;), axis.title.y = element_text(color=&quot;black&quot;, size=20, face=&quot;bold&quot;), axis.text.y = element_text(face=&quot;plain&quot;, color=&quot;black&quot;,size=18, angle=0)) pdf(file=&quot;alpha_diversity.pdf&quot;, height= 20, width= 20) grid.arrange(p1, p2 , p3, p4, nrow=2) dev.off() quit(&quot;no&quot;) cd $PWDa/dada2/core-metrics-results/ unzip bray_curtis_distance_matrix.qza cd &quot;$(\\ls -1dt ./*/ | head -n 1)/data&quot; sed -e &#39;s/,/\\t/g&#39; distance-matrix.tsv &gt; tmpfile; mv tmpfile bray_curtis_distance_matrix.txt cp -r &quot;bray_curtis_distance_matrix.txt&quot; $PWDa/R/ cd $PWDa/dada2/core-metrics-results/ rm -r -f -- - -d */ unzip jaccard_distance_matrix.qza cd &quot;$(\\ls -1dt ./*/ | head -n 1)/data&quot; sed -e &#39;s/,/\\t/g&#39; distance-matrix.tsv &gt; tmpfile; mv tmpfile jaccard_distance_matrix.txt cp -r &quot;jaccard_distance_matrix.txt&quot; $PWDa/R/ cd $PWDa/dada2/core-metrics-results/ rm -r -f -- - -d */ unzip unweighted_unifrac_distance_matrix.qza cd &quot;$(\\ls -1dt ./*/ | head -n 1)/data&quot; sed -e &#39;s/,/\\t/g&#39; distance-matrix.tsv &gt; tmpfile; mv tmpfile unweighted_unifrac_distance_matrix.txt cp -r &quot;unweighted_unifrac_distance_matrix.txt&quot; $PWDa/R/ cd $PWDa/dada2/core-metrics-results/ rm -r -f -- - -d */ cd $PWDa/R/ R list.of.packages &lt;- c(&quot;gridExtra&quot;, &quot;ggplot2&quot;,&quot;MASS&quot;, &quot;vegan&quot;) new.packages &lt;- list.of.packages[!(list.of.packages %in% installed.packages()[,&quot;Package&quot;])] if(length(new.packages)) install.packages(new.packages, repos=&#39;http://cran.us.r-project.org&#39;) library(vegan) library(MASS) library(ggplot2) library(gridExtra) set.seed(201) community_matrix = read.table(file =&quot;weighted_unifrac_distance_matrix.txt&quot;, header = T) mydata = read.table(file =&quot;metadataforR.txt&quot;, header = T) weighted_uni_NMDS &lt;- metaMDS(community_matrix,k=50, maxit=100,trace=TRUE) stress_NMDS_weighted_uni &lt;-weighted_uni_NMDS$stress stress_NMDS_weighted_uni &lt;-round(stress_NMDS_weighted_uni, digits = 3) NMDS_weighted_uni = data.frame(MDS1 = weighted_uni_NMDS$points[,1], MDS2 = weighted_uni_NMDS$points[,2]) p1 &lt;-ggplot(data = NMDS_weighted_uni, aes(MDS1, MDS2, col=mydata$sampletype, shape=mydata$blank)) + geom_point(size=6, alpha=0.5) + labs(x = &quot;nMDS1&quot;, y=&quot;nMDS2&quot;, title=&quot;Weighted UniFrac distances&quot;) + annotate(&quot;text&quot;, max(NMDS_weighted_uni$MDS1)-0.05, min(NMDS_weighted_uni$MDS2), label = paste(&quot;Stress: &quot;, stress_NMDS_weighted_uni) , size=7, parse=TRUE) + scale_color_manual(values=c(&#39;#a0bed8ff&#39;, &#39;#E69F00&#39;,&#39;#607281&#39;))+ theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = &quot;grey&quot;, size = 1.5, linetype = &quot;solid&quot;), panel.background = element_rect(fill = &quot;#ffffff&quot;,colour = NA), plot.background = element_rect(fill = &#39;#ffffff&#39;), legend.position=&quot;top&quot;, legend.title= element_blank(), legend.text=element_text(size=20), legend.background = element_rect(linetype = &#39;dotted&#39;, size = 1, colour = 1), plot.title = element_text(color=&quot;black&quot;, size=20, face=&quot;bold&quot;), axis.title.x = element_text(color=&quot;black&quot;, size=20, face=&quot;bold&quot;), axis.text.x = element_text(face=&quot;plain&quot;, color=&quot;black&quot;,size=18, angle=0), axis.title.y = element_text(color=&quot;black&quot;, size=20, face=&quot;bold&quot;), axis.text.y = element_text(face=&quot;plain&quot;, color=&quot;black&quot;,size=18, angle=0)) community_matrix = read.table(file =&quot;unweighted_unifrac_distance_matrix.txt&quot;, header = T) mydata = read.table(file =&quot;metadataforR.txt&quot;, header = T) unweighted_uni_NMDS &lt;- metaMDS(community_matrix,k=50, maxit=100,trace=TRUE) stress_NMDS_unweighted_uni &lt;-unweighted_uni_NMDS$stress stress_NMDS_unweighted_uni &lt;-round(stress_NMDS_unweighted_uni, digits = 3) NMDS_unweighted_uni = data.frame(MDS1 = unweighted_uni_NMDS$points[,1], MDS2 = unweighted_uni_NMDS$points[,2]) p2 &lt;-ggplot(data = NMDS_unweighted_uni, aes(MDS1, MDS2, col=mydata$sampletype, shape=mydata$blank)) + geom_point(size=6, alpha=0.5) + labs(x = &quot;nMDS1&quot;, y=&quot;nMDS2&quot;, title=&quot;Unweighted UniFrac distances&quot;) + annotate(&quot;text&quot;, max(NMDS_unweighted_uni$MDS1)-0.05, min(NMDS_unweighted_uni$MDS2), label = paste(&quot;Stress: &quot;, stress_NMDS_unweighted_uni) , size=7, parse=TRUE) + scale_color_manual(values=c(&#39;#a0bed8ff&#39;, &#39;#E69F00&#39;,&#39;#607281&#39;))+ theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = &quot;grey&quot;, size = 1.5, linetype = &quot;solid&quot;), panel.background = element_rect(fill = &quot;#ffffff&quot;,colour = NA), plot.background = element_rect(fill = &#39;#ffffff&#39;), legend.position=&quot;top&quot;, legend.title= element_blank(), legend.text=element_text(size=20), legend.background = element_rect(linetype = &#39;dotted&#39;, size = 1, colour = 1), plot.title = element_text(color=&quot;black&quot;, size=20, face=&quot;bold&quot;), axis.title.x = element_text(color=&quot;black&quot;, size=20, face=&quot;bold&quot;), axis.text.x = element_text(face=&quot;plain&quot;, color=&quot;black&quot;,size=18, angle=0), axis.title.y = element_text(color=&quot;black&quot;, size=20, face=&quot;bold&quot;), axis.text.y = element_text(face=&quot;plain&quot;, color=&quot;black&quot;,size=18, angle=0)) community_matrix = read.table(file =&quot;bray_curtis_distance_matrix.txt&quot;, header = T) mydata = read.table(file =&quot;metadataforR.txt&quot;, header = T) bray_curtis_NMDS &lt;- metaMDS(community_matrix,k=50, maxit=100,trace=TRUE) stress_NMDS_bray_curtis &lt;-bray_curtis_NMDS$stress stress_NMDS_bray_curtis &lt;-round(stress_NMDS_bray_curtis, digits = 3) NMDS_bray_curtis = data.frame(MDS1 = bray_curtis_NMDS$points[,1], MDS2 = bray_curtis_NMDS$points[,2]) p3 &lt;-ggplot(data = NMDS_bray_curtis, aes(MDS1, MDS2, col=mydata$sampletype, shape=mydata$blank)) + geom_point(size=6, alpha=0.5) + labs(x = &quot;nMDS1&quot;, y=&quot;nMDS2&quot;, title=&quot;Bray-Curtis distances&quot;) + annotate(&quot;text&quot;, max(NMDS_bray_curtis$MDS1)-0.05, min(NMDS_bray_curtis$MDS2), label = paste(&quot;Stress: &quot;, stress_NMDS_bray_curtis) , size=7, parse=TRUE) + scale_color_manual(values=c(&#39;#a0bed8ff&#39;, &#39;#E69F00&#39;,&#39;#607281&#39;))+ theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = &quot;grey&quot;, size = 1.5, linetype = &quot;solid&quot;), panel.background = element_rect(fill = &quot;#ffffff&quot;,colour = NA), plot.background = element_rect(fill = &#39;#ffffff&#39;), legend.position=&quot;top&quot;, legend.title= element_blank(), legend.text=element_text(size=20), legend.background = element_rect(linetype = &#39;dotted&#39;, size = 1, colour = 1), plot.title = element_text(color=&quot;black&quot;, size=20, face=&quot;bold&quot;), axis.title.x = element_text(color=&quot;black&quot;, size=20, face=&quot;bold&quot;), axis.text.x = element_text(face=&quot;plain&quot;, color=&quot;black&quot;,size=18, angle=0), axis.title.y = element_text(color=&quot;black&quot;, size=20, face=&quot;bold&quot;), axis.text.y = element_text(face=&quot;plain&quot;, color=&quot;black&quot;,size=18, angle=0)) community_matrix = read.table(file =&quot;jaccard_distance_matrix.txt&quot;, header = T) mydata = read.table(file =&quot;metadataforR.txt&quot;, header = T) jaccard_NMDS &lt;- metaMDS(community_matrix,k=50, maxit=100,trace=TRUE) stress_NMDS_jaccard &lt;-jaccard_NMDS$stress stress_NMDS_jaccard &lt;-round(stress_NMDS_jaccard, digits = 3) NMDS_jaccard = data.frame(MDS1 = jaccard_NMDS$points[,1], MDS2 = jaccard_NMDS$points[,2]) p4 &lt;-ggplot(data = NMDS_jaccard, aes(MDS1, MDS2, col=mydata$sampletype, shape=mydata$blank)) + geom_point(size=6, alpha=0.5) + labs(x = &quot;nMDS1&quot;, y=&quot;nMDS2&quot;, title=&quot;Jaccard distances&quot;) + annotate(&quot;text&quot;, max(NMDS_jaccard$MDS1)-0.05, min(NMDS_jaccard$MDS2), label = paste(&quot;Stress: &quot;, stress_NMDS_jaccard) , size=7, parse=TRUE) + scale_color_manual(values=c(&#39;#a0bed8ff&#39;, &#39;#E69F00&#39;,&#39;#607281&#39;))+ theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = &quot;grey&quot;, size = 1.5, linetype = &quot;solid&quot;), panel.background = element_rect(fill = &quot;#ffffff&quot;,colour = NA), plot.background = element_rect(fill = &#39;#ffffff&#39;), plot.title = element_text(color=&quot;black&quot;, size=20, face=&quot;bold&quot;), legend.position=&quot;top&quot;, legend.title= element_blank(), legend.text=element_text(size=20), legend.background = element_rect(linetype = &#39;dotted&#39;, size = 1, colour = 1), axis.title.x = element_text(color=&quot;black&quot;, size=20, face=&quot;bold&quot;), axis.text.x = element_text(face=&quot;plain&quot;, color=&quot;black&quot;,size=18, angle=0), axis.title.y = element_text(color=&quot;black&quot;, size=20, face=&quot;bold&quot;), axis.text.y = element_text(face=&quot;plain&quot;, color=&quot;black&quot;,size=18, angle=0)) pdf(file=&quot;beta_diversity.pdf&quot;, height= 20, width= 20) grid.arrange(p1, p2 , p3, p4, nrow=2) dev.off() quit(&quot;no&quot;) cd $PWDa/ mv $PWDa/silva138 $PWDa/dada2/silva138 body{ /* Normal */ font-size: 18px; color: Black; } td { /* Table */ font-size: 8px; } h1.title { font-size: 58px; color: Black; } h1 { /* Header 1 */ font-size: 40px; color: Black; } h2 { /* Header 2 */ font-size: 22px; color: #cecece; } h3 { /* Header 3 */ font-size: 18px; font-family: \"Times New Roman\", Times, serif; color: #cecece; } code.r{ /* Code block */ font-size: 12px; } pre { /* Code block - determines code spacing between lines */ font-size: 14px; } "]
]
